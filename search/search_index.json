{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Android \u5f00\u53d1\u5b66\u4e60\u7b14\u8bb0 \u00b6 Java \u00b6 Java \u57fa\u7840 Java \u8fdb\u9636 Head First Java kotlin \u57fa\u7840 \u00b6 kotlin \u5b66\u4e60\u7b14\u8bb0 Android \u57fa\u7840 \u00b6 Android \u7b2c\u4e00\u884c\u4ee3\u7801 Flutter \u57fa\u7840 \u00b6 Flutter Dart Flutter \u5b9e\u4f8b Design Patterns \u00b6 \u5927\u8bdd\u8bbe\u8ba1\u6a21\u5f0f \u5de5\u4f5c \u00b6 BLE \u4f4e\u529f\u8017\u84dd\u7259\u901a\u4fe1 \u5de5\u4f5c\u95ee\u9898\u8bb0\u5f55","title":"\u9996\u9875"},{"location":"#android","text":"","title":"Android \u5f00\u53d1\u5b66\u4e60\u7b14\u8bb0"},{"location":"#java","text":"Java \u57fa\u7840 Java \u8fdb\u9636 Head First Java","title":"Java"},{"location":"#kotlin","text":"kotlin \u5b66\u4e60\u7b14\u8bb0","title":"kotlin\u57fa\u7840"},{"location":"#android_1","text":"Android \u7b2c\u4e00\u884c\u4ee3\u7801","title":"Android\u57fa\u7840"},{"location":"#flutter","text":"Flutter Dart Flutter \u5b9e\u4f8b","title":"Flutter\u57fa\u7840"},{"location":"#design-patterns","text":"\u5927\u8bdd\u8bbe\u8ba1\u6a21\u5f0f","title":"Design Patterns"},{"location":"#_1","text":"BLE \u4f4e\u529f\u8017\u84dd\u7259\u901a\u4fe1 \u5de5\u4f5c\u95ee\u9898\u8bb0\u5f55","title":"\u5de5\u4f5c"},{"location":"Android%E5%9F%BA%E7%A1%80/","text":"Android\u5b66\u4e60\u535a\u5ba2 \u4e00\u3001\u89c4\u8303 \u00b6 \uff08\u4e00\uff09XML \u00b6 Button \u957f\u5bbd\u4e0d\u5f97\u4f4e\u4e8e 48dp \uff0c\u5426\u5219\u5728\u9ad8\u5206\u8fa8\u7387\u7684\u8bbe\u5907\u4e2d\u4f1a\u5f88\u5c0f\u3002 \uff08 48dp \u7ea6\u4e3a 9mm \uff09 \uff08\u4e8c\uff09\u4f7f\u7528\u7edf\u4e00\u6807\u51c6\u5b57\u53f7 \u00b6 1 2 3 4 <TextView ... android:TextApperance= \"?android:textAppertanceLarge\" /> \uff08\u4e09\uff09\u63a7\u4ef6\u95f4\u8ddd \u00b6 margin \u548c padding \u7684\u5927\u5c0f\u5efa\u8bae\u4ee5 8dp \u4e3a\u5355\u4f4d\uff0c\u4ee5\u5b83\u7684\u500d\u6570\u6765\u8bbe\u7f6e\u3002 \u4e8c\u3001\u5e03\u5c40 \u00b6 \uff08\u4e00\uff09\u56fe\u7247\u9002\u914d\u5c4f\u5e55 \u00b6 scaleType \u5c5e\u6027\uff1a center \u4e0e centerCrop \u5f53\u56fe\u7247\u5927\u5c0f\u5927\u4e8e\u5c4f\u5e55\u65f6\uff0c center \u4e0d\u4f1a\u6539\u53d8\u56fe\u7247\u5927\u5c0f\uff0c\u76f4\u63a5\u5c45\u4e2d\u663e\u793a\uff1b centerCrop \u4f1a\u6309\u6bd4\u4f8b\u7f29\u5c0f\u5230\u5c4f\u5e55\u5c3a\u5bf8\uff0c\u5e76\u5c45\u4e2d\u663e\u793a\u3002 \u5f53\u56fe\u7247\u5927\u5c0f\u5c0f\u4e8e\u5c4f\u5e55\u65f6\uff0c\u82e5 ImageView \u7684\u5927\u5c0f\u6ca1\u6709\u56fa\u5b9a\uff0c\u4e24\u4e2a\u53c2\u6570\u5747\u65e0\u6548\uff1b\u5f53\u628a ImageView \u7684\u5927\u5c0f\u56fa\u5b9a\u4e3a\u8d85\u8fc7\u5c4f\u5e55\u5c3a\u5bf8\u65f6\uff0c center \u5c06\u5c45\u4e2d\u663e\u793a\uff0c centerCrop \u5c06\u6309\u6bd4\u4f8b\u653e\u5927\u56fe\u7247\uff0c\u81ea\u9002\u5e94\u5230 ImageView \u7684\u5927\u5c0f\u5c45\u4e2d\u663e\u793a\u3002 \u56fa\u5b9a ImageView \u7684\u5927\u5c0f\u540e\uff1a \uff08\u4e8c\uff09\u5706\u89d2\u5e03\u5c40 \u00b6 Drawable \u4e2d\u521b\u5efa xml \u6587\u4ef6\uff0c\u8bbe\u7f6e\u4e3a\u63a7\u4ef6\u7684\u80cc\u666f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <shape xmlns:android= \"http://schemas.android.com/apk/res/android\" > <solid android:color= \"#FFFFFF\" /> <!-- \u8fb9\u7f18 --> <stroke android:width= \"3dp\" android:color= \"#B1BCBE\" /> <!-- \u5706\u89d2\u534a\u5f84 --> <corners android:radius= \"10dp\" /> <!-- \u5185\u8fb9\u8ddd --> <padding android:left= \"0dp\" android:top= \"0dp\" android:right= \"0dp\" android:bottom= \"0dp\" /> </shape> \u4e09\u3001\u5b89\u5353\u56db\u5927\u7ec4\u4ef6 \u00b6 \uff08\u4e00\uff09Activity \u00b6 \u4e00\u4e2aActivity\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7a97\u53e3/\u5c4f\u5e55\u3002 \uff08\u4e8c\uff09Service \u00b6 startService() \u53ef\u4ee5\u7531\u5176\u4ed6\u7ec4\u4ef6\u8c03\u7528\uff0c\u8be5\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u540e\uff0c Service \u4f9d\u65e7\u53ef\u4ee5\u4fdd\u6301\u542f\u52a8\u72b6\u6001\u4e0d\u53d7\u5f71\u54cd\u3002\u7528 stopService() \u5173\u95ed\u3002 BindService() \uff0c Service \u4e0e\u8c03\u7528\u8005\u7684\u751f\u547d\u5468\u671f\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u5373\u201c\u4e0d\u6c42\u540c\u65f6\u751f\uff0c\u5fc5\u987b\u540c\u65f6\u6b7b\u201d\u3002\u7528 unBindService() \u5173\u95ed\u3002 \uff08\u4e09\uff09content provider \u00b6 \u9700\u8981\u5728\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u95f4\u5171\u4eab\u6570\u636e\u65f6\uff0c\u624d\u9700\u8981content provider\u3002\u5b83\u5c06\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u6307\u5b9a\u6570\u636e\u96c6\u63d0\u4f9b\u7ed9\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u3002 Content Provider\u7528\u4e8e\u4fdd\u5b58\u548c\u83b7\u53d6\u6570\u636e\uff0c\u5e76\u4f7f\u5176\u5bf9\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u53ef\u89c1\u3002\u8fd9\u662f\u4e0d\u540c\u5e94\u7528\u7a0b\u5e8f\u95f4\u5171\u4eab\u6570\u636e\u7684\u552f\u4e00\u65b9\u5f0f\uff0c\u56e0\u4e3aandroid\u6ca1\u6709\u63d0\u4f9b\u6240\u6709\u5e94\u7528\u5171\u540c\u8bbf\u95ee\u7684\u516c\u5171\u5b58\u50a8\u533a\u3002 \uff08\u56db\uff09broadcast receiver \u00b6 \u5728AndroidManifest\u6587\u4ef6\u4e2d\u8fdb\u884c\u914d\u7f6e\u7684\u5e7f\u64ad\u63a5\u6536\u8005\uff08\u9759\u6001\u6ce8\u518c\uff09\uff0c\u4f1a\u968f\u7cfb\u7edf\u7684\u542f\u52a8\u800c\u4e00\u76f4\u5904\u4e8e\u6d3b\u8dc3\u72b6\u6001\uff0c\u53ea\u8981\u63a5\u6536\u5230\u611f\u5174\u8da3\u7684\u5e7f\u64ad\u5c31\u4f1a\u89e6\u53d1\uff08\u5373\u4f7f\u7a0b\u5e8f\u672a\u8fd0\u884c\uff09\u3002 \u5f53\u53d1\u751f\u7535\u8bdd\u547c\u5165/\u6570\u636e\u7f51\u7edc\u53ef\u7528\u7b49\u4e8b\u4ef6\u65f6\uff0c\u53ef\u901a\u8fc7\u5e7f\u64ad\u63a5\u6536\u5668\u8fdb\u884c\u63a5\u6536\u5e76\u505a\u51fa\u54cd\u5e94\u3002\u5b83\u6ca1\u6709\u7528\u6237\u754c\u9762\u3002\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a activity \u6216 service \u6765\u54cd\u5e94\u5b83\u4eec\u6536\u5230\u7684\u4fe1\u606f\uff0c\u6216\u8005\u7528 NotificationManager \u6765\u901a\u77e5\u7528\u6237\u3002 \uff08\u4e94\uff09android\u4e2d\u7684\u4efb\u52a1\uff08activity\u6808\uff09 \u00b6 \u6808\u9876\u662f\u5f53\u524d\u8fd0\u884c\u7684 Activity \uff0c\u65b0\u7684\u5728\u6808\u9876\u5165\u6808\uff0c\u8fd4\u56de\u65f6\u51fa\u6808\u3002 \u6808\u4e2d\u7684 Activity \u6c38\u8fdc\u4e0d\u4f1a\u91cd\u6392\uff0c\u53ea\u4f1a\u538b\u5165\u6216\u5f39\u51fa\u3002 \uff08\u516d\uff09Activity\u643a\u5e26\u6570\u636e\u8df3\u8f6c \u00b6 \u4ece Activity A \u8df3\u8f6c\u5230 Activity B Activity A 1 2 3 4 5 // \u4eceA\u4e2d\u6253\u5f00B var intent = Intent () intent . putExtra ( \"data\" , \"hello\" ) intent . setClass ( this , B :: class . java ) //(\u5f53\u524dActivity\uff0c\u76ee\u6807Activity) startActivityForResult ( intent , 1 ) // 1\u662f\u8bf7\u6c42\u7684\u6807\u8bc6requestCode 1 2 3 4 5 6 7 8 9 10 /** * Activity A\u4e2d\u6536\u53d6\u4eceB\u8fd4\u56de\u5f97\u5230\u7684\u6570\u636e * requestCode A\u8bf7\u6c42\u7684\u6807\u8bc6 * resultCode \u4eceB\u8fd4\u56de\u7684\u6807\u8bc6 * data \u4eceB\u8fd4\u56de\u7684\u6570\u636e */ override fun onActivityResult ( requestCode : Int , resultCode : Int , data : Intent?) { super . onActivityResult ( requestCode , resultCode , data ) // ... } Activity B 1 2 3 4 5 // \u8fd4\u56de\u6570\u636e var data = Intent () data . putExtra ( \"data\" , \"\u56de\u4f20\u6570\u636e\" ) setResult ( 2 , data ); // 2\u662f\u8fd4\u56de\u7684\u6807\u8bc6resultCode finish () \u56db\u3001\u5e38\u7528\u8bbe\u8ba1\u6a21\u5f0f \u00b6 \uff08\u4e00\uff09 \u89c2\u5bdf\u8005\u6a21\u5f0f \u00b6 \u4f7f\u7528LiveData/MutableLiveData\u548cObserver\u8fdb\u884c\u6570\u636e\u89c2\u6d4b\uff1a \u5728LiveData\u4e2d\u653e\u5165\u9700\u8981\u88ab\u89c2\u6d4b\u7684\u6570\u636e 1 val data = LiveData < Int > () \u521b\u5efaObserver\uff0c\u8868\u660e\u8be5\u6570\u636e\u53d8\u5316\u540e\u8981\u8fdb\u884c\u7684\u64cd\u4f5c 1 2 3 4 5 val myObserver = Observer < Int > { if ( it == 1 ){ // \u4e00\u4e9b\u88ab\u89e6\u53d1\u7684\u64cd\u4f5c } } \u89c2\u5bdf 1 data . observe ( this , loginObserver ) \u6570\u636e\u6539\u53d8 1 data.postValue(1) \u8fd9\u6837\uff0c\u5f53 data \u53d1\u751f\u6539\u53d8\u65f6\u5c31\u4f1a\u89e6\u53d1 myObserver \u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002 \u4e94\u3001\u5e38\u7528\u7ec4\u4ef6 \u00b6 \uff08\u4e00\uff09 navigation \u00b6 \u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/mq2553299/article/details/80445952 \u5b98\u65b9\u6559\u7a0b\uff1a https://developer.android.com/guide/navigation","title":"Android\u57fa\u7840"},{"location":"Android%E5%9F%BA%E7%A1%80/#_1","text":"","title":"\u4e00\u3001\u89c4\u8303"},{"location":"Android%E5%9F%BA%E7%A1%80/#xml","text":"Button \u957f\u5bbd\u4e0d\u5f97\u4f4e\u4e8e 48dp \uff0c\u5426\u5219\u5728\u9ad8\u5206\u8fa8\u7387\u7684\u8bbe\u5907\u4e2d\u4f1a\u5f88\u5c0f\u3002 \uff08 48dp \u7ea6\u4e3a 9mm \uff09","title":"\uff08\u4e00\uff09XML"},{"location":"Android%E5%9F%BA%E7%A1%80/#_2","text":"1 2 3 4 <TextView ... android:TextApperance= \"?android:textAppertanceLarge\" />","title":"\uff08\u4e8c\uff09\u4f7f\u7528\u7edf\u4e00\u6807\u51c6\u5b57\u53f7"},{"location":"Android%E5%9F%BA%E7%A1%80/#_3","text":"margin \u548c padding \u7684\u5927\u5c0f\u5efa\u8bae\u4ee5 8dp \u4e3a\u5355\u4f4d\uff0c\u4ee5\u5b83\u7684\u500d\u6570\u6765\u8bbe\u7f6e\u3002","title":"\uff08\u4e09\uff09\u63a7\u4ef6\u95f4\u8ddd"},{"location":"Android%E5%9F%BA%E7%A1%80/#_4","text":"","title":"\u4e8c\u3001\u5e03\u5c40"},{"location":"Android%E5%9F%BA%E7%A1%80/#_5","text":"scaleType \u5c5e\u6027\uff1a center \u4e0e centerCrop \u5f53\u56fe\u7247\u5927\u5c0f\u5927\u4e8e\u5c4f\u5e55\u65f6\uff0c center \u4e0d\u4f1a\u6539\u53d8\u56fe\u7247\u5927\u5c0f\uff0c\u76f4\u63a5\u5c45\u4e2d\u663e\u793a\uff1b centerCrop \u4f1a\u6309\u6bd4\u4f8b\u7f29\u5c0f\u5230\u5c4f\u5e55\u5c3a\u5bf8\uff0c\u5e76\u5c45\u4e2d\u663e\u793a\u3002 \u5f53\u56fe\u7247\u5927\u5c0f\u5c0f\u4e8e\u5c4f\u5e55\u65f6\uff0c\u82e5 ImageView \u7684\u5927\u5c0f\u6ca1\u6709\u56fa\u5b9a\uff0c\u4e24\u4e2a\u53c2\u6570\u5747\u65e0\u6548\uff1b\u5f53\u628a ImageView \u7684\u5927\u5c0f\u56fa\u5b9a\u4e3a\u8d85\u8fc7\u5c4f\u5e55\u5c3a\u5bf8\u65f6\uff0c center \u5c06\u5c45\u4e2d\u663e\u793a\uff0c centerCrop \u5c06\u6309\u6bd4\u4f8b\u653e\u5927\u56fe\u7247\uff0c\u81ea\u9002\u5e94\u5230 ImageView \u7684\u5927\u5c0f\u5c45\u4e2d\u663e\u793a\u3002 \u56fa\u5b9a ImageView \u7684\u5927\u5c0f\u540e\uff1a","title":"\uff08\u4e00\uff09\u56fe\u7247\u9002\u914d\u5c4f\u5e55"},{"location":"Android%E5%9F%BA%E7%A1%80/#_6","text":"Drawable \u4e2d\u521b\u5efa xml \u6587\u4ef6\uff0c\u8bbe\u7f6e\u4e3a\u63a7\u4ef6\u7684\u80cc\u666f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <shape xmlns:android= \"http://schemas.android.com/apk/res/android\" > <solid android:color= \"#FFFFFF\" /> <!-- \u8fb9\u7f18 --> <stroke android:width= \"3dp\" android:color= \"#B1BCBE\" /> <!-- \u5706\u89d2\u534a\u5f84 --> <corners android:radius= \"10dp\" /> <!-- \u5185\u8fb9\u8ddd --> <padding android:left= \"0dp\" android:top= \"0dp\" android:right= \"0dp\" android:bottom= \"0dp\" /> </shape>","title":"\uff08\u4e8c\uff09\u5706\u89d2\u5e03\u5c40"},{"location":"Android%E5%9F%BA%E7%A1%80/#_7","text":"","title":"\u4e09\u3001\u5b89\u5353\u56db\u5927\u7ec4\u4ef6"},{"location":"Android%E5%9F%BA%E7%A1%80/#activity","text":"\u4e00\u4e2aActivity\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7a97\u53e3/\u5c4f\u5e55\u3002","title":"\uff08\u4e00\uff09Activity"},{"location":"Android%E5%9F%BA%E7%A1%80/#service","text":"startService() \u53ef\u4ee5\u7531\u5176\u4ed6\u7ec4\u4ef6\u8c03\u7528\uff0c\u8be5\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u540e\uff0c Service \u4f9d\u65e7\u53ef\u4ee5\u4fdd\u6301\u542f\u52a8\u72b6\u6001\u4e0d\u53d7\u5f71\u54cd\u3002\u7528 stopService() \u5173\u95ed\u3002 BindService() \uff0c Service \u4e0e\u8c03\u7528\u8005\u7684\u751f\u547d\u5468\u671f\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u5373\u201c\u4e0d\u6c42\u540c\u65f6\u751f\uff0c\u5fc5\u987b\u540c\u65f6\u6b7b\u201d\u3002\u7528 unBindService() \u5173\u95ed\u3002","title":"\uff08\u4e8c\uff09Service"},{"location":"Android%E5%9F%BA%E7%A1%80/#content-provider","text":"\u9700\u8981\u5728\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u95f4\u5171\u4eab\u6570\u636e\u65f6\uff0c\u624d\u9700\u8981content provider\u3002\u5b83\u5c06\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u6307\u5b9a\u6570\u636e\u96c6\u63d0\u4f9b\u7ed9\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u3002 Content Provider\u7528\u4e8e\u4fdd\u5b58\u548c\u83b7\u53d6\u6570\u636e\uff0c\u5e76\u4f7f\u5176\u5bf9\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u53ef\u89c1\u3002\u8fd9\u662f\u4e0d\u540c\u5e94\u7528\u7a0b\u5e8f\u95f4\u5171\u4eab\u6570\u636e\u7684\u552f\u4e00\u65b9\u5f0f\uff0c\u56e0\u4e3aandroid\u6ca1\u6709\u63d0\u4f9b\u6240\u6709\u5e94\u7528\u5171\u540c\u8bbf\u95ee\u7684\u516c\u5171\u5b58\u50a8\u533a\u3002","title":"\uff08\u4e09\uff09content provider"},{"location":"Android%E5%9F%BA%E7%A1%80/#broadcast-receiver","text":"\u5728AndroidManifest\u6587\u4ef6\u4e2d\u8fdb\u884c\u914d\u7f6e\u7684\u5e7f\u64ad\u63a5\u6536\u8005\uff08\u9759\u6001\u6ce8\u518c\uff09\uff0c\u4f1a\u968f\u7cfb\u7edf\u7684\u542f\u52a8\u800c\u4e00\u76f4\u5904\u4e8e\u6d3b\u8dc3\u72b6\u6001\uff0c\u53ea\u8981\u63a5\u6536\u5230\u611f\u5174\u8da3\u7684\u5e7f\u64ad\u5c31\u4f1a\u89e6\u53d1\uff08\u5373\u4f7f\u7a0b\u5e8f\u672a\u8fd0\u884c\uff09\u3002 \u5f53\u53d1\u751f\u7535\u8bdd\u547c\u5165/\u6570\u636e\u7f51\u7edc\u53ef\u7528\u7b49\u4e8b\u4ef6\u65f6\uff0c\u53ef\u901a\u8fc7\u5e7f\u64ad\u63a5\u6536\u5668\u8fdb\u884c\u63a5\u6536\u5e76\u505a\u51fa\u54cd\u5e94\u3002\u5b83\u6ca1\u6709\u7528\u6237\u754c\u9762\u3002\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a activity \u6216 service \u6765\u54cd\u5e94\u5b83\u4eec\u6536\u5230\u7684\u4fe1\u606f\uff0c\u6216\u8005\u7528 NotificationManager \u6765\u901a\u77e5\u7528\u6237\u3002","title":"\uff08\u56db\uff09broadcast receiver"},{"location":"Android%E5%9F%BA%E7%A1%80/#androidactivity","text":"\u6808\u9876\u662f\u5f53\u524d\u8fd0\u884c\u7684 Activity \uff0c\u65b0\u7684\u5728\u6808\u9876\u5165\u6808\uff0c\u8fd4\u56de\u65f6\u51fa\u6808\u3002 \u6808\u4e2d\u7684 Activity \u6c38\u8fdc\u4e0d\u4f1a\u91cd\u6392\uff0c\u53ea\u4f1a\u538b\u5165\u6216\u5f39\u51fa\u3002","title":"\uff08\u4e94\uff09android\u4e2d\u7684\u4efb\u52a1\uff08activity\u6808\uff09"},{"location":"Android%E5%9F%BA%E7%A1%80/#activity_1","text":"\u4ece Activity A \u8df3\u8f6c\u5230 Activity B Activity A 1 2 3 4 5 // \u4eceA\u4e2d\u6253\u5f00B var intent = Intent () intent . putExtra ( \"data\" , \"hello\" ) intent . setClass ( this , B :: class . java ) //(\u5f53\u524dActivity\uff0c\u76ee\u6807Activity) startActivityForResult ( intent , 1 ) // 1\u662f\u8bf7\u6c42\u7684\u6807\u8bc6requestCode 1 2 3 4 5 6 7 8 9 10 /** * Activity A\u4e2d\u6536\u53d6\u4eceB\u8fd4\u56de\u5f97\u5230\u7684\u6570\u636e * requestCode A\u8bf7\u6c42\u7684\u6807\u8bc6 * resultCode \u4eceB\u8fd4\u56de\u7684\u6807\u8bc6 * data \u4eceB\u8fd4\u56de\u7684\u6570\u636e */ override fun onActivityResult ( requestCode : Int , resultCode : Int , data : Intent?) { super . onActivityResult ( requestCode , resultCode , data ) // ... } Activity B 1 2 3 4 5 // \u8fd4\u56de\u6570\u636e var data = Intent () data . putExtra ( \"data\" , \"\u56de\u4f20\u6570\u636e\" ) setResult ( 2 , data ); // 2\u662f\u8fd4\u56de\u7684\u6807\u8bc6resultCode finish ()","title":"\uff08\u516d\uff09Activity\u643a\u5e26\u6570\u636e\u8df3\u8f6c"},{"location":"Android%E5%9F%BA%E7%A1%80/#_8","text":"","title":"\u56db\u3001\u5e38\u7528\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Android%E5%9F%BA%E7%A1%80/#_9","text":"\u4f7f\u7528LiveData/MutableLiveData\u548cObserver\u8fdb\u884c\u6570\u636e\u89c2\u6d4b\uff1a \u5728LiveData\u4e2d\u653e\u5165\u9700\u8981\u88ab\u89c2\u6d4b\u7684\u6570\u636e 1 val data = LiveData < Int > () \u521b\u5efaObserver\uff0c\u8868\u660e\u8be5\u6570\u636e\u53d8\u5316\u540e\u8981\u8fdb\u884c\u7684\u64cd\u4f5c 1 2 3 4 5 val myObserver = Observer < Int > { if ( it == 1 ){ // \u4e00\u4e9b\u88ab\u89e6\u53d1\u7684\u64cd\u4f5c } } \u89c2\u5bdf 1 data . observe ( this , loginObserver ) \u6570\u636e\u6539\u53d8 1 data.postValue(1) \u8fd9\u6837\uff0c\u5f53 data \u53d1\u751f\u6539\u53d8\u65f6\u5c31\u4f1a\u89e6\u53d1 myObserver \u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002","title":"\uff08\u4e00\uff09 \u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"Android%E5%9F%BA%E7%A1%80/#_10","text":"","title":"\u4e94\u3001\u5e38\u7528\u7ec4\u4ef6"},{"location":"Android%E5%9F%BA%E7%A1%80/#navigation","text":"\u53c2\u8003\u535a\u5ba2\uff1a https://blog.csdn.net/mq2553299/article/details/80445952 \u5b98\u65b9\u6559\u7a0b\uff1a https://developer.android.com/guide/navigation","title":"\uff08\u4e00\uff09navigation"},{"location":"BLE%E4%BD%8E%E5%8A%9F%E8%80%97%E8%93%9D%E7%89%99%E9%80%9A%E4%BF%A1/","text":"BLE\u4f4e\u529f\u8017\u84dd\u7259 \u00b6 \u9996\u5148\u8981\u5206\u6e05\u695a BLE \u5206\u4e3a\u4e3b\u8bbe\u5907\u548c\u4ece\u8bbe\u5907\uff0c\u4ece\u8bbe\u5907\u4f5c\u4e3a Server \u5c06\u81ea\u5df1\u5e7f\u64ad\u51fa\u53bb\uff0c\u4e3b\u8bbe\u5907\u4f5c\u4e3a Client \u53bb\u8fde\u63a5\u4ece\u8bbe\u5907 \u53c2\u6570 \u00b6 BluetoothDevice \u662f\u84dd\u7259\u8fde\u63a5\u7684\u8bbe\u5907\u3002 BluetoothGatt \u662f\u4e00\u4e2a\u84dd\u7259\u8fde\u63a5\u7684\u534f\u8bae\uff0c\u5b83\u5b9a\u4e49\u4e24\u4e2a BLE \u8bbe\u5907\u901a\u8fc7\u53eb\u505a Service \u548c Characteristic \u7684\u4e1c\u897f\u8fdb\u884c\u901a\u4fe1\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u8fdb\u884c\u5bf9\u84dd\u7259\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7 bluetoothDevice.connectGatt(this,false,callback) \u8fd4\u56de\u7684 gatt \u6765\u83b7\u5f97\u3002\u4e00\u4e2a gatt \u4e2d\u6709\u591a\u4e2a service \uff0c\u4e00\u4e2a service \u4e2d\u6709\u591a\u4e2a characteristic \uff0c\u5982\u4e0b\u56fe\uff1a \u6ce8\u610f\uff0c GATT \u8fde\u63a5\u662f\u72ec\u5360\u7684 \u3002\u4e5f\u5c31\u662f\u4e00\u4e2a BLE \u5916\u8bbe\u540c\u65f6\u53ea\u80fd\u88ab\u4e00\u4e2a\u4e2d\u5fc3\u8bbe\u5907\u8fde\u63a5\u3002\u4e00\u65e6\u5916\u8bbe\u88ab\u8fde\u63a5\uff0c\u5b83\u5c31\u4f1a\u9a6c\u4e0a\u505c\u6b62\u5e7f\u64ad\uff0c\u8fd9\u6837\u5b83\u5c31\u5bf9\u5176\u4ed6\u8bbe\u5907\u4e0d\u53ef\u89c1\u4e86\u3002\u5f53\u8bbe\u5907\u65ad\u5f00\uff0c\u5b83\u53c8\u5f00\u59cb\u5e7f\u64ad\u3002 BluetoothGattService \u662f\u4e00\u4e2a\u84dd\u7259\u670d\u52a1\uff0c\u4e00\u4e2a gatt \u4e2d\u6709\u591a\u4e2a service \uff0c\u53ef\u4ee5\u4ece bluetoothGatt.getService(Service_UUID) \u6765\u83b7\u5f97\u3002 BluetoothGattCharacteristic \u662f\u4e00\u4e2a\u84dd\u7259\u7279\u5f81\u503c\uff0c\u4e00\u4e2a service \u4e2d\u6709\u591a\u4e2a characteristic \uff0c\u53ef\u4ee5\u4ece service.getCharacteristic(Characteristic_UUID) \u6765\u83b7\u5f97\u3002\u901a\u8fc7\u5bf9 characteristic.setValue(value) \u7684\u64cd\u4f5c\u53ef\u4ee5\u5199\u5165\u6570\u636e\u3002 UUID \u662f\u5bf9\u8bbe\u5907\u7684\u4e00\u4e2a\u6807\u8bc6\uff0c service \u3001 characteristic \u90fd\u6709\u5176\u81ea\u5df1\u7684 UUID \uff0c\u4e3b\u4ece\u8bbe\u5907\u95f4\u7684\u7684 UUID \u5e94\u7ecf\u8fc7\u534f\u5546\u540e\u4fdd\u6301\u4e00\u81f4\u3002 Client\u7aef \u00b6 \u5148\u62ff\u5230 bluetoothManager 1 val bluetoothManager = application . getSystemService ( Context . BLUETOOTH_SERVICE ) as BluetoothManager // application\u662f\u81ea\u5e26\u7684\u7cfb\u7edf\u7ec4\u4ef6\uff0cActivity\u3001Service\u7b49\u4e2d\u90fd\u6709 \u518d\u62ff\u5230 BluetoothAdapter 1 2 btAdapter = bluetoothManager . getAdapter (); // \u4e5f\u53ef\u4ee5\u901a\u8fc7BluetoothAdapter.getDefaultAdapter()\u83b7\u5f97 \u5f00\u59cb\u626b\u63cf\u84dd\u7259\u8bbe\u5907 1 btAdapter . startLeScan ( BluetoothAdapter . LeScanCallback ); \u4ece LeScanCallback \u4e2d\u5f97\u5230 BluetoothDevice 1 2 3 4 5 private class LeScanCallback : LeScanCallback (){ override fun onLeScan ( device : BluetoothDevice , rssi : Int , scanRecord : byte [] ) { // \u4fdd\u5b58\u5f53\u524d\u8bbe\u5907device } } \u7528 BluetoothDevice \u5f97\u5230 BluetoothGatt 1 gatt = device . connectGatt ( this , true , gattCallback ) \u83b7\u53d6\u5bf9\u5e94\u7684 service 1 service = gatt . getService ( Service_UUID ) \u83b7\u53d6\u5bf9\u5e94\u7684 Characteristic 1 characteristic = service . getCharacteristic ( Characteristic_UUID ) \u6b64\u65f6\u5c31\u53ef\u4ee5\u5bf9 characteristic \u5199\u5165\u6570\u636e\u4e86 1 characteristic . setValue ( value ) \u7ed9 server \u53d1\u9001\u6570\u636e 1 gatt . writeCharacteristic ( characteristic ) Server\u7aef \u00b6 \u540c\u6837\u7684\uff0c\u5148\u62ff\u5230 bluetoothManager 1 val bluetoothManager = application . getSystemService ( Context . BLUETOOTH_SERVICE ) as BluetoothManager // application\u662f\u81ea\u5e26\u7684\u7cfb\u7edf\u7ec4\u4ef6\uff0cActivity\u3001Service\u7b49\u4e2d\u90fd\u6709 \u518d\u62ff\u5230 BluetoothAdapter 1 2 btAdapter = bluetoothManager . getAdapter (); // \u4e5f\u53ef\u4ee5\u901a\u8fc7BluetoothAdapter.getDefaultAdapter()\u83b7\u5f97 \u65b0\u5efa\u4e00\u4e2a characteristic 1 2 3 characteristic = BluetoothGattCharacteristic ( Characteristic_UUID , BluetoothGattCharacteristic . PROPERTY_WRITE , BluetoothGattCharacteristic . PERMISSION_WRITE ) // \u540e\u9762\u7684\u5c5e\u6027\u662f\u81ea\u5e26\u7684\uff0c\u6709NOTIFY\u3001READ\u3001WRITE\uff0c\u9009\u62e9\u591a\u4e2a\u53ef\u4ee5\u7528or\u8fde\u63a5 characteristic . setValue ( value ) // \u540c\u7406\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u8bbe\u7f6e\u8981\u4f20\u9012\u7684\u53c2\u6570 \u65b0\u5efa\u4e00\u4e2a service 1 service = BluetoothGattService ( SERVICE_UUID , BluetoothGattService . SERVICE_TYPE_PRIMARY ) \u4e3a service \u6dfb\u52a0\u4e0a\u8fd9\u4e2a characteristic 1 service . add ( characteristic ) \u83b7\u53d6/\u6253\u5f00\u5468\u8fb9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 gattServerCallback = GattServerCallback () // \u56de\u8c03 gattServer = bluetoothManager . openGattServer ( app , gattServerCallback ) // GattServerCallback\u56de\u8c03 private class GattServerCallback : BluetoothGattServerCallback () { // \u8fde\u63a5\u72b6\u6001\u53d1\u751f\u6539\u53d8 override fun onConnectionStateChange ( device : BluetoothDevice , status : Int , newState : Int ) { super . onConnectionStateChange ( device , status , newState ) val isSuccess = status == BluetoothGatt . GATT_SUCCESS val isConnected = newState == BluetoothProfile . STATE_CONNECTED if ( isSuccess && isConnected ) { // ... \u8bb0\u5f55\u5f53\u524d\u8bbe\u5907\u7b49 } } // \u63a5\u6536Client\u5199\u8fc7\u6765\u7684\u6570\u636e override fun onCharacteristicWriteRequest ( device : BluetoothDevice , requestId : Int , characteristic : BluetoothGattCharacteristic , preparedWrite : Boolean , responseNeeded : Boolean , offset : Int , value : ByteArray? ) { super . onCharacteristicWriteRequest ( device , requestId , characteristic , preparedWrite , responseNeeded , offset , value ) if ( characteristic . uuid == MESSAGE_UUID ) { gattServer ?. sendResponse ( device , requestId , BluetoothGatt . GATT_SUCCESS , 0 , null ) val message = value ?. toString ( Charsets . UTF_8 ) Log . d ( TAG , \"onCharacteristicWriteRequest: Have message: \\\" $ message \\\"\" ) } } } \u628a service \u6dfb\u52a0\u7ed9\u5468\u8fb9 1 2 3 4 gattServer . addService ( service ) // \u53ef\u4ee5\u901a\u8fc7notifyCharacteristicChanged\u5411Client\u4f20\u9012\u6d88\u606f gattServer . notifyCharacteristicChanged ( device , characteristic , false ); \u83b7\u53d6\u5e7f\u64ad 1 advertiser = adapter . bluetoothLeAdvertiser \u5f00\u59cb\u5e7f\u64ad 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 advertiseCallback = DeviceAdvertiseCallback () // \u5e7f\u64ad\u56de\u8c03 advertiser . startAdvertising ( settings , data , advertiseCallback ); // \u5e7f\u64ad\u56de\u8c03\u5b9e\u73b0 private class DeviceAdvertiseCallback : AdvertiseCallback () { //\u5931\u8d25 override fun onStartFailure ( errorCode : Int ) { super . onStartFailure ( errorCode ) // Send error state to display Log . d ( TAG , \"Advertising failed with error: $ errorCode \" ) } // \u6210\u529f override fun onStartSuccess ( settingsInEffect : AdvertiseSettings ) { super . onStartSuccess ( settingsInEffect ) Log . d ( TAG , \"Advertising successfully started\" ) } }","title":"BLE\u4f4e\u529f\u8017\u84dd\u7259\u901a\u4fe1"},{"location":"BLE%E4%BD%8E%E5%8A%9F%E8%80%97%E8%93%9D%E7%89%99%E9%80%9A%E4%BF%A1/#ble","text":"\u9996\u5148\u8981\u5206\u6e05\u695a BLE \u5206\u4e3a\u4e3b\u8bbe\u5907\u548c\u4ece\u8bbe\u5907\uff0c\u4ece\u8bbe\u5907\u4f5c\u4e3a Server \u5c06\u81ea\u5df1\u5e7f\u64ad\u51fa\u53bb\uff0c\u4e3b\u8bbe\u5907\u4f5c\u4e3a Client \u53bb\u8fde\u63a5\u4ece\u8bbe\u5907","title":"BLE\u4f4e\u529f\u8017\u84dd\u7259"},{"location":"BLE%E4%BD%8E%E5%8A%9F%E8%80%97%E8%93%9D%E7%89%99%E9%80%9A%E4%BF%A1/#_1","text":"BluetoothDevice \u662f\u84dd\u7259\u8fde\u63a5\u7684\u8bbe\u5907\u3002 BluetoothGatt \u662f\u4e00\u4e2a\u84dd\u7259\u8fde\u63a5\u7684\u534f\u8bae\uff0c\u5b83\u5b9a\u4e49\u4e24\u4e2a BLE \u8bbe\u5907\u901a\u8fc7\u53eb\u505a Service \u548c Characteristic \u7684\u4e1c\u897f\u8fdb\u884c\u901a\u4fe1\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u8fdb\u884c\u5bf9\u84dd\u7259\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7 bluetoothDevice.connectGatt(this,false,callback) \u8fd4\u56de\u7684 gatt \u6765\u83b7\u5f97\u3002\u4e00\u4e2a gatt \u4e2d\u6709\u591a\u4e2a service \uff0c\u4e00\u4e2a service \u4e2d\u6709\u591a\u4e2a characteristic \uff0c\u5982\u4e0b\u56fe\uff1a \u6ce8\u610f\uff0c GATT \u8fde\u63a5\u662f\u72ec\u5360\u7684 \u3002\u4e5f\u5c31\u662f\u4e00\u4e2a BLE \u5916\u8bbe\u540c\u65f6\u53ea\u80fd\u88ab\u4e00\u4e2a\u4e2d\u5fc3\u8bbe\u5907\u8fde\u63a5\u3002\u4e00\u65e6\u5916\u8bbe\u88ab\u8fde\u63a5\uff0c\u5b83\u5c31\u4f1a\u9a6c\u4e0a\u505c\u6b62\u5e7f\u64ad\uff0c\u8fd9\u6837\u5b83\u5c31\u5bf9\u5176\u4ed6\u8bbe\u5907\u4e0d\u53ef\u89c1\u4e86\u3002\u5f53\u8bbe\u5907\u65ad\u5f00\uff0c\u5b83\u53c8\u5f00\u59cb\u5e7f\u64ad\u3002 BluetoothGattService \u662f\u4e00\u4e2a\u84dd\u7259\u670d\u52a1\uff0c\u4e00\u4e2a gatt \u4e2d\u6709\u591a\u4e2a service \uff0c\u53ef\u4ee5\u4ece bluetoothGatt.getService(Service_UUID) \u6765\u83b7\u5f97\u3002 BluetoothGattCharacteristic \u662f\u4e00\u4e2a\u84dd\u7259\u7279\u5f81\u503c\uff0c\u4e00\u4e2a service \u4e2d\u6709\u591a\u4e2a characteristic \uff0c\u53ef\u4ee5\u4ece service.getCharacteristic(Characteristic_UUID) \u6765\u83b7\u5f97\u3002\u901a\u8fc7\u5bf9 characteristic.setValue(value) \u7684\u64cd\u4f5c\u53ef\u4ee5\u5199\u5165\u6570\u636e\u3002 UUID \u662f\u5bf9\u8bbe\u5907\u7684\u4e00\u4e2a\u6807\u8bc6\uff0c service \u3001 characteristic \u90fd\u6709\u5176\u81ea\u5df1\u7684 UUID \uff0c\u4e3b\u4ece\u8bbe\u5907\u95f4\u7684\u7684 UUID \u5e94\u7ecf\u8fc7\u534f\u5546\u540e\u4fdd\u6301\u4e00\u81f4\u3002","title":"\u53c2\u6570"},{"location":"BLE%E4%BD%8E%E5%8A%9F%E8%80%97%E8%93%9D%E7%89%99%E9%80%9A%E4%BF%A1/#client","text":"\u5148\u62ff\u5230 bluetoothManager 1 val bluetoothManager = application . getSystemService ( Context . BLUETOOTH_SERVICE ) as BluetoothManager // application\u662f\u81ea\u5e26\u7684\u7cfb\u7edf\u7ec4\u4ef6\uff0cActivity\u3001Service\u7b49\u4e2d\u90fd\u6709 \u518d\u62ff\u5230 BluetoothAdapter 1 2 btAdapter = bluetoothManager . getAdapter (); // \u4e5f\u53ef\u4ee5\u901a\u8fc7BluetoothAdapter.getDefaultAdapter()\u83b7\u5f97 \u5f00\u59cb\u626b\u63cf\u84dd\u7259\u8bbe\u5907 1 btAdapter . startLeScan ( BluetoothAdapter . LeScanCallback ); \u4ece LeScanCallback \u4e2d\u5f97\u5230 BluetoothDevice 1 2 3 4 5 private class LeScanCallback : LeScanCallback (){ override fun onLeScan ( device : BluetoothDevice , rssi : Int , scanRecord : byte [] ) { // \u4fdd\u5b58\u5f53\u524d\u8bbe\u5907device } } \u7528 BluetoothDevice \u5f97\u5230 BluetoothGatt 1 gatt = device . connectGatt ( this , true , gattCallback ) \u83b7\u53d6\u5bf9\u5e94\u7684 service 1 service = gatt . getService ( Service_UUID ) \u83b7\u53d6\u5bf9\u5e94\u7684 Characteristic 1 characteristic = service . getCharacteristic ( Characteristic_UUID ) \u6b64\u65f6\u5c31\u53ef\u4ee5\u5bf9 characteristic \u5199\u5165\u6570\u636e\u4e86 1 characteristic . setValue ( value ) \u7ed9 server \u53d1\u9001\u6570\u636e 1 gatt . writeCharacteristic ( characteristic )","title":"Client\u7aef"},{"location":"BLE%E4%BD%8E%E5%8A%9F%E8%80%97%E8%93%9D%E7%89%99%E9%80%9A%E4%BF%A1/#server","text":"\u540c\u6837\u7684\uff0c\u5148\u62ff\u5230 bluetoothManager 1 val bluetoothManager = application . getSystemService ( Context . BLUETOOTH_SERVICE ) as BluetoothManager // application\u662f\u81ea\u5e26\u7684\u7cfb\u7edf\u7ec4\u4ef6\uff0cActivity\u3001Service\u7b49\u4e2d\u90fd\u6709 \u518d\u62ff\u5230 BluetoothAdapter 1 2 btAdapter = bluetoothManager . getAdapter (); // \u4e5f\u53ef\u4ee5\u901a\u8fc7BluetoothAdapter.getDefaultAdapter()\u83b7\u5f97 \u65b0\u5efa\u4e00\u4e2a characteristic 1 2 3 characteristic = BluetoothGattCharacteristic ( Characteristic_UUID , BluetoothGattCharacteristic . PROPERTY_WRITE , BluetoothGattCharacteristic . PERMISSION_WRITE ) // \u540e\u9762\u7684\u5c5e\u6027\u662f\u81ea\u5e26\u7684\uff0c\u6709NOTIFY\u3001READ\u3001WRITE\uff0c\u9009\u62e9\u591a\u4e2a\u53ef\u4ee5\u7528or\u8fde\u63a5 characteristic . setValue ( value ) // \u540c\u7406\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u8bbe\u7f6e\u8981\u4f20\u9012\u7684\u53c2\u6570 \u65b0\u5efa\u4e00\u4e2a service 1 service = BluetoothGattService ( SERVICE_UUID , BluetoothGattService . SERVICE_TYPE_PRIMARY ) \u4e3a service \u6dfb\u52a0\u4e0a\u8fd9\u4e2a characteristic 1 service . add ( characteristic ) \u83b7\u53d6/\u6253\u5f00\u5468\u8fb9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 gattServerCallback = GattServerCallback () // \u56de\u8c03 gattServer = bluetoothManager . openGattServer ( app , gattServerCallback ) // GattServerCallback\u56de\u8c03 private class GattServerCallback : BluetoothGattServerCallback () { // \u8fde\u63a5\u72b6\u6001\u53d1\u751f\u6539\u53d8 override fun onConnectionStateChange ( device : BluetoothDevice , status : Int , newState : Int ) { super . onConnectionStateChange ( device , status , newState ) val isSuccess = status == BluetoothGatt . GATT_SUCCESS val isConnected = newState == BluetoothProfile . STATE_CONNECTED if ( isSuccess && isConnected ) { // ... \u8bb0\u5f55\u5f53\u524d\u8bbe\u5907\u7b49 } } // \u63a5\u6536Client\u5199\u8fc7\u6765\u7684\u6570\u636e override fun onCharacteristicWriteRequest ( device : BluetoothDevice , requestId : Int , characteristic : BluetoothGattCharacteristic , preparedWrite : Boolean , responseNeeded : Boolean , offset : Int , value : ByteArray? ) { super . onCharacteristicWriteRequest ( device , requestId , characteristic , preparedWrite , responseNeeded , offset , value ) if ( characteristic . uuid == MESSAGE_UUID ) { gattServer ?. sendResponse ( device , requestId , BluetoothGatt . GATT_SUCCESS , 0 , null ) val message = value ?. toString ( Charsets . UTF_8 ) Log . d ( TAG , \"onCharacteristicWriteRequest: Have message: \\\" $ message \\\"\" ) } } } \u628a service \u6dfb\u52a0\u7ed9\u5468\u8fb9 1 2 3 4 gattServer . addService ( service ) // \u53ef\u4ee5\u901a\u8fc7notifyCharacteristicChanged\u5411Client\u4f20\u9012\u6d88\u606f gattServer . notifyCharacteristicChanged ( device , characteristic , false ); \u83b7\u53d6\u5e7f\u64ad 1 advertiser = adapter . bluetoothLeAdvertiser \u5f00\u59cb\u5e7f\u64ad 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 advertiseCallback = DeviceAdvertiseCallback () // \u5e7f\u64ad\u56de\u8c03 advertiser . startAdvertising ( settings , data , advertiseCallback ); // \u5e7f\u64ad\u56de\u8c03\u5b9e\u73b0 private class DeviceAdvertiseCallback : AdvertiseCallback () { //\u5931\u8d25 override fun onStartFailure ( errorCode : Int ) { super . onStartFailure ( errorCode ) // Send error state to display Log . d ( TAG , \"Advertising failed with error: $ errorCode \" ) } // \u6210\u529f override fun onStartSuccess ( settingsInEffect : AdvertiseSettings ) { super . onStartSuccess ( settingsInEffect ) Log . d ( TAG , \"Advertising successfully started\" ) } }","title":"Server\u7aef"},{"location":"Dart/","text":"Dart\u5e38\u7528\u8bed\u6cd5 \u00b6 \u5b98\u65b9\u8be6\u7ec6\u6559\u7a0b 1. \u53d8\u91cf \u00b6 1 2 3 4 5 6 7 8 9 var a = 1 ; // \u53d8\u91cf\uff08\u53ef\u4ee5\u81ea\u63a8\u65ad\u7c7b\u578b\uff09 const b = 2 ; // \u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u597d\u503c\uff0c\u4e0d\u80fd\u518d\u88ab\u4fee\u6539 final c = b ; // \u53ea\u80fd\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0d\u80fd\u518d\u88ab\u4fee\u6539 dynamic d = 'name' ; // \u52a8\u6001\u7c7b\u578b int cnt ; // \u4e0d\u7ba1\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u9ed8\u8ba4\u503c\u4e3anull 2. \u5185\u5efa\u7c7b\u578b \u00b6 Number\uff1a\u5305\u542b int \u548c double String\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // \u5185\u5d4c\u8868\u8fbe\u5f0f var s = 'string interpolation' ; assert ( 'Dart has $ s , which is very handy.' == 'Dart has string interpolation, ' + 'which is very handy.' ); // \u591a\u884c\u5b57\u7b26\u4e32 var str = ''' hello world ! ''' ; // \u7528r\u524d\u7f00\u521b\u5efa\u539f\u59cbraw\u5b57\u7b26\u4e32(\u8f93\u51fa\u4efb\u4f55\u5b57\u7b26\uff0c\u5305\u62ec\u8f6c\u4e49\u5b57\u7b26) var s = r\"In a raw string, \\n isn't special.\" Boolean\uff1a if \u6216 assert \u4e2d\u53ea\u80fd\u5305\u542b\u503c\u4e3a boolean \u7684\u8868\u8fbe\u5f0f List (\u4e5f\u88ab\u79f0\u4e3a Array )\uff1a var list = const [1,2,3]; Set\uff1a 1 2 var set = { 1 , 2 , 3 }; var nullSet = < int > {}; // \u4e0d\u52a0<int>\u4f1a\u8ba4\u4e3a\u662fmap\u7c7b\u578b Map\uff1a 1 2 3 4 5 6 var mp = { 'a' : 'hello' , 'b' : 'world' , 'c' : '!' , }; mp [ 'd' ] = '>^<' ; Rune (\u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u4e2d\u8868\u793a Unicode \u5b57\u7b26) 1 2 var love = Runes ( ' \\u2665 ' ); // \u7231\u5fc3 Runes input = new Runes ( ' \\u{1f605} ' ); // \u7b11\u8138 Symbol\uff1a\u7528\u4e8e\u6309\u540d\u79f0\u5f15\u7528\u6807\u8bc6\u7b26\u7684 API \u2014\u2014 #bar \u3001 #radix 3. \u51fd\u6570 \u00b6 \u666e\u901a\u51fd\u6570\uff1a 1 2 3 4 5 6 bool isNoble ( int atomicNumber ) { // \u7c7b\u578b\u58f0\u660e\u53ef\u4ee5\u7701\u7565 return _nobleGases [ atomicNumber ] != null ; } // \u3010\u7bad\u5934\u8bed\u6cd5\u3011\uff0c\u53ea\u6709\u4e00\u884c\u7684\u51fd\u6570\u53ef\u4ee5\u6539\u4e3a\uff1a bool isNoble ( int atomicNumber ) => _nobleGases [ atomicNumber ] != null ; \u533f\u540d\u51fd\u6570\uff1a 1 2 3 4 5 6 7 var list = [ 'apples' , 'bananas' , 'oranges' ]; list . forEach (( item ) { print ( ' ${ list . indexOf ( item ) } : $ item ' ); }); //(){}\u662f\u533f\u540d\u51fd\u6570 // \u53ea\u6709\u4e00\u6761\u8bed\u53e5\u7684\u51fd\u6570\u53ef\u4ee5\u7528=>\u7b80\u5316 list . forEach ( ( item ) => print ( ' ${ list . indexOf ( item ) } : $ item ' ) ); \u81ea\u6267\u884c\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 (() => { print ( \"\u6211\u662f\u81ea\u6267\u884c\u65b9\u6cd5\" ); })(); // \u4f20\u53c2 (( int n ) => { print ( \"\u4f20\u5165\u53c2\u6570\uff1a\" + n ); })( 12 ); 4. \u8fd0\u7b97\u7b26 \u00b6 5/2 \u7684\u503c\u662f 2.5 \uff0c 5~/2 \u7684\u503c\u624d\u662f 2 \u7c7b\u578b\u5224\u5b9a\u8fd0\u7b97\u7b26 Operator Meaning as Typecast (\u4e5f\u88ab\u7528\u4e8e \u6307\u5b9a\u5e93\u524d\u7f00 ) is True if the object has the specified type is! False if the object has the specified type 1 2 3 4 5 6 // Type check if ( emp is Person ) { emp . firstName = 'Bob' ; } ( emp as Person ). firstName = 'Bob' ; \u8d4b\u503c\u8fd0\u7b97\u7b26 1 2 3 4 5 6 // \u5c06\u503c\u8d4b\u503c\u7ed9\u53d8\u91cfa a = value ; // \u5982\u679cb\u4e3a\u7a7a\u65f6\uff0c\u5c06\u53d8\u91cf\u8d4b\u503c\u7ed9b\uff0c\u5426\u5219b\u7684\u503c\u4fdd\u6301\u4e0d\u53d8 b ??= value ; // name \u4e3a\u7a7a\u65f6\u8fd4\u56de'Guest' String playerName ( String name ) => name ?? 'Guest' ; \u7ea7\u8054\u8fd0\u7b97\u7b26.. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 querySelector ( '#confirm' ) // \u83b7\u53d6\u5bf9\u8c61\u3002 .. text = 'Confirm' // \u8c03\u7528\u6210\u5458\u53d8\u91cf\u3002 .. classes . add ( 'important' ) .. onClick . listen (( e ) => window . alert ( 'Confirmed!' )); // \u76f8\u5f53\u4e8e var button = querySelector ( '#confirm' ); button . text = 'Confirm' ; button . classes . add ( 'important' ); button . onClick . listen (( e ) => window . alert ( 'Confirmed!' )); // \u5728\u8fd4\u56de\u5bf9\u8c61\u7684\u51fd\u6570\u4e2d\u8c28\u614e\u4f7f\u7528\u7ea7\u8054\u64cd\u4f5c\u7b26\u3002 //sb.write() \u51fd\u6570\u8c03\u7528\u8fd4\u56de void\uff0c \u4e0d\u80fd\u5728 void \u5bf9\u8c61\u4e0a\u521b\u5efa\u7ea7\u8054\u64cd\u4f5c\u3002 var sb = StringBuffer (); sb . write ( 'foo' ) .. write ( 'bar' ); // Error: 'void' \u6ca1\u54df\u5b9a\u4e49 'write' \u51fd\u6570\u3002 assert \u5982\u679c assert \u8bed\u53e5\u4e2d\u7684\u5e03\u5c14\u6761\u4ef6\u4e3a false \uff0c \u90a3\u4e48\u6b63\u5e38\u7684\u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b\u4f1a\u88ab\u4e2d\u65ad\u3002 assert \u8bed\u53e5\u53ea\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u6709\u6548\uff0c \u5728\u751f\u4ea7\u73af\u5883\u662f\u65e0\u6548\u7684\uff1b Flutter \u4e2d\u7684 assert \u53ea\u5728 debug \u6a21\u5f0f\u4e2d\u6709\u6548\u3002 5. \u7c7b \u00b6 \u6240\u6709\u7684\u7c7b\u90fd\u7ee7\u627f\u4e8e Object p?.y = 4; \u8868\u793a p \u53ef\u80fd\u4e3a\u7a7a \u6784\u9020\u51fd\u6570\u7684 new \u53ef\u7701\u7565 \u6ca1\u6709 public \u3001 private \u3001 protected \u7b49\u5173\u952e\u5b57\uff0c\u53d8\u91cf\u524d\u52a0\u4e0a _ \u8868\u793a\u662f\u79c1\u6709\u7684\uff1a var _param = 2; \u547d\u540d\u6784\u9020\u51fd\u6570 \uff08\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u88ab\u7ee7\u627f\uff09 1 2 3 4 5 6 7 8 9 10 11 class Point { num x , y ; Point ( this . x , this . y ); // \u547d\u540d\u6784\u9020\u51fd\u6570 Point . origin () { x = 0 ; y = 0 ; } } Getter\u548cSetter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Rectangle { num left , top , width , height ; Rectangle ( this . left , this . top , this . width , this . height ); // \u5b9a\u4e49\u4e24\u4e2a\u8ba1\u7b97\u5c5e\u6027\uff1a right \u548c bottom\u3002 num get right => left + width ; set right ( num value ) => left = value - width ; num get bottom => top + height ; set bottom ( num value ) => top = value - height ; } void main () { var rect = Rectangle ( 3 , 4 , 20 , 15 ); assert ( rect . left == 3 ); rect . right = 12 ; assert ( rect . left == - 8 ); } \u62bd\u8c61\u65b9\u6cd5 1 2 3 4 abstract class Doer { // \u5b9a\u4e49\u5b9e\u4f8b\u53d8\u91cf\u548c\u65b9\u6cd5 ... void doSomething (); // \u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u3002 } \u62bd\u8c61\u7c7b 1 2 3 4 5 6 7 // \u8fd9\u4e2a\u7c7b\u88ab\u5b9a\u4e49\u4e3a\u62bd\u8c61\u7c7b\uff0c // \u6240\u4ee5\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002 abstract class AbstractContainer { // \u5b9a\u4e49\u6784\u9020\u884c\u6570\uff0c\u5b57\u6bb5\uff0c\u65b9\u6cd5... void updateChildren (); // \u62bd\u8c61\u65b9\u6cd5\u3002 } \u63a5\u53e3\u7528 implements \uff0c\u7ee7\u627f\u7528 extends \u679a\u4e3e\u7c7b 1 2 3 4 5 enum Color { red , green , blue } // \u83b7\u53d6\u6240\u6709\u679a\u4e3e\u503c\u5217\u8868\uff08 list \uff09 List < Color > colors = Color . values ; assert ( colors [ 2 ] == Color . blue ); mixins \u5b9e\u73b0\u7c7b\u4f3c\u591a\u7ee7\u627f\u529f\u80fd\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class A { void printA (){ print ( \"A\" ); } } class B { void printB (){ print ( \"B\" ); } } class C with A , B { } void main (){ var c = new C (); c . printA (); c . printB (); } \u6cdb\u578b\uff1a 1 2 3 T getData < T > ( T data ){ return data ; }","title":"Dart\u8bed\u8a00\u57fa\u7840"},{"location":"Dart/#dart","text":"\u5b98\u65b9\u8be6\u7ec6\u6559\u7a0b","title":"Dart\u5e38\u7528\u8bed\u6cd5"},{"location":"Dart/#1","text":"1 2 3 4 5 6 7 8 9 var a = 1 ; // \u53d8\u91cf\uff08\u53ef\u4ee5\u81ea\u63a8\u65ad\u7c7b\u578b\uff09 const b = 2 ; // \u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u597d\u503c\uff0c\u4e0d\u80fd\u518d\u88ab\u4fee\u6539 final c = b ; // \u53ea\u80fd\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u4e0d\u80fd\u518d\u88ab\u4fee\u6539 dynamic d = 'name' ; // \u52a8\u6001\u7c7b\u578b int cnt ; // \u4e0d\u7ba1\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u9ed8\u8ba4\u503c\u4e3anull","title":"1. \u53d8\u91cf"},{"location":"Dart/#2","text":"Number\uff1a\u5305\u542b int \u548c double String\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // \u5185\u5d4c\u8868\u8fbe\u5f0f var s = 'string interpolation' ; assert ( 'Dart has $ s , which is very handy.' == 'Dart has string interpolation, ' + 'which is very handy.' ); // \u591a\u884c\u5b57\u7b26\u4e32 var str = ''' hello world ! ''' ; // \u7528r\u524d\u7f00\u521b\u5efa\u539f\u59cbraw\u5b57\u7b26\u4e32(\u8f93\u51fa\u4efb\u4f55\u5b57\u7b26\uff0c\u5305\u62ec\u8f6c\u4e49\u5b57\u7b26) var s = r\"In a raw string, \\n isn't special.\" Boolean\uff1a if \u6216 assert \u4e2d\u53ea\u80fd\u5305\u542b\u503c\u4e3a boolean \u7684\u8868\u8fbe\u5f0f List (\u4e5f\u88ab\u79f0\u4e3a Array )\uff1a var list = const [1,2,3]; Set\uff1a 1 2 var set = { 1 , 2 , 3 }; var nullSet = < int > {}; // \u4e0d\u52a0<int>\u4f1a\u8ba4\u4e3a\u662fmap\u7c7b\u578b Map\uff1a 1 2 3 4 5 6 var mp = { 'a' : 'hello' , 'b' : 'world' , 'c' : '!' , }; mp [ 'd' ] = '>^<' ; Rune (\u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u4e2d\u8868\u793a Unicode \u5b57\u7b26) 1 2 var love = Runes ( ' \\u2665 ' ); // \u7231\u5fc3 Runes input = new Runes ( ' \\u{1f605} ' ); // \u7b11\u8138 Symbol\uff1a\u7528\u4e8e\u6309\u540d\u79f0\u5f15\u7528\u6807\u8bc6\u7b26\u7684 API \u2014\u2014 #bar \u3001 #radix","title":"2. \u5185\u5efa\u7c7b\u578b"},{"location":"Dart/#3","text":"\u666e\u901a\u51fd\u6570\uff1a 1 2 3 4 5 6 bool isNoble ( int atomicNumber ) { // \u7c7b\u578b\u58f0\u660e\u53ef\u4ee5\u7701\u7565 return _nobleGases [ atomicNumber ] != null ; } // \u3010\u7bad\u5934\u8bed\u6cd5\u3011\uff0c\u53ea\u6709\u4e00\u884c\u7684\u51fd\u6570\u53ef\u4ee5\u6539\u4e3a\uff1a bool isNoble ( int atomicNumber ) => _nobleGases [ atomicNumber ] != null ; \u533f\u540d\u51fd\u6570\uff1a 1 2 3 4 5 6 7 var list = [ 'apples' , 'bananas' , 'oranges' ]; list . forEach (( item ) { print ( ' ${ list . indexOf ( item ) } : $ item ' ); }); //(){}\u662f\u533f\u540d\u51fd\u6570 // \u53ea\u6709\u4e00\u6761\u8bed\u53e5\u7684\u51fd\u6570\u53ef\u4ee5\u7528=>\u7b80\u5316 list . forEach ( ( item ) => print ( ' ${ list . indexOf ( item ) } : $ item ' ) ); \u81ea\u6267\u884c\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 (() => { print ( \"\u6211\u662f\u81ea\u6267\u884c\u65b9\u6cd5\" ); })(); // \u4f20\u53c2 (( int n ) => { print ( \"\u4f20\u5165\u53c2\u6570\uff1a\" + n ); })( 12 );","title":"3. \u51fd\u6570"},{"location":"Dart/#4","text":"5/2 \u7684\u503c\u662f 2.5 \uff0c 5~/2 \u7684\u503c\u624d\u662f 2 \u7c7b\u578b\u5224\u5b9a\u8fd0\u7b97\u7b26 Operator Meaning as Typecast (\u4e5f\u88ab\u7528\u4e8e \u6307\u5b9a\u5e93\u524d\u7f00 ) is True if the object has the specified type is! False if the object has the specified type 1 2 3 4 5 6 // Type check if ( emp is Person ) { emp . firstName = 'Bob' ; } ( emp as Person ). firstName = 'Bob' ; \u8d4b\u503c\u8fd0\u7b97\u7b26 1 2 3 4 5 6 // \u5c06\u503c\u8d4b\u503c\u7ed9\u53d8\u91cfa a = value ; // \u5982\u679cb\u4e3a\u7a7a\u65f6\uff0c\u5c06\u53d8\u91cf\u8d4b\u503c\u7ed9b\uff0c\u5426\u5219b\u7684\u503c\u4fdd\u6301\u4e0d\u53d8 b ??= value ; // name \u4e3a\u7a7a\u65f6\u8fd4\u56de'Guest' String playerName ( String name ) => name ?? 'Guest' ; \u7ea7\u8054\u8fd0\u7b97\u7b26.. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 querySelector ( '#confirm' ) // \u83b7\u53d6\u5bf9\u8c61\u3002 .. text = 'Confirm' // \u8c03\u7528\u6210\u5458\u53d8\u91cf\u3002 .. classes . add ( 'important' ) .. onClick . listen (( e ) => window . alert ( 'Confirmed!' )); // \u76f8\u5f53\u4e8e var button = querySelector ( '#confirm' ); button . text = 'Confirm' ; button . classes . add ( 'important' ); button . onClick . listen (( e ) => window . alert ( 'Confirmed!' )); // \u5728\u8fd4\u56de\u5bf9\u8c61\u7684\u51fd\u6570\u4e2d\u8c28\u614e\u4f7f\u7528\u7ea7\u8054\u64cd\u4f5c\u7b26\u3002 //sb.write() \u51fd\u6570\u8c03\u7528\u8fd4\u56de void\uff0c \u4e0d\u80fd\u5728 void \u5bf9\u8c61\u4e0a\u521b\u5efa\u7ea7\u8054\u64cd\u4f5c\u3002 var sb = StringBuffer (); sb . write ( 'foo' ) .. write ( 'bar' ); // Error: 'void' \u6ca1\u54df\u5b9a\u4e49 'write' \u51fd\u6570\u3002 assert \u5982\u679c assert \u8bed\u53e5\u4e2d\u7684\u5e03\u5c14\u6761\u4ef6\u4e3a false \uff0c \u90a3\u4e48\u6b63\u5e38\u7684\u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b\u4f1a\u88ab\u4e2d\u65ad\u3002 assert \u8bed\u53e5\u53ea\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u6709\u6548\uff0c \u5728\u751f\u4ea7\u73af\u5883\u662f\u65e0\u6548\u7684\uff1b Flutter \u4e2d\u7684 assert \u53ea\u5728 debug \u6a21\u5f0f\u4e2d\u6709\u6548\u3002","title":"4. \u8fd0\u7b97\u7b26"},{"location":"Dart/#5","text":"\u6240\u6709\u7684\u7c7b\u90fd\u7ee7\u627f\u4e8e Object p?.y = 4; \u8868\u793a p \u53ef\u80fd\u4e3a\u7a7a \u6784\u9020\u51fd\u6570\u7684 new \u53ef\u7701\u7565 \u6ca1\u6709 public \u3001 private \u3001 protected \u7b49\u5173\u952e\u5b57\uff0c\u53d8\u91cf\u524d\u52a0\u4e0a _ \u8868\u793a\u662f\u79c1\u6709\u7684\uff1a var _param = 2; \u547d\u540d\u6784\u9020\u51fd\u6570 \uff08\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u88ab\u7ee7\u627f\uff09 1 2 3 4 5 6 7 8 9 10 11 class Point { num x , y ; Point ( this . x , this . y ); // \u547d\u540d\u6784\u9020\u51fd\u6570 Point . origin () { x = 0 ; y = 0 ; } } Getter\u548cSetter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Rectangle { num left , top , width , height ; Rectangle ( this . left , this . top , this . width , this . height ); // \u5b9a\u4e49\u4e24\u4e2a\u8ba1\u7b97\u5c5e\u6027\uff1a right \u548c bottom\u3002 num get right => left + width ; set right ( num value ) => left = value - width ; num get bottom => top + height ; set bottom ( num value ) => top = value - height ; } void main () { var rect = Rectangle ( 3 , 4 , 20 , 15 ); assert ( rect . left == 3 ); rect . right = 12 ; assert ( rect . left == - 8 ); } \u62bd\u8c61\u65b9\u6cd5 1 2 3 4 abstract class Doer { // \u5b9a\u4e49\u5b9e\u4f8b\u53d8\u91cf\u548c\u65b9\u6cd5 ... void doSomething (); // \u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u3002 } \u62bd\u8c61\u7c7b 1 2 3 4 5 6 7 // \u8fd9\u4e2a\u7c7b\u88ab\u5b9a\u4e49\u4e3a\u62bd\u8c61\u7c7b\uff0c // \u6240\u4ee5\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002 abstract class AbstractContainer { // \u5b9a\u4e49\u6784\u9020\u884c\u6570\uff0c\u5b57\u6bb5\uff0c\u65b9\u6cd5... void updateChildren (); // \u62bd\u8c61\u65b9\u6cd5\u3002 } \u63a5\u53e3\u7528 implements \uff0c\u7ee7\u627f\u7528 extends \u679a\u4e3e\u7c7b 1 2 3 4 5 enum Color { red , green , blue } // \u83b7\u53d6\u6240\u6709\u679a\u4e3e\u503c\u5217\u8868\uff08 list \uff09 List < Color > colors = Color . values ; assert ( colors [ 2 ] == Color . blue ); mixins \u5b9e\u73b0\u7c7b\u4f3c\u591a\u7ee7\u627f\u529f\u80fd\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class A { void printA (){ print ( \"A\" ); } } class B { void printB (){ print ( \"B\" ); } } class C with A , B { } void main (){ var c = new C (); c . printA (); c . printB (); } \u6cdb\u578b\uff1a 1 2 3 T getData < T > ( T data ){ return data ; }","title":"5. \u7c7b"},{"location":"Flutter/","text":"\u57fa\u672c\u8d44\u6599 \u00b6 Flutter \u662f Google \u5f00\u6e90\u7684 UI \u5de5\u5177\u5305\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u901a\u8fc7\u4e00\u5957\u4ee3\u7801\u5e93\u9ad8\u6548\u6784\u5efa\u591a\u5e73\u53f0\u7cbe\u7f8e\u5e94\u7528\uff0c\u652f\u6301\u79fb\u52a8\u3001Web\u3001\u684c\u9762\u548c\u5d4c\u5165\u5f0f\u5e73\u53f0\u3002 Flutter \u4e4b\u524d\u7684\u8de8\u5e73\u53f0\u79fb\u52a8\u5e94\u7528\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u4e24\u5927\u4e3b\u6d41\u601d\u8def\uff1a 1) \u5229\u7528 DOM \u6765\u6e32\u67d3 UI\u3002\u64b0\u5199 JavaScript\uff0c\u7136\u540e\u5c06\u5176\u6253\u5305\u5230\u4e00\u4e2a\u79fb\u52a8\u5e94\u7528\u4e2d\u3002 2) \u628a JavaScript \u6620\u5c04\u5230\u539f\u751f UI\uff0c\u4f7f\u7528\u539f\u751f UI \u7684\u80fd\u529b\u3002 \u800c flutter \u66f4\u50cf\u662f\u4e00\u4e2a\u6e38\u620f\u5f15\u64ce\uff0c\u5b83\u6784\u5efa\u5728\u4e00\u4e2a 2D \u56fe\u5f62\u5f15\u64ce Skia \u4e4b\u4e0a\u3002\uff08Skia \u6027\u80fd\u975e\u5e38\u4f18\u79c0\uff0c\u662f chrome \u548c android \u5185\u7f6e\u7684\u56fe\u5f62\u5f15\u64ce\uff09 Flutter \u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u6838\u5fc3\u6a21\u5757\uff1a Framework\uff1a\u57fa\u4e8e Dart \u8bed\u8a00\u6784\u5efa\u7684 framework\uff0c\u5305\u62ec\u4e86\u52a8\u753b\u4ee5\u53ca\u5404\u79cd\u7ec4\u4ef6\uff1b Engine\uff1a\u57fa\u4e8e C/C++ \u6784\u5efa\u7684\u5f15\u64ce\uff0c\u5305\u62ec\u4e86 Skia \u548c Dart VM, \u4ee5\u53ca\u5728\u4e0d\u540c\u5e73\u53f0\u5b9e\u73b0\u7684 shell \u5c42\uff0cEngine \u901a\u8fc7\u5c01\u88c5\u597d\u7684 Embedder API \u53bb\u8c03\u7528\u4e0d\u540c\u5e73\u53f0\u7684\u80fd\u529b\uff1b Embedder\uff1a\u5d4c\u5165\u5c42\uff0c\u5c06 Flutter \u5d4c\u5165\u5230\u5404\u4e2a\u5e73\u53f0\u4e0a\u3002Embedder \u8d1f\u8d23\u8303\u56f4\u5305\u62ec\u539f\u751f\u5e73\u53f0\u63d2\u4ef6\u3001\u7ebf\u7a0b\u7ba1\u7406\u3001\u4e8b\u4ef6\u5faa\u73af\u7b49\u3002 \u4f18\u70b9\uff1a \u6027\u80fd\u597d Flutter \u4e0d\u4f9d\u8d56\u5df2\u6709\u7684\u6e32\u67d3\u5f15\u64ce\uff0c\u800c\u662f\u81ea\u5df1\u63a7\u5236\u5c4f\u5e55\u4e0a\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u7684\u6e32\u67d3\u3002 flutter \u5ba3\u79f0\u81ea\u5df1\u7684\u6e32\u67d3\u80fd\u529b\u662f 60 fps \uff0c\u4ece\u7528\u6237\u8f93\u5165\u5230\u6700\u7ec8\u6e32\u67d3\uff0c\u4f1a\u7ecf\u5386\u4ee5\u4e0b pipeline\uff1a User Input -> Animation -> Build -> Layout -> Paint -> Composite -> Rasterize \u8de8\u5e73\u53f0\u6f5c\u529b\u9ad8 flutter \u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u79fb\u52a8\u7aef\u5e94\u7528\u6269\u5c55\u5230\u5ba2\u6237\u7aef\u3001Web \u7b49\u3002\u76ee\u524d\u5df2\u7ecf\u652f\u6301\u7684\u5e73\u53f0\u6709\uff1a Android \u3001 IOS \u3001 Linux \u3001 macOS \u3001 Web \u3001 Windows \u3002 \u5f00\u53d1\u6548\u7387\u9ad8 \u4f7f\u7528 dart \u8bed\u8a00\uff0c\u652f\u6301 AOT \uff08Ahead Of Time\uff09\u548c JIT \uff08Just In Time\uff09\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c web \u5f00\u53d1\u7684\u90a3\u79cd\u300c\u8fb9\u5199\u8fb9\u8c03\u300d\u7684\u6781\u81f4\u4f53\u9a8c\u3002 \u5df2\u652f\u6301\u9e3f\u8499\u7cfb\u7edf \u7f3a\u70b9\uff1a \u8131\u79bb\u4e0d\u5f00\u539f\u751f\uff0c\u9700\u8981\u53cc\u7aef\u90fd\u719f\u6089 \u539f\u751f\u96c6\u6210\u7b2c\u4e09\u65b9 SDK \uff0c\u9002\u914d\u6027\u5dee UI\u63a7\u4ef6API\u7b80\u964b\uff0c\u8bb8\u591a\u63a7\u4ef6\u5c5e\u6027\u65e0\u6cd5\u81ea\u5b9a\u4e49 \u4ee3\u7801\u53ef\u8bfb\u6027\u5dee \u6253\u5305\u540e\u7684 apk \u8fc7\u5927 \u80fd\u591f\u5b9e\u73b0\u7684\u529f\u80fd \u00b6 1. \u7528\u6237\u754c\u9762 \u00b6 Widget Flutter \u4ece React \u4e2d\u5438\u53d6\u7075\u611f\uff0c\u901a\u8fc7\u73b0\u4ee3\u5316\u6846\u67b6\u521b\u5efa\u51fa\u7cbe\u7f8e\u7684\u7ec4\u4ef6\u3002\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\u7528 widget \u6765\u6784\u5efa UI \u754c\u9762\u3002\u5e38\u7528\u7684\u6709\uff1a Text \u3001 Row \u3001 Column \u3001 Stack \u3001 Container \u7b49\u3002 \u9875\u9762\u5e03\u5c40 Flutter \u5e03\u5c40\u7684\u6838\u5fc3\u673a\u5236\u662f widgets\uff0c\u5b83\u662f\u7528\u4e8e\u6784\u5efa UI \u7684\u7c7b\u3002\u5728 Flutter \u4e2d\uff0c\u51e0\u4e4e\u6240\u6709\u4e1c\u897f\u90fd\u662f widget \uff0c \u751a\u81f3\u5e03\u5c40\u6a21\u578b\u90fd\u662f widgets\u3002\u4ece\u800c\u53ef\u4ee5\u540e\u89c1\u54cd\u5e94\u5f0f\u548c\u81ea\u9002\u5e94\u7684\u5e94\u7528\u3002 widgets \u5206\u4e3a\u6709\u72b6\u6001\u548c\u65e0\u72b6\u6001\uff0c\u6709\u72b6\u6001\u7684 widgets \u53ef\u4ee5\u548c\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\uff0c\u800c\u65e0\u72b6\u6001\u7684 widgets \u81ea\u8eab\u65e0\u6cd5\u6539\u53d8\u3002 \u8def\u7531\u5bfc\u822a Flutter \u7684\u8def\u7531\u673a\u5236\u6709\uff1a Navigator widgets \u548c Router widgets\u3002\u8df3\u8f6c\u5230\u5176\u4ed6\u9875\u9762\u3001\u6253\u5f00\u5f39\u7a97\u7b49\u90fd\u9700\u8981\u7528\u5230\u8def\u7531\u5bfc\u822a\uff0c\u540c\u65f6\u53ef\u4ee5\u8fdb\u884c\u9875\u9762\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9012\u3002 \u52a8\u753b\u6548\u679c Flutter \u4e2d\u7684\u52a8\u753b\u7cfb\u7edf\u57fa\u4e8e Animation \uff0c Widgets \u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e9b\u52a8\u753b\u5408\u5e76\u5230\u81ea\u5df1\u7684 build \u65b9\u6cd5\u4e2d\u6765\u8bfb\u53d6\u5b83\u4eec\u7684\u5f53\u524d\u503c\u6216\u8005\u76d1\u542c\u5b83\u4eec\u7684\u72b6\u6001\u53d8\u5316\uff0c\u6216\u8005\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u7684\u66f4\u590d\u6742\u52a8\u753b\u7684\u57fa\u7840\u4f20\u9012\u7ed9\u5176\u4ed6 widgets\u3002 \u52a8\u753b\u5206\u4e3a\u8865\u95f4\u52a8\u753b(Tween Animation)\u548c\u57fa\u4e8e\u7269\u7406\u7684\u52a8\u753b(Physics-based Animation)\uff0c\u4f7f\u5f97\u7ec4\u4ef6\u7684\u8fd0\u52a8\u8f68\u8ff9\u7075\u6d3b\u591a\u53d8\uff0c\u4ece\u800c\u53ef\u4ee5\u5b9e\u73b0\u7ec4\u4ef6\u7684\u7ebf\u6027\u3001\u975e\u7ebf\u6027\u5300\u901f\u8fd0\u52a8\u52a8\u753b\uff0c\u6539\u53d8\u7ec4\u4ef6\u7684\u5706\u89d2\u3001\u989c\u8272\u3001\u9634\u5f71\u3001\u53d8\u6362\u7b49\u3002\u52a8\u753b\u7684\u6e32\u67d3\u81ea\u7531\u3001\u7075\u6d3b\u3001\u9ad8\u6548\u3002 2. \u7528\u6237\u4ea4\u4e92 \u00b6 \u5728\u79fb\u52a8\u7aef\u7684\u7528\u6237\u4ea4\u4e92\u4e8b\u4ef6\u65e2\u662f\u7528\u6237\u7684\u624b\u52bf\u64cd\u4f5c\u5904\u7406\uff0c\u5b83\u5728 flutter \u4e2d\u53ef\u5206\u4e3a\u4e24\u7c7b\uff1a \u7b2c\u4e00\u7c7b\u662f\u539f\u59cb\u7684\u6307\u9488\u4e8b\u4ef6\uff08Pointer Event\uff09\uff0c\u5373\u539f\u751f\u5f00\u53d1\u4e2d\u5e38\u89c1\u7684\u89e6\u6478\u4e8b\u4ef6\uff0c\u8868\u793a\u5c4f\u5e55\u4e0a\u89e6\u6478\uff08\u6216\u9f20\u6807\u3001\u624b\u5199\u7b14\uff09\u884c\u4e3a\u89e6\u53d1\u6240\u7684\u4f4d\u79fb\u884c\u4e3a\u3002 \u7b2c\u4e8c\u7c7b\u5219\u662f\u624b\u52bf\u8bc6\u522b\uff08Gesture Detector\uff09\uff0c\u8868\u793a\u591a\u4e2a\u539f\u751f\u6307\u9488\u4e8b\u4ef6\u7684\u7ec4\u5408\u64cd\u4f5c\uff0c\u5982\u70b9\u51fb\u3001\u53cc\u51fb\u3001\u957f\u6309\u3001\u7b49\uff0c\u662f\u6307\u9488\u4e8b\u4ef6\u7684\u8bed\u4e49\u5316\u5c01\u88c5\u3002 3. \u57fa\u7840\u80fd\u529b \u00b6 \u672c\u5730\u5b58\u50a8 Flutter\u652f\u6301Preferences \u3001\u6587\u4ef6\u3001\u548cSqlite3\uff0c\u9700\u8981\u5f15\u5165\u5b98\u65b9\u4ed3\u5e93\u7684\u76f8\u5e94\u63d2\u4ef6\u3002 \u7f51\u7edc\u534f\u8bae Flutter \u652f\u6301 HTTP \u534f\u8bae\u3001web socket \u534f\u8bae\uff0c\u4ee5\u53ca Socket \u534f\u8bae\u3002\u7531 HttpServer \u7c7b\u548c HttpClient \u7c7b\u63d0\u4f9b HTTP \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u529f\u80fd\u3002 UI \u6e32\u67d3 \u5728 Flutter \u4e2d Widget \u662f\u6838\u5fc3\uff0c\u4e00\u8d77\u534f\u540c\u5de5\u4f5c\u7684\u8fd8\u6709\u53e6\u5916\u4e24\u4e2a\u5143\u7d20\uff1aElement \u548c RenderObject\u3002\u7531\u4e8e\u5b83\u4eec\u90fd\u662f\u6709\u7740\u6811\u5f62\u7ed3\u6784\uff0c\u6240\u4ee5\u7ecf\u5e38\u4f1a\u79f0\u5b83\u4eec\u4e3a\u4e09\u68f5\u6811\u3002 \u5f53\u5e94\u7528\u542f\u52a8\u65f6 Flutter \u4f1a\u904d\u5386\u5e76\u521b\u5efa\u6240\u6709\u7684 Widget \u5f62\u6210 Widget Tree \uff0c\u901a\u8fc7\u8c03\u7528 Widget \u4e0a\u7684 createElement() \u65b9\u6cd5\u521b\u5efa\u6bcf\u4e2a Element \u5bf9\u8c61\uff0c\u5f62\u6210 Element Tree\u3002\u540e\u8c03\u7528 Element \u7684 createRenderObject() \u65b9\u6cd5\u521b\u5efa\u6bcf\u4e2a\u6e32\u67d3\u5bf9\u8c61\uff0c\u5f62\u6210\u4e00\u4e2a Render Tree\u3002 4. \u7ec4\u4ef6\u5c01\u88c5 \u00b6 \u57fa\u7840\u7ec4\u4ef6 \u57fa\u7840\u7ec4\u4ef6\u5305\u62ec\u56fe\u7247\u3001 Icon \u3001 Text \u3001\u6309\u94ae\u3001\u5355\u9009\u5f00\u5173\u3001\u590d\u9009\u6846\u3001\u8f93\u5165\u6846\u3001\u8868\u5355\u3001\u8fdb\u5ea6\u6307\u793a\u5668\u7b49\u3002 \u6269\u5c55\u7ec4\u4ef6 Container \u3001 AlertDialog \u3001 AppBar \u3001 Clip \u3001 Card \u3001 DataTable \u3001 Stack \u7b49\u3002 \u751f\u547d\u5468\u671f Flutter \u4e2d\u8bf4\u7684\u751f\u547d\u5468\u671f\uff0c\u662f\u6307\u6709\u72b6\u6001\u7ec4\u4ef6\uff0c\u65e0\u72b6\u6001\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u53ea\u6709 Build \u3002 \u5176\u751f\u547d\u5468\u671f\u4e3a\uff1a createState \uff1a\u7528\u4e8e\u521b\u5efa State initState \uff1a\u4e3a State \u521d\u59cb\u5316\u65f6\u8c03\u7528 didChangeDependencies \uff1a\u5728\u8be5\u7ec4\u4ef6\u4f9d\u8d56\u7684 State \u53d1\u751f\u53d8\u5316\u65f6\u8c03\u7528 build \uff1a\u4e3b\u8981\u662f\u8fd4\u56de\u9700\u8981\u6e32\u67d3\u7684 Widget \uff0c\u7531\u4e8e build \u4f1a\u88ab\u8c03\u7528\u591a\u6b21\uff0c\u56e0\u6b64\u5728\u8be5\u51fd\u6570\u4e2d\u53ea\u80fd\u505a\u8fd4\u56de Widget \u76f8\u5173\u903b\u8f91\uff0c\u907f\u514d\u56e0\u4e3a\u6267\u884c\u591a\u6b21\u5bfc\u81f4\u72b6\u6001\u5f02\u5e38\u3002 reassemble \uff1a\u4e3b\u8981\u662f\u63d0\u4f9b\u5f00\u53d1\u9636\u6bb5\u4f7f\u7528\uff0c\u5728 debug \u6a21\u5f0f\u4e0b\uff0c\u6bcf\u6b21\u70ed\u91cd\u8f7d\u90fd\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u56e0\u6b64\u5728 debug \u9636\u6bb5\u53ef\u4ee5\u5728\u6b64\u671f\u95f4\u589e\u52a0\u4e00\u4e9b debug \u4ee3\u7801\uff0c\u6765\u68c0\u67e5\u4ee3\u7801\u95ee\u9898\u3002 didUpdateWidget \uff1a\u8be5\u51fd\u6570\u4e3b\u8981\u662f\u5728\u7ec4\u4ef6\u91cd\u65b0\u6784\u5efa\uff0c\u6bd4\u5982\u8bf4\u70ed\u91cd\u8f7d\uff0c\u7236\u7ec4\u4ef6\u53d1\u751f build \u7684\u60c5\u51b5\u4e0b\uff0c\u5b50\u7ec4\u4ef6\u8be5\u65b9\u6cd5\u624d\u4f1a\u88ab\u8c03\u7528\uff0c\u5176\u6b21\u8be5\u65b9\u6cd5\u8c03\u7528\u4e4b\u540e\u4e00\u5b9a\u4f1a\u518d\u8c03\u7528\u672c\u7ec4\u4ef6\u4e2d\u7684 build \u65b9\u6cd5\u3002 deactivate \uff1a\u5728\u7ec4\u4ef6\u88ab\u79fb\u9664\u8282\u70b9\u540e\u4f1a\u88ab\u8c03\u7528\uff0c\u5982\u679c\u8be5\u7ec4\u4ef6\u88ab\u79fb\u9664\u8282\u70b9\uff0c\u7136\u540e\u672a\u88ab\u63d2\u5165\u5230\u5176\u4ed6\u8282\u70b9\u65f6\uff0c\u5219\u4f1a\u7ee7\u7eed\u8c03\u7528 dispose \u6c38\u4e45\u79fb\u9664\u3002 dispose \uff1a\u6c38\u4e45\u79fb\u9664\u7ec4\u4ef6\uff0c\u5e76\u91ca\u653e\u7ec4\u4ef6\u8d44\u6e90\u3002 \u5b89\u88c5\u548c\u73af\u5883\u914d\u7f6e \u00b6 \u4e0b\u8f7d Flutter \uff1a Windows\u7248\u4e2d\u56fd\u955c\u50cf \uff0c\u6700\u597d\u4e0d\u8981\u5b89\u88c5\u5230\u6743\u9650\u8fc7\u9ad8\u7684\u6587\u4ef6\u5939\u3002 \u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7 where flutter dart \u67e5\u770b\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u662f\u5426\u6210\u529f \u5728 cmd \u4e2d\u8f93\u5165 flutter doctor \uff0c\u6839\u636e\u63d0\u793a\u4e0b\u8f7d\u7f3a\u5c11\u7684\u63d2\u4ef6\u3002 \u8f93\u5165 flutter doctor --android-licenses \u8fdb\u884c\u534f\u8bae\u7684\u786e\u8ba4\uff0c\u540e\u7eed\u4e00\u76f4\u8f93 y \u5373\u53ef\u3002 \u6b63\u786e\u914d\u7f6e\u540e\u663e\u793a\uff1a \u53c2\u8003\u6587\u732e \u00b6 Flutter \u662f\u4ec0\u4e48\uff1f by Brant\u767d\u53d4 flutter: \u4e00\u5468\u611f\u609f by \u9648\u5929 \u5f00\u59cb\u4f7f\u7528Flutter by Flutter \u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b89\u88c5\u548c\u914d\u7f6e Flutter \u5f00\u53d1\u73af\u5883 by Flutter \u5728\u4e2d\u56fd\u7f51\u7edc\u73af\u5883\u4e0b\u4f7f\u7528Flutter by Flutter API\u6587\u6863 by Flutter \u5b98\u65b9\u5b9e\u7528\u6559\u7a0b by Flutter","title":"Flutter\u8c03\u7814\u62a5\u544a"},{"location":"Flutter/#_1","text":"Flutter \u662f Google \u5f00\u6e90\u7684 UI \u5de5\u5177\u5305\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u901a\u8fc7\u4e00\u5957\u4ee3\u7801\u5e93\u9ad8\u6548\u6784\u5efa\u591a\u5e73\u53f0\u7cbe\u7f8e\u5e94\u7528\uff0c\u652f\u6301\u79fb\u52a8\u3001Web\u3001\u684c\u9762\u548c\u5d4c\u5165\u5f0f\u5e73\u53f0\u3002 Flutter \u4e4b\u524d\u7684\u8de8\u5e73\u53f0\u79fb\u52a8\u5e94\u7528\u89e3\u51b3\u65b9\u6848\uff0c\u6709\u4e24\u5927\u4e3b\u6d41\u601d\u8def\uff1a 1) \u5229\u7528 DOM \u6765\u6e32\u67d3 UI\u3002\u64b0\u5199 JavaScript\uff0c\u7136\u540e\u5c06\u5176\u6253\u5305\u5230\u4e00\u4e2a\u79fb\u52a8\u5e94\u7528\u4e2d\u3002 2) \u628a JavaScript \u6620\u5c04\u5230\u539f\u751f UI\uff0c\u4f7f\u7528\u539f\u751f UI \u7684\u80fd\u529b\u3002 \u800c flutter \u66f4\u50cf\u662f\u4e00\u4e2a\u6e38\u620f\u5f15\u64ce\uff0c\u5b83\u6784\u5efa\u5728\u4e00\u4e2a 2D \u56fe\u5f62\u5f15\u64ce Skia \u4e4b\u4e0a\u3002\uff08Skia \u6027\u80fd\u975e\u5e38\u4f18\u79c0\uff0c\u662f chrome \u548c android \u5185\u7f6e\u7684\u56fe\u5f62\u5f15\u64ce\uff09 Flutter \u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u6838\u5fc3\u6a21\u5757\uff1a Framework\uff1a\u57fa\u4e8e Dart \u8bed\u8a00\u6784\u5efa\u7684 framework\uff0c\u5305\u62ec\u4e86\u52a8\u753b\u4ee5\u53ca\u5404\u79cd\u7ec4\u4ef6\uff1b Engine\uff1a\u57fa\u4e8e C/C++ \u6784\u5efa\u7684\u5f15\u64ce\uff0c\u5305\u62ec\u4e86 Skia \u548c Dart VM, \u4ee5\u53ca\u5728\u4e0d\u540c\u5e73\u53f0\u5b9e\u73b0\u7684 shell \u5c42\uff0cEngine \u901a\u8fc7\u5c01\u88c5\u597d\u7684 Embedder API \u53bb\u8c03\u7528\u4e0d\u540c\u5e73\u53f0\u7684\u80fd\u529b\uff1b Embedder\uff1a\u5d4c\u5165\u5c42\uff0c\u5c06 Flutter \u5d4c\u5165\u5230\u5404\u4e2a\u5e73\u53f0\u4e0a\u3002Embedder \u8d1f\u8d23\u8303\u56f4\u5305\u62ec\u539f\u751f\u5e73\u53f0\u63d2\u4ef6\u3001\u7ebf\u7a0b\u7ba1\u7406\u3001\u4e8b\u4ef6\u5faa\u73af\u7b49\u3002 \u4f18\u70b9\uff1a \u6027\u80fd\u597d Flutter \u4e0d\u4f9d\u8d56\u5df2\u6709\u7684\u6e32\u67d3\u5f15\u64ce\uff0c\u800c\u662f\u81ea\u5df1\u63a7\u5236\u5c4f\u5e55\u4e0a\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u7684\u6e32\u67d3\u3002 flutter \u5ba3\u79f0\u81ea\u5df1\u7684\u6e32\u67d3\u80fd\u529b\u662f 60 fps \uff0c\u4ece\u7528\u6237\u8f93\u5165\u5230\u6700\u7ec8\u6e32\u67d3\uff0c\u4f1a\u7ecf\u5386\u4ee5\u4e0b pipeline\uff1a User Input -> Animation -> Build -> Layout -> Paint -> Composite -> Rasterize \u8de8\u5e73\u53f0\u6f5c\u529b\u9ad8 flutter \u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u79fb\u52a8\u7aef\u5e94\u7528\u6269\u5c55\u5230\u5ba2\u6237\u7aef\u3001Web \u7b49\u3002\u76ee\u524d\u5df2\u7ecf\u652f\u6301\u7684\u5e73\u53f0\u6709\uff1a Android \u3001 IOS \u3001 Linux \u3001 macOS \u3001 Web \u3001 Windows \u3002 \u5f00\u53d1\u6548\u7387\u9ad8 \u4f7f\u7528 dart \u8bed\u8a00\uff0c\u652f\u6301 AOT \uff08Ahead Of Time\uff09\u548c JIT \uff08Just In Time\uff09\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c web \u5f00\u53d1\u7684\u90a3\u79cd\u300c\u8fb9\u5199\u8fb9\u8c03\u300d\u7684\u6781\u81f4\u4f53\u9a8c\u3002 \u5df2\u652f\u6301\u9e3f\u8499\u7cfb\u7edf \u7f3a\u70b9\uff1a \u8131\u79bb\u4e0d\u5f00\u539f\u751f\uff0c\u9700\u8981\u53cc\u7aef\u90fd\u719f\u6089 \u539f\u751f\u96c6\u6210\u7b2c\u4e09\u65b9 SDK \uff0c\u9002\u914d\u6027\u5dee UI\u63a7\u4ef6API\u7b80\u964b\uff0c\u8bb8\u591a\u63a7\u4ef6\u5c5e\u6027\u65e0\u6cd5\u81ea\u5b9a\u4e49 \u4ee3\u7801\u53ef\u8bfb\u6027\u5dee \u6253\u5305\u540e\u7684 apk \u8fc7\u5927","title":"\u57fa\u672c\u8d44\u6599"},{"location":"Flutter/#_2","text":"","title":"\u80fd\u591f\u5b9e\u73b0\u7684\u529f\u80fd"},{"location":"Flutter/#1","text":"Widget Flutter \u4ece React \u4e2d\u5438\u53d6\u7075\u611f\uff0c\u901a\u8fc7\u73b0\u4ee3\u5316\u6846\u67b6\u521b\u5efa\u51fa\u7cbe\u7f8e\u7684\u7ec4\u4ef6\u3002\u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\u7528 widget \u6765\u6784\u5efa UI \u754c\u9762\u3002\u5e38\u7528\u7684\u6709\uff1a Text \u3001 Row \u3001 Column \u3001 Stack \u3001 Container \u7b49\u3002 \u9875\u9762\u5e03\u5c40 Flutter \u5e03\u5c40\u7684\u6838\u5fc3\u673a\u5236\u662f widgets\uff0c\u5b83\u662f\u7528\u4e8e\u6784\u5efa UI \u7684\u7c7b\u3002\u5728 Flutter \u4e2d\uff0c\u51e0\u4e4e\u6240\u6709\u4e1c\u897f\u90fd\u662f widget \uff0c \u751a\u81f3\u5e03\u5c40\u6a21\u578b\u90fd\u662f widgets\u3002\u4ece\u800c\u53ef\u4ee5\u540e\u89c1\u54cd\u5e94\u5f0f\u548c\u81ea\u9002\u5e94\u7684\u5e94\u7528\u3002 widgets \u5206\u4e3a\u6709\u72b6\u6001\u548c\u65e0\u72b6\u6001\uff0c\u6709\u72b6\u6001\u7684 widgets \u53ef\u4ee5\u548c\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\uff0c\u800c\u65e0\u72b6\u6001\u7684 widgets \u81ea\u8eab\u65e0\u6cd5\u6539\u53d8\u3002 \u8def\u7531\u5bfc\u822a Flutter \u7684\u8def\u7531\u673a\u5236\u6709\uff1a Navigator widgets \u548c Router widgets\u3002\u8df3\u8f6c\u5230\u5176\u4ed6\u9875\u9762\u3001\u6253\u5f00\u5f39\u7a97\u7b49\u90fd\u9700\u8981\u7528\u5230\u8def\u7531\u5bfc\u822a\uff0c\u540c\u65f6\u53ef\u4ee5\u8fdb\u884c\u9875\u9762\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9012\u3002 \u52a8\u753b\u6548\u679c Flutter \u4e2d\u7684\u52a8\u753b\u7cfb\u7edf\u57fa\u4e8e Animation \uff0c Widgets \u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e9b\u52a8\u753b\u5408\u5e76\u5230\u81ea\u5df1\u7684 build \u65b9\u6cd5\u4e2d\u6765\u8bfb\u53d6\u5b83\u4eec\u7684\u5f53\u524d\u503c\u6216\u8005\u76d1\u542c\u5b83\u4eec\u7684\u72b6\u6001\u53d8\u5316\uff0c\u6216\u8005\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u7684\u66f4\u590d\u6742\u52a8\u753b\u7684\u57fa\u7840\u4f20\u9012\u7ed9\u5176\u4ed6 widgets\u3002 \u52a8\u753b\u5206\u4e3a\u8865\u95f4\u52a8\u753b(Tween Animation)\u548c\u57fa\u4e8e\u7269\u7406\u7684\u52a8\u753b(Physics-based Animation)\uff0c\u4f7f\u5f97\u7ec4\u4ef6\u7684\u8fd0\u52a8\u8f68\u8ff9\u7075\u6d3b\u591a\u53d8\uff0c\u4ece\u800c\u53ef\u4ee5\u5b9e\u73b0\u7ec4\u4ef6\u7684\u7ebf\u6027\u3001\u975e\u7ebf\u6027\u5300\u901f\u8fd0\u52a8\u52a8\u753b\uff0c\u6539\u53d8\u7ec4\u4ef6\u7684\u5706\u89d2\u3001\u989c\u8272\u3001\u9634\u5f71\u3001\u53d8\u6362\u7b49\u3002\u52a8\u753b\u7684\u6e32\u67d3\u81ea\u7531\u3001\u7075\u6d3b\u3001\u9ad8\u6548\u3002","title":"1. \u7528\u6237\u754c\u9762"},{"location":"Flutter/#2","text":"\u5728\u79fb\u52a8\u7aef\u7684\u7528\u6237\u4ea4\u4e92\u4e8b\u4ef6\u65e2\u662f\u7528\u6237\u7684\u624b\u52bf\u64cd\u4f5c\u5904\u7406\uff0c\u5b83\u5728 flutter \u4e2d\u53ef\u5206\u4e3a\u4e24\u7c7b\uff1a \u7b2c\u4e00\u7c7b\u662f\u539f\u59cb\u7684\u6307\u9488\u4e8b\u4ef6\uff08Pointer Event\uff09\uff0c\u5373\u539f\u751f\u5f00\u53d1\u4e2d\u5e38\u89c1\u7684\u89e6\u6478\u4e8b\u4ef6\uff0c\u8868\u793a\u5c4f\u5e55\u4e0a\u89e6\u6478\uff08\u6216\u9f20\u6807\u3001\u624b\u5199\u7b14\uff09\u884c\u4e3a\u89e6\u53d1\u6240\u7684\u4f4d\u79fb\u884c\u4e3a\u3002 \u7b2c\u4e8c\u7c7b\u5219\u662f\u624b\u52bf\u8bc6\u522b\uff08Gesture Detector\uff09\uff0c\u8868\u793a\u591a\u4e2a\u539f\u751f\u6307\u9488\u4e8b\u4ef6\u7684\u7ec4\u5408\u64cd\u4f5c\uff0c\u5982\u70b9\u51fb\u3001\u53cc\u51fb\u3001\u957f\u6309\u3001\u7b49\uff0c\u662f\u6307\u9488\u4e8b\u4ef6\u7684\u8bed\u4e49\u5316\u5c01\u88c5\u3002","title":"2. \u7528\u6237\u4ea4\u4e92"},{"location":"Flutter/#3","text":"\u672c\u5730\u5b58\u50a8 Flutter\u652f\u6301Preferences \u3001\u6587\u4ef6\u3001\u548cSqlite3\uff0c\u9700\u8981\u5f15\u5165\u5b98\u65b9\u4ed3\u5e93\u7684\u76f8\u5e94\u63d2\u4ef6\u3002 \u7f51\u7edc\u534f\u8bae Flutter \u652f\u6301 HTTP \u534f\u8bae\u3001web socket \u534f\u8bae\uff0c\u4ee5\u53ca Socket \u534f\u8bae\u3002\u7531 HttpServer \u7c7b\u548c HttpClient \u7c7b\u63d0\u4f9b HTTP \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u529f\u80fd\u3002 UI \u6e32\u67d3 \u5728 Flutter \u4e2d Widget \u662f\u6838\u5fc3\uff0c\u4e00\u8d77\u534f\u540c\u5de5\u4f5c\u7684\u8fd8\u6709\u53e6\u5916\u4e24\u4e2a\u5143\u7d20\uff1aElement \u548c RenderObject\u3002\u7531\u4e8e\u5b83\u4eec\u90fd\u662f\u6709\u7740\u6811\u5f62\u7ed3\u6784\uff0c\u6240\u4ee5\u7ecf\u5e38\u4f1a\u79f0\u5b83\u4eec\u4e3a\u4e09\u68f5\u6811\u3002 \u5f53\u5e94\u7528\u542f\u52a8\u65f6 Flutter \u4f1a\u904d\u5386\u5e76\u521b\u5efa\u6240\u6709\u7684 Widget \u5f62\u6210 Widget Tree \uff0c\u901a\u8fc7\u8c03\u7528 Widget \u4e0a\u7684 createElement() \u65b9\u6cd5\u521b\u5efa\u6bcf\u4e2a Element \u5bf9\u8c61\uff0c\u5f62\u6210 Element Tree\u3002\u540e\u8c03\u7528 Element \u7684 createRenderObject() \u65b9\u6cd5\u521b\u5efa\u6bcf\u4e2a\u6e32\u67d3\u5bf9\u8c61\uff0c\u5f62\u6210\u4e00\u4e2a Render Tree\u3002","title":"3. \u57fa\u7840\u80fd\u529b"},{"location":"Flutter/#4","text":"\u57fa\u7840\u7ec4\u4ef6 \u57fa\u7840\u7ec4\u4ef6\u5305\u62ec\u56fe\u7247\u3001 Icon \u3001 Text \u3001\u6309\u94ae\u3001\u5355\u9009\u5f00\u5173\u3001\u590d\u9009\u6846\u3001\u8f93\u5165\u6846\u3001\u8868\u5355\u3001\u8fdb\u5ea6\u6307\u793a\u5668\u7b49\u3002 \u6269\u5c55\u7ec4\u4ef6 Container \u3001 AlertDialog \u3001 AppBar \u3001 Clip \u3001 Card \u3001 DataTable \u3001 Stack \u7b49\u3002 \u751f\u547d\u5468\u671f Flutter \u4e2d\u8bf4\u7684\u751f\u547d\u5468\u671f\uff0c\u662f\u6307\u6709\u72b6\u6001\u7ec4\u4ef6\uff0c\u65e0\u72b6\u6001\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f\u53ea\u6709 Build \u3002 \u5176\u751f\u547d\u5468\u671f\u4e3a\uff1a createState \uff1a\u7528\u4e8e\u521b\u5efa State initState \uff1a\u4e3a State \u521d\u59cb\u5316\u65f6\u8c03\u7528 didChangeDependencies \uff1a\u5728\u8be5\u7ec4\u4ef6\u4f9d\u8d56\u7684 State \u53d1\u751f\u53d8\u5316\u65f6\u8c03\u7528 build \uff1a\u4e3b\u8981\u662f\u8fd4\u56de\u9700\u8981\u6e32\u67d3\u7684 Widget \uff0c\u7531\u4e8e build \u4f1a\u88ab\u8c03\u7528\u591a\u6b21\uff0c\u56e0\u6b64\u5728\u8be5\u51fd\u6570\u4e2d\u53ea\u80fd\u505a\u8fd4\u56de Widget \u76f8\u5173\u903b\u8f91\uff0c\u907f\u514d\u56e0\u4e3a\u6267\u884c\u591a\u6b21\u5bfc\u81f4\u72b6\u6001\u5f02\u5e38\u3002 reassemble \uff1a\u4e3b\u8981\u662f\u63d0\u4f9b\u5f00\u53d1\u9636\u6bb5\u4f7f\u7528\uff0c\u5728 debug \u6a21\u5f0f\u4e0b\uff0c\u6bcf\u6b21\u70ed\u91cd\u8f7d\u90fd\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u56e0\u6b64\u5728 debug \u9636\u6bb5\u53ef\u4ee5\u5728\u6b64\u671f\u95f4\u589e\u52a0\u4e00\u4e9b debug \u4ee3\u7801\uff0c\u6765\u68c0\u67e5\u4ee3\u7801\u95ee\u9898\u3002 didUpdateWidget \uff1a\u8be5\u51fd\u6570\u4e3b\u8981\u662f\u5728\u7ec4\u4ef6\u91cd\u65b0\u6784\u5efa\uff0c\u6bd4\u5982\u8bf4\u70ed\u91cd\u8f7d\uff0c\u7236\u7ec4\u4ef6\u53d1\u751f build \u7684\u60c5\u51b5\u4e0b\uff0c\u5b50\u7ec4\u4ef6\u8be5\u65b9\u6cd5\u624d\u4f1a\u88ab\u8c03\u7528\uff0c\u5176\u6b21\u8be5\u65b9\u6cd5\u8c03\u7528\u4e4b\u540e\u4e00\u5b9a\u4f1a\u518d\u8c03\u7528\u672c\u7ec4\u4ef6\u4e2d\u7684 build \u65b9\u6cd5\u3002 deactivate \uff1a\u5728\u7ec4\u4ef6\u88ab\u79fb\u9664\u8282\u70b9\u540e\u4f1a\u88ab\u8c03\u7528\uff0c\u5982\u679c\u8be5\u7ec4\u4ef6\u88ab\u79fb\u9664\u8282\u70b9\uff0c\u7136\u540e\u672a\u88ab\u63d2\u5165\u5230\u5176\u4ed6\u8282\u70b9\u65f6\uff0c\u5219\u4f1a\u7ee7\u7eed\u8c03\u7528 dispose \u6c38\u4e45\u79fb\u9664\u3002 dispose \uff1a\u6c38\u4e45\u79fb\u9664\u7ec4\u4ef6\uff0c\u5e76\u91ca\u653e\u7ec4\u4ef6\u8d44\u6e90\u3002","title":"4. \u7ec4\u4ef6\u5c01\u88c5"},{"location":"Flutter/#_3","text":"\u4e0b\u8f7d Flutter \uff1a Windows\u7248\u4e2d\u56fd\u955c\u50cf \uff0c\u6700\u597d\u4e0d\u8981\u5b89\u88c5\u5230\u6743\u9650\u8fc7\u9ad8\u7684\u6587\u4ef6\u5939\u3002 \u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7 where flutter dart \u67e5\u770b\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u662f\u5426\u6210\u529f \u5728 cmd \u4e2d\u8f93\u5165 flutter doctor \uff0c\u6839\u636e\u63d0\u793a\u4e0b\u8f7d\u7f3a\u5c11\u7684\u63d2\u4ef6\u3002 \u8f93\u5165 flutter doctor --android-licenses \u8fdb\u884c\u534f\u8bae\u7684\u786e\u8ba4\uff0c\u540e\u7eed\u4e00\u76f4\u8f93 y \u5373\u53ef\u3002 \u6b63\u786e\u914d\u7f6e\u540e\u663e\u793a\uff1a","title":"\u5b89\u88c5\u548c\u73af\u5883\u914d\u7f6e"},{"location":"Flutter/#_4","text":"Flutter \u662f\u4ec0\u4e48\uff1f by Brant\u767d\u53d4 flutter: \u4e00\u5468\u611f\u609f by \u9648\u5929 \u5f00\u59cb\u4f7f\u7528Flutter by Flutter \u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b89\u88c5\u548c\u914d\u7f6e Flutter \u5f00\u53d1\u73af\u5883 by Flutter \u5728\u4e2d\u56fd\u7f51\u7edc\u73af\u5883\u4e0b\u4f7f\u7528Flutter by Flutter API\u6587\u6863 by Flutter \u5b98\u65b9\u5b9e\u7528\u6559\u7a0b by Flutter","title":"\u53c2\u8003\u6587\u732e"},{"location":"Flutter%E5%AE%9E%E4%BE%8B/","text":"Flutter Demo \u00b6 Flutter Api Docs 1. \u5feb\u6377\u952e \u00b6 r\uff1a \u70ed\u52a0\u8f7d p\uff1a \u663e\u793a\u7f51\u683c o\uff1a \u5207\u6362 android \u548c ios \u7684\u9884\u89c8\u6a21\u5f0f q\uff1a \u63a8\u51fa\u8c03\u8bd5\u9884\u89c8\u6a21\u5f0f 2. \u663e\u793a\u968f\u673a\u751f\u6210\u7684\u5355\u8bcd \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 import 'package:flutter/material.dart' ; import 'package:english_words/english_words.dart' ; void main () => runApp ( const MyApp ()); class MyApp extends StatelessWidget { const MyApp ({ Key ? key }) : super ( key: key ); @override Widget build ( BuildContext context ) { return MaterialApp ( // 1 title: 'Welcome to Flutter' , // \u8fdb\u7a0b\u540d\u79f0 home: Scaffold ( // 2 appBar: AppBar ( // 3 title: const Text ( 'Welcome to Flutter' ), ), body: Center ( child: RandomWords (), ), ), ); } } // \u6709\u72b6\u6001\u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u72b6\u6001 class RandomWords extends StatefulWidget { @override _RandomWordsState createState () => _RandomWordsState (); } // \u72b6\u6001 class _RandomWordsState extends State < RandomWords > { @override Widget build ( BuildContext context ) { var wordPair = WordPair . random (); // \u968f\u673a\u751f\u6210\u4e24\u4e2a\u5355\u8bcd\u7684\u7ec4\u5408 return Text ( wordPair . asPascalCase ); // asPascalCase\u662f\u8ba9\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 } } MaterialApp\uff1a \u7c7b\u4f3c\u4e8e\u7f51\u9875\u4e2d\u7684 <html> </html> \uff0c\u4e14\u5b83\u81ea\u5e26\u8def\u7531\u3001\u4e3b\u9898\u8272\u3001\u4e3b\u9898\u7b49\u529f\u80fd\u3002 Scaffold\uff1a \u4f1a\u586b\u5145\u53ef\u7528\u7a7a\u95f4\uff0c\u5360\u636e\u6574\u4e2a\u7a97\u53e3\u6216\u8bbe\u5907\u5c4f\u5e55\u3002Scaffold\u63d0\u4f9b\u4e86\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u90fd\u5e94\u8be5\u5177\u5907\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u9876\u90e8\u7684 appBar \uff0c\u5e95\u90e8\u7684 bottomNavigationBar \uff0c\u9690\u85cf\u7684\u4fa7\u8fb9\u680f drawer \u7b49\u3002 AppBar\uff1a \u5e94\u7528\u680f 3. \u5217\u8868 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 import 'package:flutter/material.dart' ; import 'package:english_words/english_words.dart' ; void main () => runApp ( const MyApp ()); class MyApp extends StatelessWidget { const MyApp ({ Key ? key }) : super ( key: key ); @override Widget build ( BuildContext context ) { return MaterialApp ( title: 'Startup Name Generator' , home: RandomWords ()); } } class RandomWords extends StatefulWidget { @override _RandomWordsState createState () => _RandomWordsState (); } class _RandomWordsState extends State < RandomWords > { final _suggestions = < WordPair > []; final _biggerFont = const TextStyle ( fontSize: 18.0 ); @override Widget build ( BuildContext context ) { return Scaffold ( appBar: AppBar ( title: const Text ( \"Startup Name Generator\" ), ), body: buildSuggestions (), ); } // \u521b\u5efaListView,\u6bcf\u4e2a\u8868\u9879\u90fd\u4f1a\u8c03\u7528\u4e00\u6b21itemBuilder Widget buildSuggestions () { return ListView . builder ( padding: const EdgeInsets . all ( 16.0 ), itemBuilder: ( context , i ) { if ( i . isOdd ) return const Divider (); final index = i ~/ 2 ; if ( index >= _suggestions . length ) { //generateWordPairs()\u662f\u751f\u6210\u4e24\u97f3\u8282\u5355\u8bcd\uff0ctake(10)\u8868\u793a\u751f\u621010\u4e2a _suggestions . addAll ( generateWordPairs (). take ( 10 )); } return _buildRow ( _suggestions [ index ]); }); } // \u8868\u9879 Widget _buildRow ( WordPair pair ) { return ListTile ( title: Text ( pair . asPascalCase , style: _biggerFont , ), ); } } 4. \u70b9\u51fb\u6309\u94ae\u8df3\u8f6c\u9875\u9762 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 class _RandomWordsState extends State < RandomWords > { @override Widget build ( BuildContext context ) { return Scaffold ( appBar: AppBar ( title: const Text ( \"Startup Name Generator\" ), actions: < Widget > [ IconButton ( icon: const Icon ( Icons . list ), onPressed: _pushSaved ), ], // \u7ed9\u6309\u94ae\u6dfb\u52a0\u70b9\u51fb\u8df3\u8f6c\u65b9\u6cd5 backgroundColor: Colors . white , foregroundColor: Colors . black , ), body: buildSuggestions (), ); } // \u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\u7684\u65b9\u6cd5\uff0c\u5bfc\u822a\u4e2d\u6dfb\u52a0route\uff0croute\u4e2d\u6784\u5efa\u4e00\u4e2aScaffold void _pushSaved () { Navigator . of ( context ). push ( MaterialPageRoute ( builder: ( BuildContext context ) { final Iterable < ListTile > tiles = _saved . map ( ( WordPair pair ) => ListTile ( title: Text ( pair . asPascalCase , style: _biggerFont , ), ), ); final List < Widget > divided = ListTile . divideTiles ( tiles: tiles , context: context , ). toList (); return Scaffold ( appBar: AppBar ( title: const Text ( \"Saved Suggestions\" ), ), body: ListView ( children: divided , ), ); }, ), ); } }","title":"Flutter\u5b9e\u4f8b"},{"location":"Flutter%E5%AE%9E%E4%BE%8B/#flutter-demo","text":"Flutter Api Docs","title":"Flutter Demo"},{"location":"Flutter%E5%AE%9E%E4%BE%8B/#1","text":"r\uff1a \u70ed\u52a0\u8f7d p\uff1a \u663e\u793a\u7f51\u683c o\uff1a \u5207\u6362 android \u548c ios \u7684\u9884\u89c8\u6a21\u5f0f q\uff1a \u63a8\u51fa\u8c03\u8bd5\u9884\u89c8\u6a21\u5f0f","title":"1. \u5feb\u6377\u952e"},{"location":"Flutter%E5%AE%9E%E4%BE%8B/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 import 'package:flutter/material.dart' ; import 'package:english_words/english_words.dart' ; void main () => runApp ( const MyApp ()); class MyApp extends StatelessWidget { const MyApp ({ Key ? key }) : super ( key: key ); @override Widget build ( BuildContext context ) { return MaterialApp ( // 1 title: 'Welcome to Flutter' , // \u8fdb\u7a0b\u540d\u79f0 home: Scaffold ( // 2 appBar: AppBar ( // 3 title: const Text ( 'Welcome to Flutter' ), ), body: Center ( child: RandomWords (), ), ), ); } } // \u6709\u72b6\u6001\u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u72b6\u6001 class RandomWords extends StatefulWidget { @override _RandomWordsState createState () => _RandomWordsState (); } // \u72b6\u6001 class _RandomWordsState extends State < RandomWords > { @override Widget build ( BuildContext context ) { var wordPair = WordPair . random (); // \u968f\u673a\u751f\u6210\u4e24\u4e2a\u5355\u8bcd\u7684\u7ec4\u5408 return Text ( wordPair . asPascalCase ); // asPascalCase\u662f\u8ba9\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 } } MaterialApp\uff1a \u7c7b\u4f3c\u4e8e\u7f51\u9875\u4e2d\u7684 <html> </html> \uff0c\u4e14\u5b83\u81ea\u5e26\u8def\u7531\u3001\u4e3b\u9898\u8272\u3001\u4e3b\u9898\u7b49\u529f\u80fd\u3002 Scaffold\uff1a \u4f1a\u586b\u5145\u53ef\u7528\u7a7a\u95f4\uff0c\u5360\u636e\u6574\u4e2a\u7a97\u53e3\u6216\u8bbe\u5907\u5c4f\u5e55\u3002Scaffold\u63d0\u4f9b\u4e86\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u90fd\u5e94\u8be5\u5177\u5907\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u9876\u90e8\u7684 appBar \uff0c\u5e95\u90e8\u7684 bottomNavigationBar \uff0c\u9690\u85cf\u7684\u4fa7\u8fb9\u680f drawer \u7b49\u3002 AppBar\uff1a \u5e94\u7528\u680f","title":"2. \u663e\u793a\u968f\u673a\u751f\u6210\u7684\u5355\u8bcd"},{"location":"Flutter%E5%AE%9E%E4%BE%8B/#3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 import 'package:flutter/material.dart' ; import 'package:english_words/english_words.dart' ; void main () => runApp ( const MyApp ()); class MyApp extends StatelessWidget { const MyApp ({ Key ? key }) : super ( key: key ); @override Widget build ( BuildContext context ) { return MaterialApp ( title: 'Startup Name Generator' , home: RandomWords ()); } } class RandomWords extends StatefulWidget { @override _RandomWordsState createState () => _RandomWordsState (); } class _RandomWordsState extends State < RandomWords > { final _suggestions = < WordPair > []; final _biggerFont = const TextStyle ( fontSize: 18.0 ); @override Widget build ( BuildContext context ) { return Scaffold ( appBar: AppBar ( title: const Text ( \"Startup Name Generator\" ), ), body: buildSuggestions (), ); } // \u521b\u5efaListView,\u6bcf\u4e2a\u8868\u9879\u90fd\u4f1a\u8c03\u7528\u4e00\u6b21itemBuilder Widget buildSuggestions () { return ListView . builder ( padding: const EdgeInsets . all ( 16.0 ), itemBuilder: ( context , i ) { if ( i . isOdd ) return const Divider (); final index = i ~/ 2 ; if ( index >= _suggestions . length ) { //generateWordPairs()\u662f\u751f\u6210\u4e24\u97f3\u8282\u5355\u8bcd\uff0ctake(10)\u8868\u793a\u751f\u621010\u4e2a _suggestions . addAll ( generateWordPairs (). take ( 10 )); } return _buildRow ( _suggestions [ index ]); }); } // \u8868\u9879 Widget _buildRow ( WordPair pair ) { return ListTile ( title: Text ( pair . asPascalCase , style: _biggerFont , ), ); } }","title":"3. \u5217\u8868"},{"location":"Flutter%E5%AE%9E%E4%BE%8B/#4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 class _RandomWordsState extends State < RandomWords > { @override Widget build ( BuildContext context ) { return Scaffold ( appBar: AppBar ( title: const Text ( \"Startup Name Generator\" ), actions: < Widget > [ IconButton ( icon: const Icon ( Icons . list ), onPressed: _pushSaved ), ], // \u7ed9\u6309\u94ae\u6dfb\u52a0\u70b9\u51fb\u8df3\u8f6c\u65b9\u6cd5 backgroundColor: Colors . white , foregroundColor: Colors . black , ), body: buildSuggestions (), ); } // \u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\u7684\u65b9\u6cd5\uff0c\u5bfc\u822a\u4e2d\u6dfb\u52a0route\uff0croute\u4e2d\u6784\u5efa\u4e00\u4e2aScaffold void _pushSaved () { Navigator . of ( context ). push ( MaterialPageRoute ( builder: ( BuildContext context ) { final Iterable < ListTile > tiles = _saved . map ( ( WordPair pair ) => ListTile ( title: Text ( pair . asPascalCase , style: _biggerFont , ), ), ); final List < Widget > divided = ListTile . divideTiles ( tiles: tiles , context: context , ). toList (); return Scaffold ( appBar: AppBar ( title: const Text ( \"Saved Suggestions\" ), ), body: ListView ( children: divided , ), ); }, ), ); } }","title":"4. \u70b9\u51fb\u6309\u94ae\u8df3\u8f6c\u9875\u9762"},{"location":"Head%20First%20Java/","text":"\u300aHead First Java\u300b\u8bfb\u4e66\u7b14\u8bb0 \u00b6 1. \u57fa\u672c\u6982\u5ff5 \u00b6 \u6e90\u7801 (.java) \u7531 javac \u7a0b\u5e8f\u7f16\u8bd1\u540e\u751f\u6210\u4ee3\u7801 (.class) \uff0c\u4e4b\u540e\u542f\u52a8 Java \u865a\u62df\u673a (JVM) \u8fd0\u884c Java \u4e2d\u7684\u6761\u4ef6\u6d4b\u8bd5\u5fc5\u987b\u662f Boolean \u503c\uff0c\u4e0d\u50cf C++ \u4e2d\u53ef\u4ee5\u662f\u6574\u5f62\u3002 \u8f93\u51fa\u5b57\u7b26\u4e32\uff1a 1 2 3 4 5 6 7 8 9 public class BasicThree { public static void main ( String [] args ) { System . out . println ( 5 + 6 + \"\" + 5 + 6 ); System . out . println ( 'A' + 5 + \"hello\" ); } } // \u8f93\u51fa\uff1a // 1156 // 70hello \u524d\u9762\u662f\u5355\u4e2a\u5b57\u7b26(byte)\u7684\u60c5\u51b5\u4e0b\uff0c\u540e\u9762\u8ddf\u6570\u5b57\u4e3a\u52a0\u6cd5\u8fd0\u7b97\u7b26\uff1b \u5728\u9047\u5230\u9996\u4e2a\u4e2a\u5b57\u7b26\u4e4b\u524d\uff0c\u6240\u6709\u6570\u9047 + \u5373 + \uff08\u5355\u4e2a\u5b57\u7b26 (byte) \u7684\u60c5\u51b5\u9664\u5916\uff09\uff1b\u5f53\u9047\u5230\u4efb\u610f\u5b57\u7b26\u540e\uff0c\u52a0\u53f7\u5c31\u53d8\u6210\u4e86\u5b57\u7b26/\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u3002 Java \u662f\u4e00\u4e2a\u5f3a\u7c7b\u578b\u8bed\u8a00\uff0c\u6ca1\u6709\u5f3a\u5236\u7c7b\u578b\u8f6c\u5316\u524d,\u4e0d\u5141\u8bb8\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u76f8\u4e92\u64cd\u4f5c\u3002 \u52a8\u6001\u7ed1\u5b9a\uff1a Java \u5141\u8bb8\u5728\u6267\u884c\u671f\u5f15\u7528\u7a0b\u5e8f\u5458\u6ca1\u6709\u9884\u671f\u5230\u7684\u7c7b\u578b\u3002 \u7f16\u8bd1\u5668\u4e0e\u865a\u62df\u673a\u5bf9\u6bd4\uff1a \u7f16\u8bd1\u5668 \u865a\u62df\u673a \u4ea7\u751f.class\u6587\u4ef6 \u6267\u884c\u6587\u4ef6 \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u3001\u7b26\u53f7\u3001\u8fdd\u6cd5\u8c03\u7528private\u65b9\u6cd5\u7b49 \u68c0\u67e5\u5f02\u5e38 2. \u7c7b\u4e0e\u5bf9\u8c61 \u00b6 \u5bf9\u8c61\u88ab\u5b58\u653e\u5728\u53ef\u56de\u6536\u5783\u573e\u7684\u5806\u4e0a (Gargage-Collectible Heap) \u3002 \u5f53\u67d0\u4e2a\u5bf9\u8c61\u88ab JVM \u5bdf\u89c9\u5230\u4e0d\u4f1a\u518d\u88ab\u4f7f\u7528\uff0c\u5c31\u4f1a\u88ab\u6807\u8bb0\u4e3a\u53ef\u56de\u6536\u7684\uff0c\u5f53\u5185\u5b58\u4e0d\u591f\u65f6\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u542f\u52a8\u6765\u6e05\u7406\u5783\u573e\u3001\u56de\u6536\u7a7a\u95f4\u3002 \u4efb\u4f55\u53d8\u91cf\u5728\u52a0\u4e0a public \u3001 static \u3001 final \u540e\uff0c\u4f1a\u53d8\u6210\u5168\u5c40\u53d8\u91cf\u53d6\u7528\u7684\u5e38\u719f 3. primitive \u4e3b\u8981\u6570\u636e\u548c\u5f15\u7528 \u00b6 \u53d8\u91cf\u5206\u4e3a\u4e24\u79cd\uff1a \u00b6 primitive \u4e3b\u8981\u6570\u636e\u7c7b\u578b\uff1a boolean \uff1a true \u6216 false char \uff1a0~65535 byte \uff1a-128~128 short \uff1a-32768~32767 int \uff1a -2^{31} ~ 2^{31}-1 long \uff1a -2^{64} ~ 2^{64}-1 float \uff1a32bit\uff0c\u8303\u56f4\u89c4\u6a21\u53ef\u53d8\u3002\u6ce8\u610f\uff0c float f = 1.2f \uff0c\u8981\u52a0\u4e0a f \uff0c\u5426\u5219\u4f1a\u88ab\u8ba4\u4e3a\u662f double \u3002 double \uff1a64bit\uff0c\u8303\u56f4\u89c4\u6a21\u53ef\u53d8 \u5c0f\u5bb9\u91cf\u53ef\u4ee5\u653e\u8fdb\u5927\u5bb9\u91cf\u7684\u53d8\u91cf\u91cc\uff0c\u53cd\u4e4b\u4e0d\u884c\u3002 \u5f15\u7528\uff1a \u6240\u6709\u7684\u5bf9\u8c61\u53d8\u91cf\u90fd\u662f\u5f15\u7528\uff0c\u771f\u6b63\u7684\u5bf9\u8c61\u5b58\u653e\u5728\u5806\u4e2d\uff0c\u53d8\u91cf\u91cc\u9762\u5b58\u50a8\u7684\u662f\u6307\u5411\u5bf9\u8c61\u7684\u5730\u5740\u3002 \u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5e03\u5c40\u4f9d\u6b21\u5212\u5206\u4e3a3\u4e2a\u533a\u57df\uff1a\u5bf9\u8c61\u5934(Header)\uff0c\u5b9e\u4f8b\u6570\u636e(Instance Data)\u4ee5\u53ca\u5bf9\u9f50\u586b\u5145(Padding)\u3002\u5bf9\u9f50\u586b\u5145\u662f\u4e3a\u4e86\uff1a\u4f7f\u5bf9\u8c61\u7684\u5927\u5c0f\u5fc5\u987b\u662f8\u5b57\u8282\u7684\u6574\u6570\u500d\u3002 \u6240\u6709\u7684\u5f15\u7528\u5927\u5c0f\u90fd\u4e00\u6837\u3002 \u6570\u7ec4\u4e5f\u662f\u5bf9\u8c61\uff1a \u00b6 \u6570\u7ec4\u91cc\u53ef\u4ee5\u653e primitive \u4e3b\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u653e\u5bf9\u8c61\u5f15\u7528\u3002 1 2 3 4 Dog [] dog = new Dog [ 10 ] ; // Dog[] \u662f\u4e00\u4e2a\u5bf9\u8c61 for ( int i = 0 ; i < 10 ; i ++ ) { dog [ 0 ]= new Dog (); // \u9700\u8981\u5bf9\u6bcf\u4e00\u4e2aDog\u5e94\u7528\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c } 4. \u5bf9\u8c61\u7684\u884c\u4e3a \u00b6 \u53c2\u6570\u4f20\u9012\uff1a \uff08\u5b9e\u53c2 argument \u3001\u5f62\u53c2 parameter \uff09 Java \u4e2d\u7684\u53c2\u6570\u4f20\u9012\u662f\u503c\u4f20\u9012\uff0c\u4f20\u5165\u7684\u503c\u88ab\u4fee\u6539\u540e\u4e0d\u5f71\u54cd\u539f\u503c\u3002\u82e5\u4f20\u5165\u7684\u53c2\u6570\u662f\u5bf9\u8c61\uff0c\u90a3\u4e48\u5b9e\u9645\u4f20\u5165\u7684\u662f\u201c\u5bf9\u8c61\u7684\u63a7\u5236\u201d\u7684\u4e00\u4efd\u62f7\u8d1d\uff0c\u4fee\u6539\u8fd9\u4e2a\u201c\u63a7\u5236\u201d\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u4fee\u6539\u4e86\u539f\u6765\u7684\u503c\u3002 \u8fd4\u56de\u503c\uff1a \u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u9690\u542b\u5730\u653e\u5927\uff0c\u4e5f\u53ef\u4ee5\u660e\u786e\u5730\u7f29\u5c0f\u3002 \u82e5\u8981\u8fd4\u56de\u591a\u4e2a\u503c\uff1a \u540c\u4e00\u7c7b\u578b\u7684\u503c\uff1a\u653e\u5165\u6570\u7ec4\u4e2d\u8fd4\u56de \u4e0d\u540c\u7c7b\u578b\u7684\u503c\uff1a\u4f7f\u7528 ArrayList \u5c01\u88c5\u7684\u610f\u4e49\uff1a \u5c06\u79c1\u6709\u6210\u5458\u53d8\u91cf\u653e\u5728\u65b9\u6cd5\u4e2d\u8d4b\u503c\uff0c\u53ef\u4ee5\u4e3a\u5176\u9650\u5b9a\u5408\u9002\u7684\u8303\u56f4\uff0c\u5e76\u68c0\u67e5\u9519\u8bef\u7684\u8d4b\u503c\uff0c\u4ece\u800c\u907f\u514d\u53c2\u6570\u88ab\u8bef\u7528\u3002 \u4e00\u65e6\u8fd9\u4e2a\u53c2\u6570\u5728\u4e4b\u540e\u9700\u8981\u88ab\u6539\u52a8\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u65b9\u6cd5\u4e2d\u6539\u52a8\u800c\u4e0d\u5f71\u54cd\u5176\u4ed6\u8c03\u7528\u5b83\u7684\u4ee3\u7801\uff0c\u5426\u5219\u8981\u6539\u52a8\u5f88\u591a\u5730\u65b9\u3002 \u5b9e\u4f8b\u53d8\u91cf\u7684\u521d\u59cb\u5316\uff1a \u5373\u4f7f\u6ca1\u6709\u8d4b\u503c\uff0c\u5b9e\u4f8b\u53d8\u91cf\u4e5f\u6709\u9ed8\u8ba4\u503c\uff1a int \u3001 char \uff1a0 float \u3001 double \uff1a0 bool \uff1a false references \uff1a null \u53d8\u91cf\u7684\u6bd4\u8f83\uff1a \u5224\u65ad primitive \u4e3b\u6570\u636e\u7c7b\u578b\u662f\u5426\u76f8\u7b49\uff1a == ( java \u4e2d\u6ca1\u6709 === \u53f7) \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u76f8\u7b49\uff1a .equals() \u5bf9\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u4f7f\u7528 == \u53f7\uff0c\u4e0d\u591f\u8fd9\u4e2a\u6bd4\u8f83\u7684\u662f\u5176\u5f15\u7528\u662f\u5426\u76f8\u7b49\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u503c\u3002 5. \u7f16\u5199\u7a0b\u5e8f \u00b6 \u4f2a\u7801 -> \u6d4b\u8bd5\u7801 -> \u771f\u5b9e\u4ee3\u7801 \u4e00\u4e9b\u65b9\u6cd5 \u00b6 \u5b57\u7b26\u4e32\u8f6c\u6570\u5b57\uff1a Integer.parse(\"12345\") \u751f\u62100~1\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff1a Math.random() \uff0c \u8fd4\u56de\u503c\u4e3a double \u524d++\u4e0e\u540e++\u7684\u533a\u522b\uff1a \u00b6 j = i++ \uff1a\u5c06i\u5b58\u50a8\u5230\u6808\u4e2d\uff1b\u53d8\u91cf i=i+1 \uff1b\u4ece\u6808\u4e2d\u53d6\u51fa i \u8d4b\u503c\u7ed9 j j = ++i \uff1a\u53d8\u91cf i=i+1 \uff1b\u5c06i\u5b58\u50a8\u5230\u6808\u4e2d\uff1b\u4ece\u6808\u4e2d\u53d6\u51fa i \u8d4b\u503c\u7ed9 j \u7531\u6b64\u53ef\u89c1\uff0c\u81ea\u589e\u5e76\u975e\u539f\u5b50\u64cd\u4f5c\uff0c\u5e95\u5c42\u662f\u7531\u4e09\u4e2a\u6b65\u9aa4\u7ec4\u6210\uff0c\u56e0\u6b64\u5728\u591a\u7ebf\u7a0b\u4e2d\u5bb9\u6613\u51fa\u73b0\u81ea\u589e\u6df7\u4e71\u7684\u60c5\u51b5\u3002 \u89e3\u51b3\u7684\u65b9\u6cd5\u6709\uff1a \u5c06++i\u7f6e\u4e8e\u540c\u6b65\u5757\u4e2d\uff0c\u53ef\u4ee5\u662f synchronized \u6216\u8005 J.U.C \u4e2d\u7684\u6392\u4ed6\u9501\uff08\u5982 ReentrantLock \u7b49\uff09\u3002 \u4f7f\u7528\u539f\u5b50\u6027 \uff08Atomic\uff09 \u7c7b\u66ff\u6362 ++i \uff0c\u5177\u4f53\u4f7f\u7528\u54ea\u4e2a\u7c7b\u7531\u53d8\u91cf\u7c7b\u578b\u51b3\u5b9a\u3002\u5982\u679c i \u662f\u6574\u5f62\uff0c\u5219\u4f7f\u7528 AtomicInteger \u7c7b\uff0c\u5176\u4e2d\u7684 AtomicInteger#addAndGet() \u5c31\u5bf9\u5e94\u7740++i\u8bed\u53e5\uff0c\u4e0d\u8fc7\u5b83\u662f\u539f\u5b50\u6027\u64cd\u4f5c\u3002 \u53c2\u8003\uff1a \u6df1\u5165\u7406\u89e3Java\u4e2d\u7684i++\u3001++i\u8bed\u53e5 6. \u8ba4\u8bc6Java\u7684API \u00b6 ArrayList \u00b6 \u76f8\u6bd4\u6570\u7ec4\uff0c\u5927\u5c0f\u662f\u52a8\u6001\u53d8\u5316\u7684\u3002\u4f46\u662f Java5.0 \u4ee5\u524d\u5176\u4e2d\u4e0d\u80fd\u653e\u5165 primitive \u7684\u6570\u636e\u3002 \u4f7f\u7528 import \u5bfc\u5305\u5e76\u4e0d\u4f1a\u4f7f\u7a0b\u5e8f\u53d8\u5927\u6216\u53d8\u6162\uff0c\u53ea\u662f\u5e2e\u5fd9\u7701\u4e0b\u7c7b\u524d\u8fc7\u957f\u7684\u5305\u540d\u3002 7. \u7ee7\u627f\u4e0e\u591a\u6001 \u00b6 \u8986\u76d6\u3001\u91cd\u5199\u3001\u91cd\u8f7d \u00b6 \u8986\u76d6=\u91cd\u5199(override)\uff1a \u5b50\u7c7b\u5bf9\u7236\u7c7b\u7684\u65b9\u6cd5\u91cd\u65b0\u5b9e\u73b0\u3002 \u91cd\u8f7d(overload)\uff1a \u51fd\u6570\u540d\u5fc5\u987b\u76f8\u540c\uff0c\u53c2\u6570\u4e2a\u6570\u3001\u53c2\u6570\u7c7b\u578b\u3001\u662f\u5426 const \u7b49\u4e00\u4e2a\u6216\u591a\u4e2a\u4e0d\u540c\u3002\u6ce8\u610f\uff0c\u4e0e\u8fd4\u56de\u503c\u548c\u5b58\u50a8\u6743\u9650\u65e0\u5173\uff0c\u53ea\u6709\u8fd4\u56de\u503c\u4e0d\u540c\u7684\u51fd\u6570\u3001\u6216\u8005\u53ea\u6709\u5b58\u50a8\u6743\u9650\u4e0d\u540c\u7684\u51fd\u6570\u4e0d\u6784\u6210\u91cd\u8f7d\uff0c\u4f46\u662f\u5728\u5df2\u7ecf\u6784\u6210\u91cd\u8f7d\u7684\u51fd\u6570\u4e2d\u53ef\u4ee5\u4efb\u610f\u4fee\u6539\u8fd9\u4e24\u79cd\u53c2\u6570\u3002 \u5faa\u73af\u9012\u5f52\u95ee\u9898 \u00b6 \u4f8b\uff1a 1 2 3 4 5 6 class A { public String toString (){ System . out . println ( \"position:\" + this ); //... } } this \u9700\u8981\u8f6c\u53d8\u4e3a String \uff0c\u4e8e\u662f\u53c8\u4f1a\u8c03\u7528 toString() \uff0c\u7531\u4e8e toString() \u88ab\u8986\u76d6\u4e86\uff0c\u65b9\u6cd5\u91cc\u53c8\u4f7f\u7528\u4e86 this \uff0c\u56e0\u6b64\u4f1a\u5faa\u73af\u5f80\u590d\u5730\u88ab\u8c03\u7528\u3002 \u8fd9\u91cc\u7684 this \u5e94\u5f53\u88ab\u6539\u4e3a super.toString() \u9632\u6b62\u67d0\u4e2a\u7c7b\u88ab\u7ee7\u627f\u7684\u65b9\u6cd5 \u00b6 \u5b58\u53d6\u63a7\u5236 \u4f7f\u7528\u4fee\u9970\u7b26 final \uff0c\u8868\u793a\u8fd9\u4e2a\u7c7b\u4e0d\u80fd\u518d\u88ab\u7ee7\u627f\u4e86 \u8ba9\u7c7b\u53ea\u62e5\u6709 private \u7684\u6784\u9020\u51fd\u6570 \u7ee7\u627f\u7684\u4f18\u70b9 \u00b6 \u907f\u514d\u5199\u91cd\u590d\u4ee3\u7801 \u4fbf\u4e8e\u5176\u4ed6\u4eba\u5728\u4e0d\u6539\u52a8\u6e90\u7a0b\u5e8f\u7684\u57fa\u7840\u4e0a\u6269\u5c55\u5b50\u7c7b \u5f53\u67d0\u4e2a\u770b\u4e0d\u5230\u6e90\u7801\u7684\u7236\u7c7b\u4e0d\u591f\u5b8c\u5584\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u6765\u6269\u5145\u548c\u91cd\u5199\u5b83\u5b9e\u73b0\u7684\u529f\u80fd \u591a\u6001 \u00b6 \u7236\u7c7b\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u5176\u5b50\u7c7b\u5bf9\u8c61 \u7236\u7c7b\u7c7b\u578b\u7684\u6570\u7ec4\u53ef\u4ee5\u5b58\u653e\u5176\u4efb\u610f\u7c7b\u578b\u7684\u5b50\u7c7b\u5bf9\u8c61 \u7236\u7c7b\u7c7b\u578b\u7684\u53c2\u6570/\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4f20\u5165/\u8fd4\u56de\u5176\u4efb\u610f\u7c7b\u578b\u7684\u5b50\u7c7b\u5bf9\u8c61 Java\u4e2d\u7684\u591a\u6001\u6307\u7684\u662f\u8fd0\u884c\u65f6\u7684\u52a8\u6001\u884c\u4e3a\uff0c\u6ca1\u6709c++\u4e2d\u7684\u9759\u6001\u591a\u6001\u548c\u52a8\u6001\u591a\u6001\u4e00\u8bf4\uff0c\u56e0\u6b64\u91cd\u8f7d\u548c\u6cdb\u578b\u90fd\u4e0d\u5c5e\u4e8e\u591a\u6001\u3002 \u591a\u6001\u91cd\u8981\u7279\u5f81\uff08C++\u548cJava\u90fd\u662f\uff09\uff1a\u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u8be5\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u7236\u7c7b\u6709\u7684\u65b9\u6cd5\u3002\u56e0\u4e3a\u7f16\u8bd1\u5668\u662f\u901a\u8fc7\u5f15\u7528\u7684\u7c7b\u578b\uff0c\u6765\u5224\u65ad\u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528\u54ea\u4e9b\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Animal { void eat (){ System . out . println ( \"Animal eat!\" ); } } class Bird extends Animal { void fly (){ System . out . println ( \"Bird fly!\" ); } } int main (){ Animal a = new Bird (); a . eat (); // \u6b63\u786e\uff0c\u8f93\u51faAnimal eat! a . fly (); // \u9519\u8bef\uff0c\u4e0d\u80fd\u8c03\u7528 } \u5982\u679c\u4e00\u5b9a\u9700\u8981\u8c03\u7528\uff0c\u5e94\u5f3a\u5236\u8f6c\u6362\u6210\u5b50\u7c7b\u7c7b\u578b\uff1a 1 2 3 if ( a instanceof Bird ){ (( Bird ) a ). fly (); } 8. \u63a5\u53e3\u4e0e\u62bd\u8c61 \u00b6 \u62bd\u8c61\u7c7b\u53ef\u4ee5\u88ab\u5b9e\u4f8b\u5316\uff0c\u53ea\u662f\u53ea\u80fd\u901a\u8fc7\u591a\u6001\u6765\u5b9e\u4f8b\u5316 \u6ce8\u610f\uff1a Animal[] animals = new Animal[5]; \uff08Animal\u662f\u62bd\u8c61\u7c7b\uff09\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u4fdd\u5b58Animal\u7684\u6570\u7ec4\u5bf9\u8c61\u800c\u4e0d\u662fAnimal\u5bf9\u8c61\u3002 \u62bd\u8c61\u65b9\u6cd5 \u662f\u4e3a\u4e86\u5728\u5b9e\u73b0\u4e0d\u4e86\u65b9\u6cd5\u5185\u5bb9\u65f6\uff0c\u4f9d\u65e7\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u7ec4\u5b50\u7c7b\u578b\u5171\u540c\u7684\u534f\u8bae\u3002\u62bd\u8c61\u65b9\u6cd5\u4e3a\u7a7a\uff0c\u4e14\u5fc5\u987b\u88ab\u5b50\u7c7b\u5b9e\u73b0\u3002 \u82e5\u7c7b\u5e26\u6709\u62bd\u8c61\u65b9\u6cd5\uff0c\u81ea\u6b64\u7c7b\u5fc5\u987b\u6807\u8bc6\u4e3a\u62bd\u8c61\u7c7b\u3002 Object\u7c7b \u00b6 \u6240\u6709\u7c7b\u90fd\u662fObject\u7c7b\u7684\u5b50\u7c7b Object\u7c7b\u5e76\u4e0d\u662f\u62bd\u8c61\u7c7b\uff0c\u56e0\u4e3a\u5b83\u7684\u5b9e\u4f8b\u4f1a\u7528\u5728\u7ebf\u7a0b\u540c\u6b65\u5316\u95ee\u9898\u4e0a\u3002 \u7f3a\u70b9\uff1a\u5f53\u7236\u7c7b\u7c7b\u578b\u7684\u5bb9\u5668\u653e\u5165\u5b50\u7c7b\u5bf9\u8c61\u540e\uff0c\u518d\u53d6\u51fa\u6765\u7684\u5bf9\u8c61\u7c7b\u578b\u5c31\u4f1a\u53d8\u4e3a\u7236\u7c7b\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u8bc6\u522b\u5176\u539f\u672c\u7684\u7c7b\u578b\u3002 \u63a5\u53e3 \u00b6 \u4f8b\u5b50\uff1a \u53ef\u4ee5\u60f3\u60f3\uff0c\u732b\u3001\u72d7\u3001\u72ee\u5b50\u3001\u8001\u864e\u7ee7\u627f\u4e86Animal\u7c7b\uff0c\u5982\u679c\u8fd9\u65f6\u5019\u8981\u52a0\u4e0a\u5ba0\u7269\u7684\u52a8\u4f5c\uff0c\u5e94\u8be5\u600e\u4e48\u52a0\uff1f \u5728Animal\u7c7b\u4e2d\u52a0\u4e0a\u5ba0\u7269\u7684\u52a8\u4f5c\uff1a\u8fd9\u5bf9\u72ee\u5b50\u3001\u8001\u864e\u662f\u4fae\u8fb1 \u5728\u732b\u3001\u72d7\u7c7b\u4e2d\u5355\u72ec\u52a0\u4e0a\u5ba0\u7269\u52a8\u4f5c\uff1aAnimal\u4e0d\u518d\u6709\u5ba0\u7269\u7684\u52a8\u4f5c\uff0c\u6bcf\u4e2a\u53ef\u4ee5\u505a\u5ba0\u7269\u7684\u52a8\u7269\u90fd\u5f97\u5355\u72ec\u5b9e\u73b0\u8be5\u52a8\u4f5c\uff0c\u62bd\u8c61\u6027\u4e0d\u591f\u597d\u3002 \u521b\u5efa\u4e00\u4e2a\u5ba0\u7269\u62bd\u8c61\u7c7b\uff1a\u591a\u91cd\u7ee7\u627f\u4f1a\u5bfc\u81f4\u81f4\u547d\u65b9\u5757\u95ee\u9898\uff08A\u540c\u65f6\u7ee7\u627f\u4e86B\u548cC\uff0cB\u548cC\u53c8\u540c\u65f6\u91cd\u5199\u4e86\u5b83\u4eec\u7236\u7c7b\u7684\u540c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e48A\u8c03\u7528\u8be5\u65b9\u6cd5\u65f6\u5c31\u4e0d\u786e\u5b9a\u8be5\u8c03\u7528\u54ea\u4e00\u4e2a\u7248\u672c\uff09\u3002(P233) \u89e3\u51b3\u65b9\u6cd5\uff1a \u63a5\u53e3\u3002\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u662f\u62bd\u8c61\u7684\uff0c\u5b50\u7c7b\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u5b9e\u73b0\uff0c\u56e0\u6b64Java\u865a\u62df\u673a\u5c31\u4e0d\u4f1a\u641e\u4e0d\u6e05\u8be5\u7528\u54ea\u4e00\u4e2a\u7ee7\u627f\u7248\u672c\uff0c\u76f4\u63a5\u627e\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u65b9\u6cd5\u5373\u53ef\u3002 \u4f18\u70b9\uff1a \u89e3\u51b3\u81f4\u547d\u65b9\u5757\u7684\u95ee\u9898 \u4e0d\u540c\u7ee7\u627f\u6811\u7684\u7c7b\u53ef\u4ee5\u7ee7\u627f\u540c\u4e00\u4e2a\u63a5\u53e3 9. \u6784\u9020\u5668\u4e0e\u5783\u573e\u6536\u96c6\u5668 \u00b6 10. \u6570\u5b57\u4e0e\u9759\u6001 \u00b6 \u9759\u6001\u7c7b\u4e0d\u80fd\u88ab\u521b\u5efa\u51fa\u5b9e\u4f8b\uff0c\u9759\u6001\u53d8\u91cf\u662f\u5171\u4eab\u7684 \u9759\u6001\u53d8\u91cf\u5728\u7c7b\u88ab\u52a0\u8f7d\u65f6\u521d\u59cb\u5316\uff0c\u7c7b\u4e00\u822c\u5728\u5b9e\u4f8b\u88ab\u521b\u5efa/\u9759\u6001\u65b9\u6cd5\u6216\u53d8\u91cf\u88ab\u4f7f\u7528\u65f6\u52a0\u8f7d\u3002 \uff08\u4f1a\u6709\u9ed8\u8ba4\u503c\uff1a 0\u30010.0\u3001false\u3001null \uff09 \u9759\u6001final\u5e38\u6570 \u521d\u59cb\u5316\u540e\u4e0d\u518d\u6539\u52a8\uff08 \u5fc5\u987b\u5728\u58f0\u660e\u65f6\u6216\u6784\u9020\u51fd\u6570\u4e2d\u88ab\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u9ed8\u8ba4\u503c \uff09 \u5982\uff1a public static final double PI=3.141592653589793 \u9759\u6001\u521d\u59cb\u5316\u7a0b\u5e8f(static initializer) \u662f\u5728\u7c7b\u52a0\u8f7d\u65f6\u6267\u884c\u7684\u4ee3\u7801\uff0c\u5f88\u9002\u5408\u653e final \u53d8\u91cf\u7684\u521d\u59cb\u5316\uff1a 1 2 3 4 5 6 class Foo { final static int x ; // \u76f4\u63a5\u5728\u8fd9\u91cc\u8d4b\u503c\u4e5f\u53ef static { x = 42 ; } } \u9759\u6001\u53d8\u91cf\u5728\"\u521d\u59cb\u5316\"\u9636\u6bb5\u521d\u59cb\u5316\uff0c\u4e5f\u5c31\u662f\u7c7b\u52a0\u8f7d\u5668\u5c06\u7c7b\u52a0\u8f7d\u5230 JVM \u4e2d\u7684\u65f6\u5019\u3002 \u975e\u9759\u6001final\u53d8\u91cf\uff1a \u521d\u59cb\u5316\u540e\u503c\u4e0d\u80fd\u53d8\u52a8 final\u65b9\u6cd5\uff1a \u4e0d\u80fd\u88ab\u8986\u76d6 final\u7684\u7c7b\uff1a \u4e0d\u80fd\u88ab\u7ee7\u627f (\u6ce8\u610f\uff0c\u5982\u679c\u5df2\u7ecf\u6807\u8bb0\u4e86\u7c7b\u662ffinal\u7684\uff0c\u518d\u5355\u72ec\u6807\u8bb0final\u53d8\u91cf/\u65b9\u6cd5\u4f1a\u5f88\u591a\u4f59) autoboxing J ava5.0 \u4e4b\u540e primitive \u80fd\u81ea\u52a8\u8f6c\u6362\u6210\u5bf9\u8c61 1 2 3 ArrayList < Integer > list = new ArrayList < Integer > (); //<>\u5185\u4e00\u5b9a\u662f\u7c7b\u7684\u7c7b\u578b list . add ( 1 ); // \u76f4\u63a5\u52a0 int num = list . get ( 0 ); //\u76f4\u63a5\u8d4b\u503c\u7ed9primitive\u7c7b\u578b \u540c\u7406\uff0c\u5728\u5f62\u53c2\u3001\u8fd4\u56de\u503c\u3001boolean\u8868\u8fbe\u5f0f\u3001\u6570\u503c\u8fd0\u7b97\u3001\u8d4b\u503c\u7b49\u4e2d\u4e5f\u4f1a\u7528\u5230 autoboxing 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // \u5f62\u53c2 void fun ( Integer i ){} fun ( 3 ); // \u8fd4\u56de\u503c int getNum (){ Integer i = new Integer ( 3 ); return i ; } // boolean\u8868\u8fbe\u5f0f if ( 4 > 1 ){ //... } // \u6570\u503c\u8fd0\u7b97 Integer i = new Integer ( 3 ); int j = i + 2 ; // \u8d4b\u503c Double d = 2.2 ; int x = new Integer ( 5 ); \u6570\u5b57\u683c\u5f0f\u5316 \u5e26\u9017\u53f7\u8f93\u51fa\u6570\u5b57\uff1a String.format(\"%,d\",1000000); //1,000,000 \u65e5\u671f\u7684\u683c\u5f0f\u5316\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 // \u5b8c\u6574\u65e5\u671f\u65f6\u95f4 String . format ( \"%tc\" , new Date ()); //Sun Nov 28 14:52:41 MST 2004 // \u53ea\u6709\u65f6\u95f4 String . format ( \"%tr\" , new Date ()); //14:52:41 PM // \u5468\u3001\u6708\u3001\u65e5 Date today = new Date (); String . format ( \"%tA, %tB %td\" , today , today , today ); //Sunday, November 28 String . format ( \"%tA, %<tB %<td\" , today ); // \u540c\u4e0a // \u5176\u4ed6\u65e5\u671f\u64cd\u4f5c\u53ef\u4ee5\u53c2\u8003Calendar Calendar cal = Calendar . getInstance (); //Calendar\u662f\u62bd\u8c61\u7c7b\u65e0\u6cd5\u88ab\u5b9e\u4f8b\u5316\uff0c\u800cgetInstance()\u8fd4\u56de\u7684\u662f\u5176\u5177\u4f53\u5b50\u7c7b\u7684\u5b9e\u4f8b \u5176\u4ed6\u8bed\u6cd5\u548c C \u8bed\u8a00\u4e00\u81f4\uff1a \u6613\u9519\u70b9\uff1a \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u9759\u6001\u7684\uff1a\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u9700\u8981\u53d6\u7528\u6210\u5458\u53d8\u91cf\uff0c\u800c\u9759\u6001\u51fd\u6570\u4e0d\u80fd\u4f7f\u7528\u975e\u9759\u6001\u53d8\u91cf\uff1b \u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u7528 this. \u83b7\u53d6\uff1b 11. \u5f02\u5e38\u5904\u7406 \u00b6 \u5f02\u5e38 NumberFormatException \u5982\uff1a Integer.parseInt(\"two\") NullPointerException \uff1a\u8c03\u7528/\u8d4b\u503c\u7ed9 null \u7684\u53d8\u91cf MidiUnavailableException \uff1a\u8be5\u65b9\u6cd5\u6709\u98ce\u9669\uff0c\u5fc5\u987b\u58f0\u660e\u8c03\u7528\u5b83\u6709\u98ce\u9669 \u5f02\u5e38\u662f\u4e00\u79cdException\u7c7b\u578b\u7684\u5bf9\u8c61 \u5904\u7406 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 // \u6355\u83b7\u3001\u629b\u51fa\u5f02\u5e38 public void takeRisk throws BadException { if (...){ throw new BadException (); // \u521b\u5efa\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa } } public void crossFingers (){ try { takeRisk (); // \u6709\u98ce\u9669\u7684\u7a0b\u5e8f } catch ( BadException ex ){ // try catch \u662f\u7528\u6765\u5904\u7406\u771f\u6b63\u7684\u5f02\u5e38\uff0c\u800c\u4e0d\u662f\u4f60\u7a0b\u5e8f\u7684\u903b\u8f91\u9519\u8bef System . out . println ( \"BadException!\" ); ex . printStackTrace (); // \u5217\u51fa\u6709\u7528\u4fe1\u606f } finally { // \u8fd9\u91cc\u653e\u4e0d\u7ba1\u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u8981\u6267\u884c\u7684\u7a0b\u5e8f } } // \u82e5try\u53ea\u5e26\u6709finally\uff0c\u8981\u58f0\u660e\u5f02\u5e38 public void crossFingers () throws BadException { try { takeRisk (); } finally { //.... } } \u5f02\u5e38\u4e5f\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u662f\u591a\u6001\u7684\u3002 duck \u4e0d\u5904\u7406\u5f02\u5e38\uff0c\u8e22\u76ae\u7403\u7ed9\u81ea\u5df1\u7684\u8c03\u7528\u65b9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // duck public void takeRisk throws BadException { if (...){ throw new BadException (); // \u521b\u5efa\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa } } public void crossFingers () throws BadException { // \u8e22\u76ae\u7403 takeRisk (); // \u6709\u98ce\u9669\u7684\u7a0b\u5e8f } public static void main ( String [] args ) throws BadException { // \u7ee7\u7eed\u8e22 crossFingers (); // \u6709\u98ce\u9669 } // Java\u865a\u62df\u673a\u4f1a\u6b7b\u6389 \u7f16\u8bd1\u65f6\u671f\u7684\u5f02\u5e38\uff0c\u5fc5\u987b\u8981\u5904\u7406\u6216\u8005duck\u6389\u3002\u8fd0\u884c\u65f6\u5f02\u5e38\u4e0d\u7528\u5904\u7406\uff0c\u56e0\u4e3a\u4e00\u822c\u4e3a\u4ee3\u7801\u903b\u8f91\u9519\u8bef\u3002 12. \u56fe\u5f62\u7528\u6237\u63a5\u53e3 \u00b6 1 2 3 4 5 6 7 JFrame jFrame = new JFrame (); JButton jButton = new JButton (); jFrame . getContentPane (). add ( [ BorderLayout . CENTER ] , button ); //\u6ce8\u610f\uff0c\u4e0d\u662f\u76f4\u63a5\u5728jFrame\u4e0a\u52a0\u6309\u94ae\u3002\u4e00\u51715\u4e2a\u4f4d\u7f6e\u53ef\u653e\uff1aNORTH\u3001WEST\u3001EAST\u3001SOUTH\u3001CENTER\uff0c\u9ed8\u8ba4\u662fCENTER jFrame . setSize ( 500 , 500 ); jFrame . setVisible ( true ); \u7ed8\u56fe\u7684\u7a0b\u5e8f\u5e94\u5f53\u653e\u5728 Jpanel \u7684 paintComponent() \u91cc\u9762 public void paintCompent(Graphics g) \uff0c\u5176\u5b9e\u662f\u4f7f\u7528\u4e86\u591a\u6001\u4f20\u5165\u4e86 Graphics2D \u7684\u5bf9\u8c61\uff0c\u800c Graphics2D \u80fd\u505a\u7684\u4e8b\u6bd4 Graphics \u591a\u5f88\u591a\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\u6210\u5b50\u7c7b\u7c7b\u578b\u540e\u80fd\u505a\u66f4\u591a\u4e8b\uff1a\u6e10\u53d8\u989c\u8272\u3001\u7ed8\u5236 3D \u77e9\u5f62\u3001\u65cb\u8f6c\u7b49\u7b49\u3002 \u5982\u679c\uff0c\u9700\u8981\u7528\u540c\u6837\u7684\u63a5\u53e3\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u5185\u90e8\u7c7b\u662f\u552f\u4e00\u89e3\u3002\u6bd4\u5982\u5728 GUI \u4e2d\uff0c\u6709\u597d\u51e0\u4e2a\u6309\u94ae\u9700\u8981\u76d1\u542c\u540c\u4e00\u4e2a\u63a5\u53e3\u5b8c\u6210\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u5185\u90e8\u7c7b\u7ee7\u627f\u8fd9\u4e2a\u63a5\u53e3\u3002 13. Swing \u00b6 \u6846\u67b6\u7684 BorderLayout \u5e03\u5c40\u7ba1\u7406\u5668\u9700\u8981\u77e5\u9053 panel \u7684\u5927\u5c0f\uff0c\u800c panel \u7684\u5e03\u5c40\u7ba1\u7406\u5668\u53c8\u5fc5\u987b\u77e5\u9053\u5176\u5b50\u7a7a\u95f4\u7684\u5927\u5c0f\u624d\u80fd\u786e\u5b9a\u6700\u7ec8\u7684\u5bbd\u9ad8\u548c\u4f4d\u7f6e\u3002 \u5782\u76f4\u6392\u5217\u5e03\u5c40\uff1a BoxLayout 1 2 3 panel . setLayout ( new BoxLayout ( panel , BoxLayout . Y_AXIS )); // \u7ba1\u7406panel\u7ec4\u4ef6\uff0c\u4f7f\u7528Y_AXIS\u8f74 // \u5e03\u5c40\u7ba1\u7406\u5668\u4f1a\u5ffd\u7565\u7528\u6237\u7ed9\u7ec4\u4ef6\u8bbe\u7f6e\u7684\u5927\u5c0f\uff0c\u5e03\u5c40\u7ba1\u7406\u5668\u901a\u8fc7\u8c03\u7528\u7ec4\u4ef6\u7684getPreferedSize()\u65b9\u6cd5\u8ba1\u7b97\u5b9e\u9645\u6240\u9700\u5927\u5c0f\uff0c\u4e0e\u5bf9\u7ec4\u4ef6\u8c03\u7528\u7684setSize()\u65e0\u5173\u3002 frame \u9ed8\u8ba4\u4f7f\u7528 BoxLayout \uff0c panel \u9ed8\u8ba4\u4f7f\u7528 FlowLayout // p429","title":"Head First Java"},{"location":"Head%20First%20Java/#head-first-java","text":"","title":"\u300aHead First Java\u300b\u8bfb\u4e66\u7b14\u8bb0"},{"location":"Head%20First%20Java/#1","text":"\u6e90\u7801 (.java) \u7531 javac \u7a0b\u5e8f\u7f16\u8bd1\u540e\u751f\u6210\u4ee3\u7801 (.class) \uff0c\u4e4b\u540e\u542f\u52a8 Java \u865a\u62df\u673a (JVM) \u8fd0\u884c Java \u4e2d\u7684\u6761\u4ef6\u6d4b\u8bd5\u5fc5\u987b\u662f Boolean \u503c\uff0c\u4e0d\u50cf C++ \u4e2d\u53ef\u4ee5\u662f\u6574\u5f62\u3002 \u8f93\u51fa\u5b57\u7b26\u4e32\uff1a 1 2 3 4 5 6 7 8 9 public class BasicThree { public static void main ( String [] args ) { System . out . println ( 5 + 6 + \"\" + 5 + 6 ); System . out . println ( 'A' + 5 + \"hello\" ); } } // \u8f93\u51fa\uff1a // 1156 // 70hello \u524d\u9762\u662f\u5355\u4e2a\u5b57\u7b26(byte)\u7684\u60c5\u51b5\u4e0b\uff0c\u540e\u9762\u8ddf\u6570\u5b57\u4e3a\u52a0\u6cd5\u8fd0\u7b97\u7b26\uff1b \u5728\u9047\u5230\u9996\u4e2a\u4e2a\u5b57\u7b26\u4e4b\u524d\uff0c\u6240\u6709\u6570\u9047 + \u5373 + \uff08\u5355\u4e2a\u5b57\u7b26 (byte) \u7684\u60c5\u51b5\u9664\u5916\uff09\uff1b\u5f53\u9047\u5230\u4efb\u610f\u5b57\u7b26\u540e\uff0c\u52a0\u53f7\u5c31\u53d8\u6210\u4e86\u5b57\u7b26/\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u3002 Java \u662f\u4e00\u4e2a\u5f3a\u7c7b\u578b\u8bed\u8a00\uff0c\u6ca1\u6709\u5f3a\u5236\u7c7b\u578b\u8f6c\u5316\u524d,\u4e0d\u5141\u8bb8\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u76f8\u4e92\u64cd\u4f5c\u3002 \u52a8\u6001\u7ed1\u5b9a\uff1a Java \u5141\u8bb8\u5728\u6267\u884c\u671f\u5f15\u7528\u7a0b\u5e8f\u5458\u6ca1\u6709\u9884\u671f\u5230\u7684\u7c7b\u578b\u3002 \u7f16\u8bd1\u5668\u4e0e\u865a\u62df\u673a\u5bf9\u6bd4\uff1a \u7f16\u8bd1\u5668 \u865a\u62df\u673a \u4ea7\u751f.class\u6587\u4ef6 \u6267\u884c\u6587\u4ef6 \u68c0\u67e5\u6570\u636e\u7c7b\u578b\u3001\u7b26\u53f7\u3001\u8fdd\u6cd5\u8c03\u7528private\u65b9\u6cd5\u7b49 \u68c0\u67e5\u5f02\u5e38","title":"1. \u57fa\u672c\u6982\u5ff5"},{"location":"Head%20First%20Java/#2","text":"\u5bf9\u8c61\u88ab\u5b58\u653e\u5728\u53ef\u56de\u6536\u5783\u573e\u7684\u5806\u4e0a (Gargage-Collectible Heap) \u3002 \u5f53\u67d0\u4e2a\u5bf9\u8c61\u88ab JVM \u5bdf\u89c9\u5230\u4e0d\u4f1a\u518d\u88ab\u4f7f\u7528\uff0c\u5c31\u4f1a\u88ab\u6807\u8bb0\u4e3a\u53ef\u56de\u6536\u7684\uff0c\u5f53\u5185\u5b58\u4e0d\u591f\u65f6\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u542f\u52a8\u6765\u6e05\u7406\u5783\u573e\u3001\u56de\u6536\u7a7a\u95f4\u3002 \u4efb\u4f55\u53d8\u91cf\u5728\u52a0\u4e0a public \u3001 static \u3001 final \u540e\uff0c\u4f1a\u53d8\u6210\u5168\u5c40\u53d8\u91cf\u53d6\u7528\u7684\u5e38\u719f","title":"2. \u7c7b\u4e0e\u5bf9\u8c61"},{"location":"Head%20First%20Java/#3-primitive","text":"","title":"3. primitive\u4e3b\u8981\u6570\u636e\u548c\u5f15\u7528"},{"location":"Head%20First%20Java/#_1","text":"primitive \u4e3b\u8981\u6570\u636e\u7c7b\u578b\uff1a boolean \uff1a true \u6216 false char \uff1a0~65535 byte \uff1a-128~128 short \uff1a-32768~32767 int \uff1a -2^{31} ~ 2^{31}-1 long \uff1a -2^{64} ~ 2^{64}-1 float \uff1a32bit\uff0c\u8303\u56f4\u89c4\u6a21\u53ef\u53d8\u3002\u6ce8\u610f\uff0c float f = 1.2f \uff0c\u8981\u52a0\u4e0a f \uff0c\u5426\u5219\u4f1a\u88ab\u8ba4\u4e3a\u662f double \u3002 double \uff1a64bit\uff0c\u8303\u56f4\u89c4\u6a21\u53ef\u53d8 \u5c0f\u5bb9\u91cf\u53ef\u4ee5\u653e\u8fdb\u5927\u5bb9\u91cf\u7684\u53d8\u91cf\u91cc\uff0c\u53cd\u4e4b\u4e0d\u884c\u3002 \u5f15\u7528\uff1a \u6240\u6709\u7684\u5bf9\u8c61\u53d8\u91cf\u90fd\u662f\u5f15\u7528\uff0c\u771f\u6b63\u7684\u5bf9\u8c61\u5b58\u653e\u5728\u5806\u4e2d\uff0c\u53d8\u91cf\u91cc\u9762\u5b58\u50a8\u7684\u662f\u6307\u5411\u5bf9\u8c61\u7684\u5730\u5740\u3002 \u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5e03\u5c40\u4f9d\u6b21\u5212\u5206\u4e3a3\u4e2a\u533a\u57df\uff1a\u5bf9\u8c61\u5934(Header)\uff0c\u5b9e\u4f8b\u6570\u636e(Instance Data)\u4ee5\u53ca\u5bf9\u9f50\u586b\u5145(Padding)\u3002\u5bf9\u9f50\u586b\u5145\u662f\u4e3a\u4e86\uff1a\u4f7f\u5bf9\u8c61\u7684\u5927\u5c0f\u5fc5\u987b\u662f8\u5b57\u8282\u7684\u6574\u6570\u500d\u3002 \u6240\u6709\u7684\u5f15\u7528\u5927\u5c0f\u90fd\u4e00\u6837\u3002","title":"\u53d8\u91cf\u5206\u4e3a\u4e24\u79cd\uff1a"},{"location":"Head%20First%20Java/#_2","text":"\u6570\u7ec4\u91cc\u53ef\u4ee5\u653e primitive \u4e3b\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u653e\u5bf9\u8c61\u5f15\u7528\u3002 1 2 3 4 Dog [] dog = new Dog [ 10 ] ; // Dog[] \u662f\u4e00\u4e2a\u5bf9\u8c61 for ( int i = 0 ; i < 10 ; i ++ ) { dog [ 0 ]= new Dog (); // \u9700\u8981\u5bf9\u6bcf\u4e00\u4e2aDog\u5e94\u7528\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c }","title":"\u6570\u7ec4\u4e5f\u662f\u5bf9\u8c61\uff1a"},{"location":"Head%20First%20Java/#4","text":"\u53c2\u6570\u4f20\u9012\uff1a \uff08\u5b9e\u53c2 argument \u3001\u5f62\u53c2 parameter \uff09 Java \u4e2d\u7684\u53c2\u6570\u4f20\u9012\u662f\u503c\u4f20\u9012\uff0c\u4f20\u5165\u7684\u503c\u88ab\u4fee\u6539\u540e\u4e0d\u5f71\u54cd\u539f\u503c\u3002\u82e5\u4f20\u5165\u7684\u53c2\u6570\u662f\u5bf9\u8c61\uff0c\u90a3\u4e48\u5b9e\u9645\u4f20\u5165\u7684\u662f\u201c\u5bf9\u8c61\u7684\u63a7\u5236\u201d\u7684\u4e00\u4efd\u62f7\u8d1d\uff0c\u4fee\u6539\u8fd9\u4e2a\u201c\u63a7\u5236\u201d\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u4fee\u6539\u4e86\u539f\u6765\u7684\u503c\u3002 \u8fd4\u56de\u503c\uff1a \u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u9690\u542b\u5730\u653e\u5927\uff0c\u4e5f\u53ef\u4ee5\u660e\u786e\u5730\u7f29\u5c0f\u3002 \u82e5\u8981\u8fd4\u56de\u591a\u4e2a\u503c\uff1a \u540c\u4e00\u7c7b\u578b\u7684\u503c\uff1a\u653e\u5165\u6570\u7ec4\u4e2d\u8fd4\u56de \u4e0d\u540c\u7c7b\u578b\u7684\u503c\uff1a\u4f7f\u7528 ArrayList \u5c01\u88c5\u7684\u610f\u4e49\uff1a \u5c06\u79c1\u6709\u6210\u5458\u53d8\u91cf\u653e\u5728\u65b9\u6cd5\u4e2d\u8d4b\u503c\uff0c\u53ef\u4ee5\u4e3a\u5176\u9650\u5b9a\u5408\u9002\u7684\u8303\u56f4\uff0c\u5e76\u68c0\u67e5\u9519\u8bef\u7684\u8d4b\u503c\uff0c\u4ece\u800c\u907f\u514d\u53c2\u6570\u88ab\u8bef\u7528\u3002 \u4e00\u65e6\u8fd9\u4e2a\u53c2\u6570\u5728\u4e4b\u540e\u9700\u8981\u88ab\u6539\u52a8\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u65b9\u6cd5\u4e2d\u6539\u52a8\u800c\u4e0d\u5f71\u54cd\u5176\u4ed6\u8c03\u7528\u5b83\u7684\u4ee3\u7801\uff0c\u5426\u5219\u8981\u6539\u52a8\u5f88\u591a\u5730\u65b9\u3002 \u5b9e\u4f8b\u53d8\u91cf\u7684\u521d\u59cb\u5316\uff1a \u5373\u4f7f\u6ca1\u6709\u8d4b\u503c\uff0c\u5b9e\u4f8b\u53d8\u91cf\u4e5f\u6709\u9ed8\u8ba4\u503c\uff1a int \u3001 char \uff1a0 float \u3001 double \uff1a0 bool \uff1a false references \uff1a null \u53d8\u91cf\u7684\u6bd4\u8f83\uff1a \u5224\u65ad primitive \u4e3b\u6570\u636e\u7c7b\u578b\u662f\u5426\u76f8\u7b49\uff1a == ( java \u4e2d\u6ca1\u6709 === \u53f7) \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u76f8\u7b49\uff1a .equals() \u5bf9\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u4f7f\u7528 == \u53f7\uff0c\u4e0d\u591f\u8fd9\u4e2a\u6bd4\u8f83\u7684\u662f\u5176\u5f15\u7528\u662f\u5426\u76f8\u7b49\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u503c\u3002","title":"4. \u5bf9\u8c61\u7684\u884c\u4e3a"},{"location":"Head%20First%20Java/#5","text":"\u4f2a\u7801 -> \u6d4b\u8bd5\u7801 -> \u771f\u5b9e\u4ee3\u7801","title":"5. \u7f16\u5199\u7a0b\u5e8f"},{"location":"Head%20First%20Java/#_3","text":"\u5b57\u7b26\u4e32\u8f6c\u6570\u5b57\uff1a Integer.parse(\"12345\") \u751f\u62100~1\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff1a Math.random() \uff0c \u8fd4\u56de\u503c\u4e3a double","title":"\u4e00\u4e9b\u65b9\u6cd5"},{"location":"Head%20First%20Java/#_4","text":"j = i++ \uff1a\u5c06i\u5b58\u50a8\u5230\u6808\u4e2d\uff1b\u53d8\u91cf i=i+1 \uff1b\u4ece\u6808\u4e2d\u53d6\u51fa i \u8d4b\u503c\u7ed9 j j = ++i \uff1a\u53d8\u91cf i=i+1 \uff1b\u5c06i\u5b58\u50a8\u5230\u6808\u4e2d\uff1b\u4ece\u6808\u4e2d\u53d6\u51fa i \u8d4b\u503c\u7ed9 j \u7531\u6b64\u53ef\u89c1\uff0c\u81ea\u589e\u5e76\u975e\u539f\u5b50\u64cd\u4f5c\uff0c\u5e95\u5c42\u662f\u7531\u4e09\u4e2a\u6b65\u9aa4\u7ec4\u6210\uff0c\u56e0\u6b64\u5728\u591a\u7ebf\u7a0b\u4e2d\u5bb9\u6613\u51fa\u73b0\u81ea\u589e\u6df7\u4e71\u7684\u60c5\u51b5\u3002 \u89e3\u51b3\u7684\u65b9\u6cd5\u6709\uff1a \u5c06++i\u7f6e\u4e8e\u540c\u6b65\u5757\u4e2d\uff0c\u53ef\u4ee5\u662f synchronized \u6216\u8005 J.U.C \u4e2d\u7684\u6392\u4ed6\u9501\uff08\u5982 ReentrantLock \u7b49\uff09\u3002 \u4f7f\u7528\u539f\u5b50\u6027 \uff08Atomic\uff09 \u7c7b\u66ff\u6362 ++i \uff0c\u5177\u4f53\u4f7f\u7528\u54ea\u4e2a\u7c7b\u7531\u53d8\u91cf\u7c7b\u578b\u51b3\u5b9a\u3002\u5982\u679c i \u662f\u6574\u5f62\uff0c\u5219\u4f7f\u7528 AtomicInteger \u7c7b\uff0c\u5176\u4e2d\u7684 AtomicInteger#addAndGet() \u5c31\u5bf9\u5e94\u7740++i\u8bed\u53e5\uff0c\u4e0d\u8fc7\u5b83\u662f\u539f\u5b50\u6027\u64cd\u4f5c\u3002 \u53c2\u8003\uff1a \u6df1\u5165\u7406\u89e3Java\u4e2d\u7684i++\u3001++i\u8bed\u53e5","title":"\u524d++\u4e0e\u540e++\u7684\u533a\u522b\uff1a"},{"location":"Head%20First%20Java/#6-javaapi","text":"","title":"6. \u8ba4\u8bc6Java\u7684API"},{"location":"Head%20First%20Java/#arraylist","text":"\u76f8\u6bd4\u6570\u7ec4\uff0c\u5927\u5c0f\u662f\u52a8\u6001\u53d8\u5316\u7684\u3002\u4f46\u662f Java5.0 \u4ee5\u524d\u5176\u4e2d\u4e0d\u80fd\u653e\u5165 primitive \u7684\u6570\u636e\u3002 \u4f7f\u7528 import \u5bfc\u5305\u5e76\u4e0d\u4f1a\u4f7f\u7a0b\u5e8f\u53d8\u5927\u6216\u53d8\u6162\uff0c\u53ea\u662f\u5e2e\u5fd9\u7701\u4e0b\u7c7b\u524d\u8fc7\u957f\u7684\u5305\u540d\u3002","title":"ArrayList"},{"location":"Head%20First%20Java/#7","text":"","title":"7. \u7ee7\u627f\u4e0e\u591a\u6001"},{"location":"Head%20First%20Java/#_5","text":"\u8986\u76d6=\u91cd\u5199(override)\uff1a \u5b50\u7c7b\u5bf9\u7236\u7c7b\u7684\u65b9\u6cd5\u91cd\u65b0\u5b9e\u73b0\u3002 \u91cd\u8f7d(overload)\uff1a \u51fd\u6570\u540d\u5fc5\u987b\u76f8\u540c\uff0c\u53c2\u6570\u4e2a\u6570\u3001\u53c2\u6570\u7c7b\u578b\u3001\u662f\u5426 const \u7b49\u4e00\u4e2a\u6216\u591a\u4e2a\u4e0d\u540c\u3002\u6ce8\u610f\uff0c\u4e0e\u8fd4\u56de\u503c\u548c\u5b58\u50a8\u6743\u9650\u65e0\u5173\uff0c\u53ea\u6709\u8fd4\u56de\u503c\u4e0d\u540c\u7684\u51fd\u6570\u3001\u6216\u8005\u53ea\u6709\u5b58\u50a8\u6743\u9650\u4e0d\u540c\u7684\u51fd\u6570\u4e0d\u6784\u6210\u91cd\u8f7d\uff0c\u4f46\u662f\u5728\u5df2\u7ecf\u6784\u6210\u91cd\u8f7d\u7684\u51fd\u6570\u4e2d\u53ef\u4ee5\u4efb\u610f\u4fee\u6539\u8fd9\u4e24\u79cd\u53c2\u6570\u3002","title":"\u8986\u76d6\u3001\u91cd\u5199\u3001\u91cd\u8f7d"},{"location":"Head%20First%20Java/#_6","text":"\u4f8b\uff1a 1 2 3 4 5 6 class A { public String toString (){ System . out . println ( \"position:\" + this ); //... } } this \u9700\u8981\u8f6c\u53d8\u4e3a String \uff0c\u4e8e\u662f\u53c8\u4f1a\u8c03\u7528 toString() \uff0c\u7531\u4e8e toString() \u88ab\u8986\u76d6\u4e86\uff0c\u65b9\u6cd5\u91cc\u53c8\u4f7f\u7528\u4e86 this \uff0c\u56e0\u6b64\u4f1a\u5faa\u73af\u5f80\u590d\u5730\u88ab\u8c03\u7528\u3002 \u8fd9\u91cc\u7684 this \u5e94\u5f53\u88ab\u6539\u4e3a super.toString()","title":"\u5faa\u73af\u9012\u5f52\u95ee\u9898"},{"location":"Head%20First%20Java/#_7","text":"\u5b58\u53d6\u63a7\u5236 \u4f7f\u7528\u4fee\u9970\u7b26 final \uff0c\u8868\u793a\u8fd9\u4e2a\u7c7b\u4e0d\u80fd\u518d\u88ab\u7ee7\u627f\u4e86 \u8ba9\u7c7b\u53ea\u62e5\u6709 private \u7684\u6784\u9020\u51fd\u6570","title":"\u9632\u6b62\u67d0\u4e2a\u7c7b\u88ab\u7ee7\u627f\u7684\u65b9\u6cd5"},{"location":"Head%20First%20Java/#_8","text":"\u907f\u514d\u5199\u91cd\u590d\u4ee3\u7801 \u4fbf\u4e8e\u5176\u4ed6\u4eba\u5728\u4e0d\u6539\u52a8\u6e90\u7a0b\u5e8f\u7684\u57fa\u7840\u4e0a\u6269\u5c55\u5b50\u7c7b \u5f53\u67d0\u4e2a\u770b\u4e0d\u5230\u6e90\u7801\u7684\u7236\u7c7b\u4e0d\u591f\u5b8c\u5584\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u6765\u6269\u5145\u548c\u91cd\u5199\u5b83\u5b9e\u73b0\u7684\u529f\u80fd","title":"\u7ee7\u627f\u7684\u4f18\u70b9"},{"location":"Head%20First%20Java/#_9","text":"\u7236\u7c7b\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u5176\u5b50\u7c7b\u5bf9\u8c61 \u7236\u7c7b\u7c7b\u578b\u7684\u6570\u7ec4\u53ef\u4ee5\u5b58\u653e\u5176\u4efb\u610f\u7c7b\u578b\u7684\u5b50\u7c7b\u5bf9\u8c61 \u7236\u7c7b\u7c7b\u578b\u7684\u53c2\u6570/\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4f20\u5165/\u8fd4\u56de\u5176\u4efb\u610f\u7c7b\u578b\u7684\u5b50\u7c7b\u5bf9\u8c61 Java\u4e2d\u7684\u591a\u6001\u6307\u7684\u662f\u8fd0\u884c\u65f6\u7684\u52a8\u6001\u884c\u4e3a\uff0c\u6ca1\u6709c++\u4e2d\u7684\u9759\u6001\u591a\u6001\u548c\u52a8\u6001\u591a\u6001\u4e00\u8bf4\uff0c\u56e0\u6b64\u91cd\u8f7d\u548c\u6cdb\u578b\u90fd\u4e0d\u5c5e\u4e8e\u591a\u6001\u3002 \u591a\u6001\u91cd\u8981\u7279\u5f81\uff08C++\u548cJava\u90fd\u662f\uff09\uff1a\u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u8be5\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u7236\u7c7b\u6709\u7684\u65b9\u6cd5\u3002\u56e0\u4e3a\u7f16\u8bd1\u5668\u662f\u901a\u8fc7\u5f15\u7528\u7684\u7c7b\u578b\uff0c\u6765\u5224\u65ad\u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528\u54ea\u4e9b\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Animal { void eat (){ System . out . println ( \"Animal eat!\" ); } } class Bird extends Animal { void fly (){ System . out . println ( \"Bird fly!\" ); } } int main (){ Animal a = new Bird (); a . eat (); // \u6b63\u786e\uff0c\u8f93\u51faAnimal eat! a . fly (); // \u9519\u8bef\uff0c\u4e0d\u80fd\u8c03\u7528 } \u5982\u679c\u4e00\u5b9a\u9700\u8981\u8c03\u7528\uff0c\u5e94\u5f3a\u5236\u8f6c\u6362\u6210\u5b50\u7c7b\u7c7b\u578b\uff1a 1 2 3 if ( a instanceof Bird ){ (( Bird ) a ). fly (); }","title":"\u591a\u6001"},{"location":"Head%20First%20Java/#8","text":"\u62bd\u8c61\u7c7b\u53ef\u4ee5\u88ab\u5b9e\u4f8b\u5316\uff0c\u53ea\u662f\u53ea\u80fd\u901a\u8fc7\u591a\u6001\u6765\u5b9e\u4f8b\u5316 \u6ce8\u610f\uff1a Animal[] animals = new Animal[5]; \uff08Animal\u662f\u62bd\u8c61\u7c7b\uff09\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u4fdd\u5b58Animal\u7684\u6570\u7ec4\u5bf9\u8c61\u800c\u4e0d\u662fAnimal\u5bf9\u8c61\u3002 \u62bd\u8c61\u65b9\u6cd5 \u662f\u4e3a\u4e86\u5728\u5b9e\u73b0\u4e0d\u4e86\u65b9\u6cd5\u5185\u5bb9\u65f6\uff0c\u4f9d\u65e7\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u7ec4\u5b50\u7c7b\u578b\u5171\u540c\u7684\u534f\u8bae\u3002\u62bd\u8c61\u65b9\u6cd5\u4e3a\u7a7a\uff0c\u4e14\u5fc5\u987b\u88ab\u5b50\u7c7b\u5b9e\u73b0\u3002 \u82e5\u7c7b\u5e26\u6709\u62bd\u8c61\u65b9\u6cd5\uff0c\u81ea\u6b64\u7c7b\u5fc5\u987b\u6807\u8bc6\u4e3a\u62bd\u8c61\u7c7b\u3002","title":"8. \u63a5\u53e3\u4e0e\u62bd\u8c61"},{"location":"Head%20First%20Java/#object","text":"\u6240\u6709\u7c7b\u90fd\u662fObject\u7c7b\u7684\u5b50\u7c7b Object\u7c7b\u5e76\u4e0d\u662f\u62bd\u8c61\u7c7b\uff0c\u56e0\u4e3a\u5b83\u7684\u5b9e\u4f8b\u4f1a\u7528\u5728\u7ebf\u7a0b\u540c\u6b65\u5316\u95ee\u9898\u4e0a\u3002 \u7f3a\u70b9\uff1a\u5f53\u7236\u7c7b\u7c7b\u578b\u7684\u5bb9\u5668\u653e\u5165\u5b50\u7c7b\u5bf9\u8c61\u540e\uff0c\u518d\u53d6\u51fa\u6765\u7684\u5bf9\u8c61\u7c7b\u578b\u5c31\u4f1a\u53d8\u4e3a\u7236\u7c7b\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u8bc6\u522b\u5176\u539f\u672c\u7684\u7c7b\u578b\u3002","title":"Object\u7c7b"},{"location":"Head%20First%20Java/#_10","text":"\u4f8b\u5b50\uff1a \u53ef\u4ee5\u60f3\u60f3\uff0c\u732b\u3001\u72d7\u3001\u72ee\u5b50\u3001\u8001\u864e\u7ee7\u627f\u4e86Animal\u7c7b\uff0c\u5982\u679c\u8fd9\u65f6\u5019\u8981\u52a0\u4e0a\u5ba0\u7269\u7684\u52a8\u4f5c\uff0c\u5e94\u8be5\u600e\u4e48\u52a0\uff1f \u5728Animal\u7c7b\u4e2d\u52a0\u4e0a\u5ba0\u7269\u7684\u52a8\u4f5c\uff1a\u8fd9\u5bf9\u72ee\u5b50\u3001\u8001\u864e\u662f\u4fae\u8fb1 \u5728\u732b\u3001\u72d7\u7c7b\u4e2d\u5355\u72ec\u52a0\u4e0a\u5ba0\u7269\u52a8\u4f5c\uff1aAnimal\u4e0d\u518d\u6709\u5ba0\u7269\u7684\u52a8\u4f5c\uff0c\u6bcf\u4e2a\u53ef\u4ee5\u505a\u5ba0\u7269\u7684\u52a8\u7269\u90fd\u5f97\u5355\u72ec\u5b9e\u73b0\u8be5\u52a8\u4f5c\uff0c\u62bd\u8c61\u6027\u4e0d\u591f\u597d\u3002 \u521b\u5efa\u4e00\u4e2a\u5ba0\u7269\u62bd\u8c61\u7c7b\uff1a\u591a\u91cd\u7ee7\u627f\u4f1a\u5bfc\u81f4\u81f4\u547d\u65b9\u5757\u95ee\u9898\uff08A\u540c\u65f6\u7ee7\u627f\u4e86B\u548cC\uff0cB\u548cC\u53c8\u540c\u65f6\u91cd\u5199\u4e86\u5b83\u4eec\u7236\u7c7b\u7684\u540c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e48A\u8c03\u7528\u8be5\u65b9\u6cd5\u65f6\u5c31\u4e0d\u786e\u5b9a\u8be5\u8c03\u7528\u54ea\u4e00\u4e2a\u7248\u672c\uff09\u3002(P233) \u89e3\u51b3\u65b9\u6cd5\uff1a \u63a5\u53e3\u3002\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u662f\u62bd\u8c61\u7684\uff0c\u5b50\u7c7b\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u5b9e\u73b0\uff0c\u56e0\u6b64Java\u865a\u62df\u673a\u5c31\u4e0d\u4f1a\u641e\u4e0d\u6e05\u8be5\u7528\u54ea\u4e00\u4e2a\u7ee7\u627f\u7248\u672c\uff0c\u76f4\u63a5\u627e\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u65b9\u6cd5\u5373\u53ef\u3002 \u4f18\u70b9\uff1a \u89e3\u51b3\u81f4\u547d\u65b9\u5757\u7684\u95ee\u9898 \u4e0d\u540c\u7ee7\u627f\u6811\u7684\u7c7b\u53ef\u4ee5\u7ee7\u627f\u540c\u4e00\u4e2a\u63a5\u53e3","title":"\u63a5\u53e3"},{"location":"Head%20First%20Java/#9","text":"","title":"9. \u6784\u9020\u5668\u4e0e\u5783\u573e\u6536\u96c6\u5668"},{"location":"Head%20First%20Java/#10","text":"\u9759\u6001\u7c7b\u4e0d\u80fd\u88ab\u521b\u5efa\u51fa\u5b9e\u4f8b\uff0c\u9759\u6001\u53d8\u91cf\u662f\u5171\u4eab\u7684 \u9759\u6001\u53d8\u91cf\u5728\u7c7b\u88ab\u52a0\u8f7d\u65f6\u521d\u59cb\u5316\uff0c\u7c7b\u4e00\u822c\u5728\u5b9e\u4f8b\u88ab\u521b\u5efa/\u9759\u6001\u65b9\u6cd5\u6216\u53d8\u91cf\u88ab\u4f7f\u7528\u65f6\u52a0\u8f7d\u3002 \uff08\u4f1a\u6709\u9ed8\u8ba4\u503c\uff1a 0\u30010.0\u3001false\u3001null \uff09 \u9759\u6001final\u5e38\u6570 \u521d\u59cb\u5316\u540e\u4e0d\u518d\u6539\u52a8\uff08 \u5fc5\u987b\u5728\u58f0\u660e\u65f6\u6216\u6784\u9020\u51fd\u6570\u4e2d\u88ab\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u9ed8\u8ba4\u503c \uff09 \u5982\uff1a public static final double PI=3.141592653589793 \u9759\u6001\u521d\u59cb\u5316\u7a0b\u5e8f(static initializer) \u662f\u5728\u7c7b\u52a0\u8f7d\u65f6\u6267\u884c\u7684\u4ee3\u7801\uff0c\u5f88\u9002\u5408\u653e final \u53d8\u91cf\u7684\u521d\u59cb\u5316\uff1a 1 2 3 4 5 6 class Foo { final static int x ; // \u76f4\u63a5\u5728\u8fd9\u91cc\u8d4b\u503c\u4e5f\u53ef static { x = 42 ; } } \u9759\u6001\u53d8\u91cf\u5728\"\u521d\u59cb\u5316\"\u9636\u6bb5\u521d\u59cb\u5316\uff0c\u4e5f\u5c31\u662f\u7c7b\u52a0\u8f7d\u5668\u5c06\u7c7b\u52a0\u8f7d\u5230 JVM \u4e2d\u7684\u65f6\u5019\u3002 \u975e\u9759\u6001final\u53d8\u91cf\uff1a \u521d\u59cb\u5316\u540e\u503c\u4e0d\u80fd\u53d8\u52a8 final\u65b9\u6cd5\uff1a \u4e0d\u80fd\u88ab\u8986\u76d6 final\u7684\u7c7b\uff1a \u4e0d\u80fd\u88ab\u7ee7\u627f (\u6ce8\u610f\uff0c\u5982\u679c\u5df2\u7ecf\u6807\u8bb0\u4e86\u7c7b\u662ffinal\u7684\uff0c\u518d\u5355\u72ec\u6807\u8bb0final\u53d8\u91cf/\u65b9\u6cd5\u4f1a\u5f88\u591a\u4f59) autoboxing J ava5.0 \u4e4b\u540e primitive \u80fd\u81ea\u52a8\u8f6c\u6362\u6210\u5bf9\u8c61 1 2 3 ArrayList < Integer > list = new ArrayList < Integer > (); //<>\u5185\u4e00\u5b9a\u662f\u7c7b\u7684\u7c7b\u578b list . add ( 1 ); // \u76f4\u63a5\u52a0 int num = list . get ( 0 ); //\u76f4\u63a5\u8d4b\u503c\u7ed9primitive\u7c7b\u578b \u540c\u7406\uff0c\u5728\u5f62\u53c2\u3001\u8fd4\u56de\u503c\u3001boolean\u8868\u8fbe\u5f0f\u3001\u6570\u503c\u8fd0\u7b97\u3001\u8d4b\u503c\u7b49\u4e2d\u4e5f\u4f1a\u7528\u5230 autoboxing 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // \u5f62\u53c2 void fun ( Integer i ){} fun ( 3 ); // \u8fd4\u56de\u503c int getNum (){ Integer i = new Integer ( 3 ); return i ; } // boolean\u8868\u8fbe\u5f0f if ( 4 > 1 ){ //... } // \u6570\u503c\u8fd0\u7b97 Integer i = new Integer ( 3 ); int j = i + 2 ; // \u8d4b\u503c Double d = 2.2 ; int x = new Integer ( 5 ); \u6570\u5b57\u683c\u5f0f\u5316 \u5e26\u9017\u53f7\u8f93\u51fa\u6570\u5b57\uff1a String.format(\"%,d\",1000000); //1,000,000 \u65e5\u671f\u7684\u683c\u5f0f\u5316\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 // \u5b8c\u6574\u65e5\u671f\u65f6\u95f4 String . format ( \"%tc\" , new Date ()); //Sun Nov 28 14:52:41 MST 2004 // \u53ea\u6709\u65f6\u95f4 String . format ( \"%tr\" , new Date ()); //14:52:41 PM // \u5468\u3001\u6708\u3001\u65e5 Date today = new Date (); String . format ( \"%tA, %tB %td\" , today , today , today ); //Sunday, November 28 String . format ( \"%tA, %<tB %<td\" , today ); // \u540c\u4e0a // \u5176\u4ed6\u65e5\u671f\u64cd\u4f5c\u53ef\u4ee5\u53c2\u8003Calendar Calendar cal = Calendar . getInstance (); //Calendar\u662f\u62bd\u8c61\u7c7b\u65e0\u6cd5\u88ab\u5b9e\u4f8b\u5316\uff0c\u800cgetInstance()\u8fd4\u56de\u7684\u662f\u5176\u5177\u4f53\u5b50\u7c7b\u7684\u5b9e\u4f8b \u5176\u4ed6\u8bed\u6cd5\u548c C \u8bed\u8a00\u4e00\u81f4\uff1a \u6613\u9519\u70b9\uff1a \u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u9759\u6001\u7684\uff1a\u56e0\u4e3a\u6784\u9020\u51fd\u6570\u9700\u8981\u53d6\u7528\u6210\u5458\u53d8\u91cf\uff0c\u800c\u9759\u6001\u51fd\u6570\u4e0d\u80fd\u4f7f\u7528\u975e\u9759\u6001\u53d8\u91cf\uff1b \u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u7528 this. \u83b7\u53d6\uff1b","title":"10. \u6570\u5b57\u4e0e\u9759\u6001"},{"location":"Head%20First%20Java/#11","text":"\u5f02\u5e38 NumberFormatException \u5982\uff1a Integer.parseInt(\"two\") NullPointerException \uff1a\u8c03\u7528/\u8d4b\u503c\u7ed9 null \u7684\u53d8\u91cf MidiUnavailableException \uff1a\u8be5\u65b9\u6cd5\u6709\u98ce\u9669\uff0c\u5fc5\u987b\u58f0\u660e\u8c03\u7528\u5b83\u6709\u98ce\u9669 \u5f02\u5e38\u662f\u4e00\u79cdException\u7c7b\u578b\u7684\u5bf9\u8c61 \u5904\u7406 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 // \u6355\u83b7\u3001\u629b\u51fa\u5f02\u5e38 public void takeRisk throws BadException { if (...){ throw new BadException (); // \u521b\u5efa\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa } } public void crossFingers (){ try { takeRisk (); // \u6709\u98ce\u9669\u7684\u7a0b\u5e8f } catch ( BadException ex ){ // try catch \u662f\u7528\u6765\u5904\u7406\u771f\u6b63\u7684\u5f02\u5e38\uff0c\u800c\u4e0d\u662f\u4f60\u7a0b\u5e8f\u7684\u903b\u8f91\u9519\u8bef System . out . println ( \"BadException!\" ); ex . printStackTrace (); // \u5217\u51fa\u6709\u7528\u4fe1\u606f } finally { // \u8fd9\u91cc\u653e\u4e0d\u7ba1\u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u8981\u6267\u884c\u7684\u7a0b\u5e8f } } // \u82e5try\u53ea\u5e26\u6709finally\uff0c\u8981\u58f0\u660e\u5f02\u5e38 public void crossFingers () throws BadException { try { takeRisk (); } finally { //.... } } \u5f02\u5e38\u4e5f\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u662f\u591a\u6001\u7684\u3002 duck \u4e0d\u5904\u7406\u5f02\u5e38\uff0c\u8e22\u76ae\u7403\u7ed9\u81ea\u5df1\u7684\u8c03\u7528\u65b9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // duck public void takeRisk throws BadException { if (...){ throw new BadException (); // \u521b\u5efa\u5f02\u5e38\u5bf9\u8c61\u5e76\u629b\u51fa } } public void crossFingers () throws BadException { // \u8e22\u76ae\u7403 takeRisk (); // \u6709\u98ce\u9669\u7684\u7a0b\u5e8f } public static void main ( String [] args ) throws BadException { // \u7ee7\u7eed\u8e22 crossFingers (); // \u6709\u98ce\u9669 } // Java\u865a\u62df\u673a\u4f1a\u6b7b\u6389 \u7f16\u8bd1\u65f6\u671f\u7684\u5f02\u5e38\uff0c\u5fc5\u987b\u8981\u5904\u7406\u6216\u8005duck\u6389\u3002\u8fd0\u884c\u65f6\u5f02\u5e38\u4e0d\u7528\u5904\u7406\uff0c\u56e0\u4e3a\u4e00\u822c\u4e3a\u4ee3\u7801\u903b\u8f91\u9519\u8bef\u3002","title":"11. \u5f02\u5e38\u5904\u7406"},{"location":"Head%20First%20Java/#12","text":"1 2 3 4 5 6 7 JFrame jFrame = new JFrame (); JButton jButton = new JButton (); jFrame . getContentPane (). add ( [ BorderLayout . CENTER ] , button ); //\u6ce8\u610f\uff0c\u4e0d\u662f\u76f4\u63a5\u5728jFrame\u4e0a\u52a0\u6309\u94ae\u3002\u4e00\u51715\u4e2a\u4f4d\u7f6e\u53ef\u653e\uff1aNORTH\u3001WEST\u3001EAST\u3001SOUTH\u3001CENTER\uff0c\u9ed8\u8ba4\u662fCENTER jFrame . setSize ( 500 , 500 ); jFrame . setVisible ( true ); \u7ed8\u56fe\u7684\u7a0b\u5e8f\u5e94\u5f53\u653e\u5728 Jpanel \u7684 paintComponent() \u91cc\u9762 public void paintCompent(Graphics g) \uff0c\u5176\u5b9e\u662f\u4f7f\u7528\u4e86\u591a\u6001\u4f20\u5165\u4e86 Graphics2D \u7684\u5bf9\u8c61\uff0c\u800c Graphics2D \u80fd\u505a\u7684\u4e8b\u6bd4 Graphics \u591a\u5f88\u591a\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u5f3a\u5236\u8f6c\u6362\u6210\u5b50\u7c7b\u7c7b\u578b\u540e\u80fd\u505a\u66f4\u591a\u4e8b\uff1a\u6e10\u53d8\u989c\u8272\u3001\u7ed8\u5236 3D \u77e9\u5f62\u3001\u65cb\u8f6c\u7b49\u7b49\u3002 \u5982\u679c\uff0c\u9700\u8981\u7528\u540c\u6837\u7684\u63a5\u53e3\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u5185\u90e8\u7c7b\u662f\u552f\u4e00\u89e3\u3002\u6bd4\u5982\u5728 GUI \u4e2d\uff0c\u6709\u597d\u51e0\u4e2a\u6309\u94ae\u9700\u8981\u76d1\u542c\u540c\u4e00\u4e2a\u63a5\u53e3\u5b8c\u6210\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u5185\u90e8\u7c7b\u7ee7\u627f\u8fd9\u4e2a\u63a5\u53e3\u3002","title":"12. \u56fe\u5f62\u7528\u6237\u63a5\u53e3"},{"location":"Head%20First%20Java/#13-swing","text":"\u6846\u67b6\u7684 BorderLayout \u5e03\u5c40\u7ba1\u7406\u5668\u9700\u8981\u77e5\u9053 panel \u7684\u5927\u5c0f\uff0c\u800c panel \u7684\u5e03\u5c40\u7ba1\u7406\u5668\u53c8\u5fc5\u987b\u77e5\u9053\u5176\u5b50\u7a7a\u95f4\u7684\u5927\u5c0f\u624d\u80fd\u786e\u5b9a\u6700\u7ec8\u7684\u5bbd\u9ad8\u548c\u4f4d\u7f6e\u3002 \u5782\u76f4\u6392\u5217\u5e03\u5c40\uff1a BoxLayout 1 2 3 panel . setLayout ( new BoxLayout ( panel , BoxLayout . Y_AXIS )); // \u7ba1\u7406panel\u7ec4\u4ef6\uff0c\u4f7f\u7528Y_AXIS\u8f74 // \u5e03\u5c40\u7ba1\u7406\u5668\u4f1a\u5ffd\u7565\u7528\u6237\u7ed9\u7ec4\u4ef6\u8bbe\u7f6e\u7684\u5927\u5c0f\uff0c\u5e03\u5c40\u7ba1\u7406\u5668\u901a\u8fc7\u8c03\u7528\u7ec4\u4ef6\u7684getPreferedSize()\u65b9\u6cd5\u8ba1\u7b97\u5b9e\u9645\u6240\u9700\u5927\u5c0f\uff0c\u4e0e\u5bf9\u7ec4\u4ef6\u8c03\u7528\u7684setSize()\u65e0\u5173\u3002 frame \u9ed8\u8ba4\u4f7f\u7528 BoxLayout \uff0c panel \u9ed8\u8ba4\u4f7f\u7528 FlowLayout // p429","title":"13. Swing"},{"location":"Java%E5%9F%BA%E7%A1%80/","text":"\u4e00\u3001Java\u5f00\u53d1\u7ec6\u8282 \u00b6 \uff08\u4e00\uff09\u6ce8\u610f\u4e8b\u9879 \u00b6 \u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a public \u7c7b\uff0c\u4e14\u8be5\u7c7b\u540d\u79f0\u5fc5\u987b\u548c\u6587\u4ef6\u4e00\u81f4\u3002 \u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u975e public \u7684\u7c7b\uff0c\u8fd9\u4e9b java \u7c7b\u4e2d\u5747\u53ef\u4ee5\u5199 main \u65b9\u6cd5\uff0c\u7528 javac \u7f16\u8bd1\u540e\u4f1a\u751f\u6210\u591a\u4e2a class \u6587\u4ef6\uff0c\u53ef\u4ee5\u5206\u522b\u8fd0\u884c\u3002 \uff08\u4e8c\uff09\u5b66\u4e60\u65b9\u6cd5 \u00b6 1. \u9700\u8981\u5b66\u4e60\u7684\u60c5\u51b5 \u00b6 \u5de5\u4f5c\u9700\u8981 \u8df3\u69fd \u5e73\u65f6\u5b66\u65b0\u6280\u672f 2. \u8981\u70b9 \u00b6 \u7528 \u4f20\u7edf\u6280\u672f\u8003\u8651 \u662f\u5426\u80fd\u89e3\u51b3\u5de5\u4f5c\u9700\u8981\uff0c\u82e5\u89e3\u51b3\u4e0d\u4e86\u6216\u4e0d\u5b8c\u7f8e\uff0c\u518d\u627e\u65b0\u6280\u672f\u5bf9\u6bd4\u5e76\u89e3\u51b3\u3002 \u505a\u597d\u8c03\u7814\uff0c\u8981\u77e5\u9053\u65b0\u6280\u672f \u80fd\u591f\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898 \uff0c \u6539\u8fdb \u5728\u54ea\uff0c\u80fd\u5e26\u6765\u4ec0\u4e48 \u4f18\u52bf \uff1f\u76f8\u5e94\u7684 \u7f3a\u70b9 \u53c8\u662f\u4ec0\u4e48\uff1f \u5b66\u4e60\u65b0\u6280\u672f\u65f6\uff0c \u4e0d\u8981\u53bb\u592a\u94bb\u7814\u7ec6\u8282 \uff0c\u8981\u5148\u628a \u57fa\u672c\u539f\u7406 \u548c \u8bed\u6cd5 \u5f04\u61c2\u3002 \u7528\u5b66\u5230\u7684\u57fa\u672c\u539f\u7406\u5b9e\u73b0\u4e2a \u5feb\u901f\u5165\u95e8\u7684\u5c0f\u9879\u76ee \uff08\u5982\uff1a\u589e\u5220\u6539\u67e5\uff09\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684\u5de5\u4f5c\u9700\u6c42\u4e86\u3002 \u6700\u540e\uff0c\u518d\u7814\u7a76 \u6280\u672f\u7684\u7ec6\u8282\u3001\u89c4\u8303\u3001\u5982\u4f55\u4f18\u5316 \u7b49\uff08\u8fd9\u90e8\u5206\u662f\u6c38\u65e0\u6b62\u5883\u7684\uff09 \uff08\u4e09\uff09Intellij Idea \u00b6 1. \u5feb\u6377\u952e \u00b6 file -> setting -> editor -> keymap \u53ef\u67e5\u770b/\u4fee\u6539 \u5feb\u6377\u952e \u529f\u80fd Ctrl+Alt+L \u683c\u5f0f\u5316 Ctrl+Y \u5220\u9664\u5f53\u524d\u884c Alt+Enter \u5bfc\u5165\u4f9d\u8d56\u5305 Ctrl+D \u590d\u5236\u5f53\u524d\u884c Ctrl+F \u67e5\u627e Ctrl+R \u66ff\u6362 Alt+Insert \u63d2\u5165\u6784\u9020\u5668\u7b49 Ctrl+H \u67e5\u770b\u7c7b\u7ed3\u6784 Ctrl+B\u6216\u9f20\u6807\u5de6\u952e \u5b9a\u4f4d\u7c7b/\u65b9\u6cd5/\u53d8\u91cf\u7684\u5b9a\u4e49\u5904 F7 \u8df3\u5165\uff08\u8fdb\u5165\u65b9\u6cd5\uff09 F8 \u8df3\u8fc7\uff08\u6267\u884c\u8bed\u53e5\uff0c\u4e0d\u8fdb\u5165\u65b9\u6cd5\uff09 shift+F8 \u8df3\u51fa\uff08\u8df3\u51fa\u65b9\u6cd5\uff09 F9 \u6267\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9 \u9009\u4e2d\u4ee3\u7801\u6bb5\uff0cCtrl+Alt+T \u6dfb\u52a0 if-else \u3001 try-catch \u3001 while \u7b49 Surround With \u5757 Ctrl+J \u663e\u793a\u6240\u6709\u5feb\u6377\u952e Ctrl+G \u5149\u6807\u5feb\u901f\u8df3\u8dc3\u5230\u6307\u5b9a\u884c 2. \u6a21\u677f \u00b6 file -> setting -> editor -> Live templates \u53ef\u67e5\u770b/\u4fee\u6539 \u7c7b\u3001\u53d8\u91cf \u542b\u4e49 main public static void main(String[] args) geti public static getInstance() psf[i/s] public static final [int/String] prsf private static final lst args[args.length - 1] new Object().var \u81ea\u52a8\u521b\u5efa\u53d8\u91cf\u540d \u8f93\u51fa \u542b\u4e49 sout System.out.println(); soutv System.out.println(\"args = \" + args); souf System.out.printf(\"\"); serr System.err.println(); \u5faa\u73af \u542b\u4e49 fori for(int i=0;i<;i++) \u5927\u5199i \u589e\u5f3a\u7248for\u5faa\u73af\uff1afor(Object obj: ) iter for (String arg : args) itar for (int i = 0; i < args.length; i++) ritar for (int i = args.length - 1; i >= 0; i--) { itli for (int i = 0; i < list.size(); i++) itco for (Iterator iterator = collection.iterator(); iterator.hasNext(); ) \u5176\u4ed6 \u542b\u4e49 ifn if (args == null) inn if (args != null) mn = Math.min(, ); mx = Math.max(, ); toar .toArray(new Object[0]) thr throw new tryc try...catch trycf try...catch...finally RL .readLock().lock(); WL .writeLock.lock(); \u4e8c\u3001Java\u57fa\u7840 \u00b6 \uff08\u4e00\uff09\u8f6c\u4e49\u5b57\u7b26 \u00b6 \u5b57\u7b26 \u542b\u4e49 \\t \u5236\u8868\u7b26\uff0c\u5b9e\u73b0 tab \u5bf9\u9f50\u529f\u80fd \\n \u6362\u884c\u7b26 \\r \u56de\u8f66\u7b26\uff0c\u56de\u5230\u884c\u9996\uff08\u4e4b\u540e\u518d\u8f93\u5165\u5185\u5bb9\u4f1a\u76f4\u63a5\u66ff\u6362\u672c\u884c\u539f\u6709\u5b57\u7b26\uff09 \\\\ \\ \\\" \" \\' ' \\r \u548c \\r\\n \u6548\u679c\u4e00\u81f4\uff0c\u90fd\u662f\u6362\u884c \uff08\u4e8c\uff09\u6ce8\u91ca \u00b6 \u5355\u884c\u6ce8\u91ca\uff1a 1 // \u6ce8\u91ca\u6587\u5b57 \u591a\u884c\u6ce8\u91ca\uff1a 1 2 3 4 /* \u6ce8\u91ca \u6587\u5b57 */ \u6587\u6863\u6ce8\u91ca\uff1a 1 2 3 4 /** * @author WOC_BUG * @version 1.0 */ \u6ce8\u91ca\u5185\u5bb9\u53ef\u4ee5\u7528 javadoc \u5de5\u5177\u751f\u6210\u8bf4\u660e\u6587\u6863\uff1a 1 javadoc -d [\u8def\u5f84] -[\u6587\u6863\u4e2d\u52a0\u8fc7\u7684doc\u5b57\u6bb5] [\u6587\u4ef6\u540d].java \u4f8b\uff1a \uff08\u4e09\uff09\u6587\u6863\u6ce8\u91ca\u5e38\u7528\u6807\u7b7e \u00b6 \u6807\u7b7e \u63cf\u8ff0 @author \u6807\u8bc6\u4e00\u4e2a\u7c7b\u7684\u4f5c\u8005 @deprecated \u6307\u540d\u4e00\u4e2a\u8fc7\u671f\u7684\u7c7b\u6216\u6210\u5458 {@docRoot} \u6307\u660e\u5f53\u524d\u6587\u6863\u6839\u76ee\u5f55\u7684\u8def\u5f84 @exception \u6807\u5fd7\u4e00\u4e2a\u7c7b\u629b\u51fa\u7684\u5f02\u5e38 {@inheritDoc} \u4ece\u76f4\u63a5\u7236\u7c7b\u7ee7\u627f\u7684\u6ce8\u91ca {@link} \u63d2\u5165\u4e00\u4e2a\u5230\u53e6\u4e00\u4e2a\u4e3b\u9898\u7684\u94fe\u63a5 {@linkplain} \u63d2\u5165\u4e00\u4e2a\u5230\u53e6\u4e00\u4e2a\u4e3b\u9898\u7684\u94fe\u63a5\uff0c\u4f46\u662f\u8be5\u94fe\u63a5\u663e\u793a\u7eaf\u6587\u672c\u5b57\u4f53 @param \u8bf4\u660e\u4e00\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570 @return \u8bf4\u660e\u8fd4\u56de\u503c\u7c7b\u578b @see \u6307\u5b9a\u4e00\u4e2a\u5230\u53e6\u4e00\u4e2a\u4e3b\u9898\u7684\u94fe\u63a5 @serial \u8bf4\u660e\u4e00\u4e2a\u5e8f\u5217\u5316\u5c5e\u6027 @serialData \u8bf4\u660e\u901a\u8fc7 writeObject() \u548c writeExternal() \u65b9\u6cd5\u5199\u7684\u6570\u636e @serialField \u8bf4\u660e\u4e00\u4e2a ObjectStreamField \u7ec4\u4ef6 @since \u6807\u8bb0\u5f53\u5f15\u5165\u4e00\u4e2a\u7279\u5b9a\u7684\u53d8\u5316\u65f6 @throws \u548c @exception \u6807\u7b7e\u4e00\u6837. {@value} \u663e\u793a\u5e38\u91cf\u7684\u503c\uff0c\u8be5\u5e38\u91cf\u5fc5\u987b\u662f static \u5c5e\u6027\u3002 @version \u6307\u5b9a\u7c7b\u7684\u7248\u672c \uff08\u56db\uff09DOS\u547d\u4ee4\uff08Windows\uff09 \u00b6 \u547d\u4ee4 \u542b\u4e49 dir \u76ee\u5f55 tree \u76ee\u5f55\u6811 cd \u5207\u6362\u76ee\u5f55 cd /D c: \u4eceD\u76d8\u5207\u6362\u81f3C\u76d8\u6839\u76ee\u5f55 d:/abc/text.txt \u6216 d:\\\\abc\\\\text.txt \u7edd\u5bf9\u8def\u5f84 ../../text.txt \u6216 ..\\\\..\\\\text.txt \u76f8\u5bf9\u8def\u5f84 cls \u6e05\u5c4f(\u82cd\u8001\u5e08) exit \u9000\u51fa md \u521b\u5efa\u76ee\u5f55 rm \u5220\u9664\u76ee\u5f55 copy \u62f7\u8d1d\u6587\u4ef6 echo \u5411\u6587\u4ef6\u8f93\u5165\u5185\u5bb9 type \u521b\u5efa\u6587\u4ef6 move \u526a\u5207 \uff08\u4e94\uff09JDK\u3001JRE\u3001JVM\u7684\u5173\u7cfb \u00b6 JDK = JRE + java \u5f00\u53d1\u5de5\u5177 JRE = JVM + java \u6838\u5fc3\u7c7b\u5e93 \uff08\u516d\uff09Java\u7f16\u5199\u8fc7\u7a0b \u00b6 \u7f16\u5199 Java \u6e90\u7801 javac \u7f16\u8bd1\u6210 .class \u5b57\u8282\u7801\u6587\u4ef6 java \u8fd0\u884c\uff0c\u5373\u5c06 .class \u6587\u4ef6\u52a0\u8f7d\u5230 jvm \u8fd0\u884c \u4e09\u3001Java\u53d8\u91cf \u00b6 \uff08\u4e00\uff09\u53d8\u91cf \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b \u5b57\u8282 \u7ec6\u8282 \u8303\u56f4 \u9ed8\u8ba4\u503c byte 1 -2^7 -2^7 ~ 2^7-1 2^7-1 (byte)0 short 2 -2^{15} -2^{15} ~ 2^{15}-1 2^{15}-1 (short)0 int 4 -2^{31} -2^{31} ~ 2^{31}-1 2^{31}-1 0 long 8 \u6570\u636e\u540e\u9762 \u5efa\u8bae \u52a0 l \u6216 L -2^{63} -2^{63} ~ 2^{63}-1 2^{63}-1 0L float 4\uff08\u7b26\u53f7\u4f4d+\u6307\u6570\u4f4d+\u4f4d\u6570\u4f4d\uff09 \u6570\u636e\u540e\u9762 \u5fc5\u987b \u52a0 f \u6216 F -3.403E38 -3.403E38 ~ 3.403E38 3.403E38 0.0f double 8\uff08\u7b26\u53f7\u4f4d+\u6307\u6570\u4f4d+\u4f4d\u6570\u4f4d\uff09 \u6ce8\u610f\u6bd4\u8f83/\u8fd0\u7b97\u7684\u7cbe\u5ea6\u95ee\u9898 -1.798E308 -1.798E308 ~ 1.798E308 1.798E308 0.0d char 2\uff08Unicode\u7f16\u7801\uff09 -2^{15} -2^{15} ~ 2^{15}-1 2^{15}-1 '\\u0000'\u5373null boolean 1 \u6216 4 \uff08\u6709\u5f85\u8003\u8bc1\uff09 0 0 \u3001 1 1 false \u5168\u5c40\u53d8\u91cf\uff08\u5373\u5c5e\u6027\uff09\u6709\u9ed8\u8ba4\u503c\uff0c\u800c\u5c40\u90e8\u53d8\u91cf\u4e0d\u4f1a\u88ab\u81ea\u52a8\u521d\u59cb\u5316 \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u91cd\u540d\uff0c\u8bbf\u95ee\u65f6\u9075\u5faa\u5c31\u8fd1\u539f\u5219 1 2 3 4 5 6 7 8 9 class Person { String name = \"Bob\" ; void setName (){ String name = \"Alice\" ; System . out . println ( name ); } } // \u8f93\u51fa\uff1aAlice \u5f15\u7528\u6570\u636e\u7c7b\u578b \u5b57\u8282 \u7c7b \u63a5\u53e3 \u6570\u7ec4 +\u53f7\u7684\u4f7f\u7528 \u00b6 +\u53f7\u524d\u540e\u90fd\u662f\u6570\u503c\u7c7b\u578b\uff0c\u505a\u8fd0\u7b97 +\u53f7\u524d\u540e\u6709\u5b57\u7b26\u7c7b\u578b\uff0c\u505a\u62fc\u63a5 \u5b57\u7b26 \u00b6 Boolean \u00b6 Java \u4e2d\u4e0d\u80fd\u7528 0 \u6216\u975e 0 \u7684\u6570\u5b57\u4ee3\u8868 true \u6216 false \uff08\u4e8c\uff09\u7c7b\u578b\u8f6c\u6362 \u00b6 \u4ece\u4f4e\u7cbe\u5ea6\u5230\u9ad8\u7cbe\u5ea6\u80fd\u591f\u81ea\u52a8\u8f6c\u6362\uff1a char -> int -> long -> float -> double byte -> short -> int -> long -> float -> double \u4e3a\u4ec0\u4e48 long \u80fd\u81ea\u52a8\u8f6c\u6362\u4e3a float ? float \u4e2d\u67098\u4f4d\u8868\u793a\u6307\u6570\u300123\u4f4d\u8868\u793a\u5c3e\u6570\uff0c\u8303\u56f4\u662f 2^{127} 2^{127} \uff08 127 \u662f\u56e0\u4e3a\u6307\u6570\u4e0d\u80fd\u4e3a\u8d1f\u6570\uff09\uff1b long \u7684\u8303\u56f4\u662f 2^{64} 2^{64} \uff1b \u56e0\u6b64 float \u8303\u56f4\u8fdc\u5927\u4e8e long \u3002 \u591a\u79cd\u6570\u636e\u7c7b\u578b\u6df7\u5408\u8fd0\u7b97\u65f6\uff0c\u9996\u5148\u4f1a\u8f6c\u6362\u6210\u5bb9\u91cf\u6700\u5927\u7684\u6570\u636e\u7c7b\u578b 1 2 3 int n1 = 10 ; float n2 = n1 + 1.1 ; // \u9519\u8bef // \u56e0\u4e3a 1.1 \u662f double \u7c7b\u578b\uff0c n1 \u4f1a\u4ece int \u8f6c\u6362\u4e3a double \uff0cn1 + 1.1 \u7684\u7ed3\u679c\u662f double\uff0c\u65e0\u6cd5\u81ea\u52a8\u8f6c\u6362\u6210 float \uff08 byte \uff0c short \uff09\u4e0e char \u4e0d\u80fd\u76f8\u4e92\u8f6c\u6362 byte \u3001 short \u3001 char \u4e09\u8005\u53ef\u4ee5\u8fd0\u7b97\uff0c\u4e0d\u7ba1\u5b83\u4eec\u662f\u5355\u72ec\u8fd0\u7b97\u8fd8\u662f\u6df7\u5408\u8fd0\u7b97\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u90fd\u4f1a\u9996\u5148\u8f6c\u4e3a int \u5355\u72ec\u8fd0\u7b97\uff1a 1 2 3 4 byte b1 = 1 ; byte b2 = 2 ; byte b3 = b1 + b2 ; // \u9519\u8bef // b1 + b2 \u4f1a\u8f6c\u4e3a int \u6df7\u5408\u8fd0\u7b97\uff1a 1 2 3 4 byte b1 = 1 ; short s1 = 1 ; short s2 = b1 + s1 ; // \u9519\u8bef // b1 + s1 \u9996\u5148\u4f1a\u8f6c\u4e3a int boolean \u4e0d\u53c2\u4e0e\u7c7b\u578b\u7684\u81ea\u52a8\u8f6c\u6362 char \u7c7b\u578b\u53ea\u80fd\u4fdd\u5b58 int \u7c7b\u578b\u7684\u5e38\u91cf\u503c\uff0c\u4e0d\u80fd\u4fdd\u5b58\u53d8\u91cf\u503c 1 2 3 4 char c1 = 97 ; // \u6b63\u786e int n1 = 97 ; char c2 = n1 ; // \u9519\u8bef // int \u7684\u8303\u56f4\u6bd4 char \u5927 \uff08\u4e09\uff09\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e60\u9898 \u00b6 \u4e60\u98981 \u00b6 \u4e60\u98982 \u00b6 \u5b57\u7b26\u76f8\u52a0\u5f97\u5230\u7684\u662f\u5176\u5b57\u7b26\u7801\u503c\u76f8\u52a0\u7684\u548c \uff08\u56db\uff09String \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6cString \u00b6 String\u8f6c\u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 \uff08\u4e94\uff09\u53d8\u91cf\u521d\u59cb\u5316\u987a\u5e8f \u00b6 \u53d8\u91cf\u4e4b\u95f4\u5b9a\u4e49\u7684\u5148\u540e\u987a\u5e8f\uff0c\u51b3\u5b9a\u4e86\u521d\u59cb\u5316\u987a\u5e8f \u5373\u4f7f\u53d8\u91cf\u5b9a\u4e49\u5206\u6563\u5728\u65b9\u6cd5\u4e4b\u95f4\uff0c\u4ed6\u4eec\u4ecd\u7136\u5728\u4efb\u4f55\u65b9\u6cd5\uff08\u5305\u62ec\u6784\u9020\u5668\uff09\u4e4b\u524d\u88ab\u521d\u59cb\u5316\u3002 \u56db\u3001\u8fd0\u7b97\u7b26 \u00b6 \uff08\u4e00\uff09\u7b97\u672f\u8fd0\u7b97\u7b26 \u00b6 \u9664\u6cd5 / \u00b6 1 2 3 4 5 6 System . out . println ( 10 / 4 ); // 2 System . out . println ( 10.0 / 4 ); // 2.5 System . out . println ( 10 / 4.0 ); // 2.5 double ans = 10 / 4 ; // 10/4\u5f972\uff0c\u518d\u8f6c\u4e3adouble\u4e3a2.0 System . out . println ( ans ); // 2.0 \u53d6\u6a21 % \u00b6 a a % b b = a - a / b * b a - a / b * b 1 2 3 4 5 System . out . println ( 10 % 3 ); // 1 System . out . println ( - 10 % 3 ); // -1 System . out . println ( 10 % - 3 ); // 1 System . out . println ( - 10 % - 3 ); // -1 // \u7b26\u53f7\u968f\u88ab\u9664\u6570\u7684\u6b63\u8d1f\u53d8\u5316 \u5f53 a \u662f\u5c0f\u6570\u65f6\uff1a a a % b b = a - (int) a / b * b a - (int) a / b * b 1 2 3 4 5 System . out . println ( - 10.5 % 3 ); // -1.5 - 10.5 - ( int )( - 10.5 ) / 3 * 3 = - 10.5 - ( - 10 ) / 3 * 3 = - 10.5 + 9 = - 1.5 \u81ea\u589e ++ \u00b6 i = i++ 1 2 3 4 5 6 7 int i = 1 ; i = i ++ ; // \u2460 tmp = i; // \u2461 i = i + 1; // \u2462 return tmp; // \u2463 i = tmp; System . out . println ( i ); // 1 i = ++i 1 2 3 4 5 6 int i = 1 ; i = ++ i ; // \u2460 i = i + 1; // \u2461 return i; // \u2462 i = i; System . out . println ( i ); // 2 \uff08\u4e8c\uff09\u903b\u8f91\u8fd0\u7b97\u7b26 \u00b6 && \u548c & \u00b6 a && b \uff1a\u82e5 a \u4e3a\u5047\uff0c\u5219\u4e0d\u4f1a\u6267\u884c/\u5224\u65ad b a & b \uff1a\u82e5 a \u4e3a\u5047\uff0c\u4f9d\u65e7\u4f1a\u6267\u884c\u548c\u5224\u65ad b 1 2 3 4 5 6 7 8 9 int a = 10 ; int b = 20 ; if ( a > 100 && ++ b < 100 ){ System . out . println ( \"true\" ); } System . out . println ( \"a = \" + a + \",b = \" + b ); // \u8f93\u51fa\uff1a // a = 10,b = 20 1 2 3 4 5 6 7 8 9 int a = 10 ; int b = 20 ; if ( a > 100 & ++ b < 100 ){ System . out . println ( \"true\" ); } System . out . println ( \"a = \" + a + \",b = \" + b ); // \u8f93\u51fa\uff1a // a = 10,b = 21 || \u548c | \u00b6 \u540c\u7406 a || b \uff1a\u82e5 a \u4e3a\u771f\uff0c\u5219\u4e0d\u4f1a\u6267\u884c/\u5224\u65ad b a | b \uff1a\u82e5 a \u4e3a\u771f\uff0c\u4f9d\u65e7\u4f1a\u6267\u884c\u548c\u5224\u65ad b \uff08\u4e09\uff09\u590d\u5408\u8fd0\u7b97 \u00b6 += \u3001 ++ \u7b49 \u00b6 \u590d\u5408\u8fd0\u7b97\u4f1a\u81ea\u52a8\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 1 2 3 4 byte a = 4 ; a += 2 ; // \u76f8\u5f53\u4e8e a = (byte)(a + 2) a ++ ; // \u76f8\u5f53\u4e8e a = (byte)(a + 1) // \u800c\u76f4\u63a5 a = a + 2\u624d\u662f\u9519\u7684\uff0c\u56e0\u4e3a2\u662fint\u7c7b\u578b \uff08\u56db\uff09\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u7ed3\u679c \u00b6 \u6ce8\u610f\uff1a \u8d4b\u503c\u8bed\u53e5\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u6c38\u771f\uff0c\u800c\u662f\u8981\u5224\u65ad\u8d4b\u503c\u64cd\u4f5c\u540e\u7684\u7ed3\u679c\u503c\u7684 1 2 3 4 5 6 7 8 boolean x = false , y = true ; if ( x = true ){ // \u771f // ... } if ( y = false ){ // \u5047 // ... } \uff08\u4e94\uff09\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7 \u00b6 \uff08\u516d\uff09\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801 \u00b6 0 0 \u548c\u6b63\u6570\u7684\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\u90fd\u662f\u5b83\u672c\u8eab \u8d1f\u6570\u7684\u53cd\u7801 = \u5176\u539f\u7801 \u7b26\u53f7\u4f4d\u4e0d\u53d8 \uff0c\u5176\u5b83\u4f4d\u53d6\u53cd = \u5176\u8865\u7801 - 1 \u8d1f\u6570\u7684\u8865\u7801 = \u5176\u53cd\u7801 + 1 java \u4e2d\u7684\u6570\u90fd\u662f\u6709\u7b26\u53f7\u7684 \u8fd0\u7b97\u65f6\u8981\u7528\u8865\u7801\u8fd0\u7b97\uff0c\u770b\u7ed3\u679c\u8981\u7528\u6e90\u7801\u770b \u4f8b\u98981\uff0c\u6c42 ~-2 \u200b\uff1a -2 -2 \u539f\u7801\uff1a 10000000 00000000 00000000 00000010 -2 -2 \u53cd\u7801\uff1a 11111111 11111111 11111111 11111101 -2 -2 \u8865\u7801\uff1a 11111111 11111111 11111111 11111110 ~ -2 -2 \u8865\u7801\uff1a00000000 00000000 00000000 00000001 ~ -2 -2 \u539f\u7801\uff1a00000000 00000000 00000000 00000001 \u7b54\u6848\uff1a 1 1 \u4f8b\u98982\uff0c\u6c42 ~2: 2 2 \u539f\u7801\uff1a 00000000 00000000 00000000 00000010 2 2 \u8865\u7801\uff1a 00000000 00000000 00000000 00000010 ~ 2 2 \u8865\u7801\uff1a11111111 11111111 11111111 11111101 ~ 2 2 \u539f\u7801\uff1a10000000 00000000 00000000 00000011 \u7b54\u6848\uff1a -3 -3 \u6ce8\u610f\uff1a \u7b26\u53f7\u4f4d\u4e5f\u53c2\u4e0e\u4f4d\u8fd0\u7b97 \u8ba1\u7b97\u53cd\u7801\u4e0d\u5305\u62ec\u7b26\u53f7\u4f4d \uff08\u4e03\uff09\u5de6\u79fb\u3001\u53f3\u79fb\u3001\u65e0\u7b26\u53f7\u53f3\u79fb \u00b6 << \uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u4f4e\u4f4d\u8865\u96f6 >> \uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u4f4e\u4f4d\u6ea2\u51fa\uff0c\u5e76\u7528\u7b26\u53f7\u4f4d\u8865\u6ea2\u51fa\u7684\u9ad8\u4f4d >>> \uff1a\u4f4e\u4f4d\u6ea2\u51fa\uff0c\u9ad8\u4f4d\u8865\u96f6 char \u3001 byte \u3001 short \u8fdb\u884c\u79fb\u4f4d\u64cd\u4f5c\u65f6\uff0c\u4f1a\u5148\u8f6c\u6210 int \uff0c\u8fd0\u7b97\u540e\u518d\u622a\u65ad\u591a\u4f59\u4f4d Q\uff1a \u4e3a\u4ec0\u4e48 int \u7c7b\u578b\u7684\u6570\u503c\u5728 >>32 \u65f6\u7ed3\u679c\u4e0d\u4e3a 0 \uff1f A\uff1a \u5373\uff0c\u5de6\u79fb\u3001\u53f3\u79fb\u64cd\u4f5c\u6700\u591a\u53ea\u80fd\u79fb31\u4f4d\uff0c\u8d85\u8fc7\u4e4b\u540e\u7684\u503c\u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u4e0d\u540c\u7684\u7f16\u8bd1\u5668 \u4e94\u3001\u63a7\u5236\u8bed\u53e5 \u00b6 \u6807\u7b7e \u00b6 \u7c7b\u4f3c\u4e8e C \u4e2d\u7684 goto \u6807\u7b7e\uff0c\u4f46\u662f\u6536\u5230\u9650\u5236\uff0c\u53ea\u80fd\u914d\u5408 continue \u548c break \u4f7f\u7528 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 outer : // \u5916\u5c42\u5faa\u73af\u7684\u6807\u7b7e for ( int i = 0 ; i < 3 ; i ++ ){ if ( i == 1 ) continue outer ; inter : // \u5185\u5c42\u5faa\u73af\u7684\u6807\u7b7e for ( int j = 0 ; j < 10 ; j ++ ){ if ( j == 2 ) break inter ; System . out . println ( \"i=\" + i + \",j=\" + j ); } } /* \u8f93\u51fa\uff1a i=0,j=0 i=0,j=1 i=2,j=0 i=2,j=1 */ \u516d\u3001\u6570\u7ec4 \u00b6 \uff08\u4e00\uff09\u57fa\u672c\u6982\u5ff5 \u00b6 \u6570\u7ec4\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u662f\u5f15\u7528 \u7c7b\u578b \u5b9a\u4e49\u65b9\u6cd5\uff1a int[] ans = {1,4,5,6,10}; int ans[] = {1,2,3,4,5}; int[] ans = new int[5]; int ans[]= new int[5]; java\u4e2d\u53ef\u4ee5\u7528\u53d8\u91cf\u5b9a\u4e49\u6570\u7ec4\u5927\u5c0f 1 2 int size = 100 \uff1b int [] num = new int [ size ] ; \uff08\u4e8c\uff09\u503c\u4f20\u9012\u4e0e\u5f15\u7528\u4f20\u9012 \u00b6 \u6570\u7ec4\u4e4b\u95f4\u7684\u8d4b\u503c\u662f\u5f15\u7528\u8d4b\u503c\uff1a 1 2 3 4 int [] arr1 = { 1 , 2 , 3 }; int [] arr2 = arr1 ; arr2 [ 0 ] = 10 ; // arr1\u7684\u7b2c0\u4e2a\u5143\u7d20\u4e5f\u53d8\u6210\u4e8610 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4fdd\u5b58\u7684\u662f\u503c\uff0c\u5373\u62f7\u8d1d\u7684\u662f\u503c \u5f15\u7528\u6570\u636e\u7c7b\u578b\u4fdd\u5b58\u7684\u662f\u5806\u5185\u7684\u5730\u5740\uff0c\u5373\u62f7\u8d1d\u7684\u662f\u5730\u5740 \uff08\u4e09\uff09\u6570\u7ec4\u6269\u5bb9 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 int [] arr = { 1 , 2 , 3 }; int [] arr2 = new int [ arr . length + 1 ] ; // \u8d4b\u503c for ( int i = 0 ; i < arr . length ; i ++ ){ arr2 [ i ] = arr [ i ] ; } arr2 [ 3 ]= 4 ; // \u62f7\u8d1d\u5f15\u7528 arr = arr2 ; for ( int i = 0 ; i < arr . length ; i ++ ){ System . out . println ( arr [ i ] ); } /* \u8f93\u51fa\uff1a 1 2 3 4 */ \uff08\u56db\uff09\u4e8c\u7ef4\u6570\u7ec4 \u00b6 \u4e8c\u7ef4\u6570\u7ec4\u7684\u5185\u5b58\u5f62\u5f0f \u00b6 \u8d4b\u503c\u65b9\u5f0f \u00b6 int[][] arr = {{1,1,1},{8,8,9},{100}}; int[][] arr = new int[2][3]; int[][] arr; arr = new int[2][3]; java int[][] arr = new int[2][]; // \u521b\u5efa\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u91cc\u9762\u653e2\u4e2a\u4e00\u4f4d\u6570\u7ec4\uff0c\u4f46\u662f\u6bcf\u4e2a\u4e00\u4f4d\u6570\u7ec4\u8fd8\u6ca1\u6709\u5f00\u6570\u636e\u7a7a\u95f4 for(int i=0;i<arr.length;i++){ arr[i] = new int[i+1]; // \u7b2c\u4e8c\u7ef4\u5bb9\u91cf\u53ef\u968f\u610f\u8bbe\u7f6e } String\u6570\u7ec4 \u00b6 \u4f8b\u9898\uff1a \uff08\u4e94\uff09\u53ef\u53d8\u53c2\u6570\u5217\u8868 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Other { Other ( String ... str ){ // \u7c7b\u4f3c\u4e8e\u4f20\u5165\u4e00\u4e2aString\u6570\u7ec4 for ( String i : str ) System . out . print ( i + \" \" ); System . out . println (); } } public class Index { public static void main ( String [] args ){ Other other = new Object (); // \u4f20\u5165\u4e3a\u7a7a Other other2 = new Object ( \"a\" , \"b\" , \"c\" ); Other other3 = new Object ( new String [] { \"1\" , \"2\" , \"3\" }); // \u76f4\u63a5\u4f20\u5165\u6570\u7ec4 // Other other4 = new Object({\"A\",\"B\",\"C\"}); // \u9519\u8bef } } \u6ce8\u610f\uff1a\u53ef\u53d8\u53c2\u6570\u5217\u8868\u53ea\u80fd\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u5b9a\u4e49\uff0c\u4e14\u540c\u4e00\u4e2a\u5f62\u53c2\u5217\u8868\u4e2d\u6700\u591a\u53ea\u80fd\u51fa\u73b0\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570\u3002 \uff08\u516d\uff09\u679a\u4e3e\u7c7b\u578b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 enum MyEnum { UP , DOWN , LEFT , RIGHT , MIDDLE } for ( MyEnum myEnum : MyEnum . values ()){ System . out . println ( myEnum + \",\" + myEnum . ordinal ()); } /* Output: UP,0 DOWN,1 LEFT,2 RIGHT,3 MIDDLE,4 */ \u679a\u4e3e\u53ef\u7528\u4e8eswitch\u8bed\u53e5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 MyEnum middle = MyEnum . MIDDLE ; switch ( middle ){ case LEFT : // \u6807\u7b7e\u5fc5\u987b\u4e3a\u679a\u4e3e\u7c7b\u578b\u7684\u975e\u9650\u5b9a\u540d\u79f0\uff0c\u4e0d\u80fd\u4e3aMyEnum.LEFT System . out . println ( MyEnum . LEFT ); break ; case RIGHT : System . out . println ( MyEnum . RIGHT ); break ; case UP : System . out . println ( MyEnum . UP ); break ; case DOWN : System . out . println ( MyEnum . DOWN ); break ; case MIDDLE : System . out . println ( MyEnum . MIDDLE ); break ; } \u4e03\u3001\u7c7b&\u5bf9\u8c61 \u00b6 \uff08\u4e00\uff09\u5bf9\u8c61 \u00b6 \u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u5728\u5f62\u5f0f \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u76f4\u63a5\u4fdd\u5b58\u5728\u5806\u4e2d\u7684\u5bf9\u8c61\u4e2d \u5e38\u91cf\u3001\u5b57\u7b26\u4e32\u7c7b\u578b\u4fdd\u5b58\u5728\u65b9\u6cd5\u533a\u7684\u5e38\u91cf\u6c60\u4e2d\uff0c\u800c\u5bf9\u8c61\u4e2d\u4fdd\u5b58\u7684\u662f\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u6570\u636e\u7684\u5730\u5740 \u5bf9\u8c61\u521b\u5efa\u7684\u6d41\u7a0b \u00b6 \u5f53\u521b\u5efa\u5bf9\u8c61\uff0c\u6216\u9996\u6b21\u8bbf\u95ee\u9759\u6001\u57df\u3001\u9759\u6001\u65b9\u6cd5\u65f6\uff0c\u4f1a\u9996\u5148\u5c06\u7c7b\u4fe1\u606f\u52a0\u8f7d\u5230\u65b9\u6cd5\u533a\u4e2d\uff0c\u5305\u62ec\u5c5e\u6027\u3001\u884c\u4e3a\u3002\uff08 \u53ea\u52a0\u8f7d\u4e00\u6b21 \uff09 \u5728\u5806\u4e2d\u5206\u914d\u7a7a\u95f4\uff0c\u6e05\u7a7a\u7a7a\u95f4\uff0c\u5e76\u521d\u59cb\u5316\u4e3a\u9ed8\u8ba4\u503c \u5c06\u5bf9\u8c61\u5728\u5806\u4e2d\u7684\u5730\u5740\uff0c\u8d4b\u7ed9\u6307\u5411\u5b83\u7684\u5f15\u7528 \u8fdb\u884c\u6307\u5b9a\u5c5e\u6027\u7684\u521d\u59cb\u5316 \u6267\u884c\u6784\u9020\u5668 \uff08\u8be6\u89c1 \u300aThink In Java\u300b 95~96\u9875 \u6216 \u97e9\u987a\u5e73 Java \u89c6\u9891199~200\u96c6\uff09 \u6ce8\u610f \u00b6 \u8bbf\u95ee\u9759\u6001\u5e38\u91cf\u4e0d\u4f1a\u521d\u59cb\u5316\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 class A { public final static String text = \"hello world!\" ; static { System . out . println ( \"A\" ); } } public class Test { System . out . println ( A . text ); } // \u8f93\u51fa\uff1ahello world! // \u9759\u6001\u4ee3\u7801\u5757\u6ca1\u6709\u6267\u884c\uff0c\u8bf4\u660e\u6ca1\u6709\u521d\u59cb\u5316\u7c7b // \u82e5\u6539\u6210 public final static String text = new String(\"hello world!\"); \u5219\u4f1a\u521d\u59cb\u5316 \u65b9\u6cd5\u7684\u8c03\u7528\u673a\u5236 \u00b6 \u65b9\u6cd5\u4f20\u53c2 \u00b6 \u6ce8\u610f\u65b9\u6cd5\u4e2d\u90fd\u662f\u503c\u4f20\u9012\uff0c\u56e0\u6b64\u4f20\u5165\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u4f1a\u88ab\u771f\u7684\u6539\u53d8\uff0c\u6539\u53d8\u7684\u662f\u5176\u62f7\u8d1d\u3002\u800c\u4f20\u5165\u7684\u5f15\u7528\u7684\u62f7\u8d1d\u80fd\u591f\u6307\u5411\u540c\u4e00\u5757\u5806\u533a\u95f4\uff0c\u4ece\u800c\u771f\u6b63\u5730\u6539\u53d8\u6570\u636e\u3002 \uff08\u4e8c\uff09this \u00b6 \u5bf9\u8c61\u4e2d\u9690\u85cf\u7740\u4e00\u4e2a this \uff0c\u5b83\u7684\u503c\u662f\u5f53\u524d\u5bf9\u8c61\u7684\u5730\u5740\u3002 java \u4e2d\u53ef\u4ee5\u901a\u8fc7 hashCode \u6765\u4f5c\u4e3a\u5047\u5730\u5740\u67e5\u770b\uff0chashCode\u662f\u6839\u636e\u5bf9\u8c61\u7684\u5185\u90e8\u5730\u5740\u8f6c\u6362\u6210\u7684\u4e00\u4e2a\u6574\u6570\u3002 this \u4f5c\u4e3a\u6784\u9020\u5668\u4f7f\u7528\u65f6\uff0c\u53ea\u80fd\u653e\u5728\u7b2c\u4e00\u53e5 1 2 3 4 5 6 7 8 class T { public T (){ this ( \"jack\" , 23 ); // ... \u5176\u4ed6\u8bed\u53e5 } public T ( String name , int age ){ } } \uff08\u4e09\uff09final \u00b6 static \u3001 final \u5171\u540c\u4fee\u9970\u7684\u5e38\u91cf\u662f \u7f16\u8bd1\u65f6\u5e38\u91cf \uff08\u4e0d\u5305\u62ec new \u521b\u5efa\u7684\u5bf9\u8c61\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 class A { public final static String text = \"hello world!\" ; static { System . out . println ( \"A\" ); } } public class Test { System . out . println ( A . text ); } // \u8f93\u51fa\uff1ahello world! // \u9759\u6001\u4ee3\u7801\u5757\u6ca1\u6709\u6267\u884c\uff0c\u8bf4\u660e\u6ca1\u6709\u521d\u59cb\u5316\u7c7b\uff0c\u56e0\u4e3atext\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u653e\u5728\u5e38\u91cf\u6c60\u4e2d\u4e86 // \u82e5\u6539\u6210 public final static String text = new String(\"hello world!\"); \u5219\u4f1a\u521d\u59cb\u5316 final \u4fee\u9970\u7684\u5f15\u7528\u7c7b\u578b\u4e0d\u53ef\u6539\u53d8\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u4f46\u53ef\u4ee5\u6539\u53d8\u5bf9\u8c61\u7684\u5c5e\u6027\u3002 \u6ca1\u6709\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\u7684 final \u5e38\u91cf\uff0c\u5fc5\u987b\u5728\u6784\u9020\u5668\u4e2d\u521d\u59cb\u5316\u3002 \uff08\u56db\uff09\u8bbf\u95ee\u6743\u9650\u4fee\u9970\u7b26 \u00b6 \u4fee\u9970\u7b26 \u672c\u7c7b \u5305\u5185 \u5b50\u7c7b \u5305\u5916 private \u221a default \u221a \u221a protected \u221a \u221a \u221a public \u221a \u221a \u221a \u221a \u6ce8\u610f\uff0c\u53ea\u6709 public \u548c default \u624d\u80fd\u4fee\u9970\u7c7b \uff08\u4e94\uff09\u5411\u4e0a\u8f6c\u578b \u00b6 \u5411\u4e0a\u8f6c\u578b\uff1a\u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class A { public void test (){ System . out . println ( \"A.test()\" ); } } class B extends A { public void test (){ System . out . println ( \"B.test()\" ); } } public class Main { public static void main ( String args [] ){ A a = new B (); a . test (); } } // \u8f93\u51fa B.test \u5411\u4e0a\u8f6c\u578b\u8c03\u7528\u65b9\u6cd5\u5fc5\u8981\u6761\u4ef6\uff1a\u7ee7\u627f+\u65b9\u6cd5\u8986\u76d6 \u82e5\u4e0a\u4f8b\u4e2d\u7684\u65b9\u6cd5\u662f private \uff0c\u5b50\u7c7bB\u5c31\u65e0\u6cd5\u8986\u76d6A\u7684\u65b9\u6cd5\uff0c\u56e0\u6b64\u5411\u4e0a\u8f6c\u578b\u540e\u4e5f\u65e0\u6cd5\u4f7f\u7528\u8be5\u65b9\u6cd5 \uff08\u516d\uff09\u5411\u4e0b\u8f6c\u578b \u00b6 \u63a5\u4e0a\u4f8b\uff1a 1 2 3 4 5 6 A a = new B (); B b = ( B ) a ; // \u5411\u4e0b\u8f6c\u578b\u4e3a\u5f3a\u5236\u8f6c\u6362 // \u9519\u8bef // A a = new A(); // B b = (B)a; \u53ea\u6709\u7236\u7c7b\u5f15\u7528\u7684\u5b50\u7c7b\u5bf9\u8c61\u624d\u80fd\u5411\u4e0b\u8f6c\u578b\uff0c\u76f4\u63a5\u7236\u7c7b\u5bf9\u8c61\u4e0d\u80fd\u5411\u4e0b\u8f6c\u578b\u3002 \u516b\u3001\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001 \u00b6 \uff08\u4e00\uff09\u5c01\u88c5 \u00b6 \u5c06\u5c5e\u6027\u548c\u65b9\u6cd5\u5c01\u88c5\u5728\u7c7b\u4e2d\uff0c\u9690\u85cf\u5177\u4f53\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u63d0\u4f9b\u5bf9\u5916\u7684\u63a5\u53e3\u3002 \uff08\u4e8c\uff09\u7ee7\u627f \u00b6 private \u65b9\u6cd5\u4e0d\u80fd\u88ab\u8986\u76d6\uff0c\u56e0\u6b64\u5728\u5411\u4e0a\u8f6c\u578b\u65f6\u65e0\u6cd5\u8c03\u7528 \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4e0d\u7ba1\u4f7f\u7528\u54ea\u4e2a\u5b50\u7c7b\u6784\u9020\u5668\uff0c\u90fd\u4f1a\u9ed8\u8ba4\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u5668\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5fc5\u987b\u5728\u5b50\u7c7b\u6784\u9020\u5668\u4e2d\u4f7f\u7528 super \u6307\u5b9a\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002 \u7ee7\u627f\u5185\u5b58\u60c5\u51b5 \u00b6 \u7c7b\u4fe1\u606f\u4fdd\u5b58\u5728\u65b9\u6cd5\u533a\uff0c\u5bf9\u8c61\u4e2d\u4f1a\u4fdd\u5b58\u6709\u5176\u7236\u7c7b\u7684\u5c5e\u6027 \u5bf9\u8c61\u8bbf\u95ee\u5c5e\u6027/\u65b9\u6cd5\u987a\u5e8f \u00b6 \u76f4\u63a5\u8bbf\u95ee\u5c5e\u6027\u548c\u5728\u5c5e\u6027\u524d\u52a0 this \u8bbf\u95ee\u7684\u6548\u679c\u3001\u67e5\u627e\u987a\u5e8f\u90fd\u662f\u4e00\u81f4\u7684 \u8be6\u89c1\uff1a \u97e9\u987a\u5e73Java_\u7ee7\u627f\u672c\u8d28\u8be6\u89e3 \u4f8b\u9898 \u00b6 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 // A\u7c7b public class A { public A () { System . out . println ( \"A()\" ); // 4 } public A ( String name ) { System . out . println ( \"A: \" + name ); } } // B\u7c7b public class B extends A { public B (){ this ( \"Alice\" ); // 2 System . out . println ( \"B()\" ); // 6 } public B ( String name ){ // 3 System . out . println ( \"B: \" + name ); // 5 } } // main\u6240\u5728\u7c7b public class ExtendExercise { public static void main ( String [] args ) { A obj = new B (); // 1 } } \u6267\u884c\u987a\u5e8f\uff1a \u8fdb\u5165 B() \uff0c\u53d1\u73b0\u6709\u4e2a this(\"Alice\") \uff0c\u4e8e\u662f\u8fdb\u5165 B(String name) \u3002 \u800c B(String name) \u4f1a\u6709\u9ed8\u8ba4\u7684 super \u6307\u5411\u7236\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u4e8e\u662f\u8fdb\u5165 A() \u3002 A() \u6267\u884c\u7ed3\u675f\u540e\uff0c\u7ee7\u7eed\u6267\u884c B(String name) \uff0c\u968f\u540e\u518d\u56de\u5230 B() \u3002 \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 3 // A() // B: Alice // B() super \u00b6 super \u548c this \u90fd\u53ea\u80fd\u653e\u5728\u6784\u9020\u5668\u7684\u7b2c\u4e00\u884c\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e0d\u80fd\u5171\u5b58\u3002 Override \u00b6 \u5b50\u7c7b\u7684\u65b9\u6cd5\u7b7e\u540d\u5fc5\u987b\u548c\u7236\u7c7b\u4e00\u81f4 \u5b50\u7c7b\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u4e3a\u7236\u7c7b\u8fd4\u56de\u503c\u6216\u5176\u5b50\u7c7b \u5b50\u7c7b\u65b9\u6cd5\u4e0d\u7f29\u5c0f\u7236\u7c7b\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650 override\u4e0eoverload\u533a\u522b \u4ee3\u7801\u590d\u7528 \uff08\u4e09\uff09\u591a\u6001\uff08Polymorphic\uff09 \u00b6 \u65b9\u6cd5\u6216\u5bf9\u8c61\u5177\u6709\u591a\u79cd\u5f62\u6001\u3002 \u9759\u6001\u591a\u6001 \u00b6 \u91cd\u8f7d(Overload)\uff1a\u65b9\u6cd5\u7b7e\u540d\u4e0d\u4e00\u6837\uff08\u65b9\u6cd5\u7b7e\u540d = \u65b9\u6cd5\u540d + \u53c2\u6570\u5217\u8868\uff09 1 2 3 4 5 public class Animal { public void eat () { } public void eat ( String name ) { } } \u52a8\u6001\u591a\u6001 \u00b6 \u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 \u91cd\u5199\uff08Override\uff09 \u5c5e\u6027\u4e0d\u652f\u6301\u91cd\u5199\uff08\u5305\u62ec\u5f15\u7528\u7c7b\u578b\u7684\u5c5e\u6027\uff09\uff0c\u56e0\u4e3a\u5c5e\u6027\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u786e\u5b9a\uff0c\u56e0\u6b64\u65e0\u6cd5\u52a8\u6001\u67e5\u627e\u5b50\u7c7b\u5c5e\u6027 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // Animal\u57fa\u7c7b public class Animal { int age = 10 ; Food food = new Fish (); // Food\u57fa\u7c7b\uff0cFish\u5b50\u7c7b\uff0c\u91cc\u9762\u53ea\u6709\u4e00\u4e2aString\u5c5e\u6027 public void eat (){ System . out . println ( \"Animal eat()\" ); } } // Cat\u5b50\u7c7b public class Cat extends Animal { int age = 7 ; Food food = new Fish (); @Override public void eat (){ System . out . println ( \"Cat eat()\" ); } } public class Index { public static void main ( String [] args ) { Animal animal = new Cat (); System . out . println ( animal . age ); // 10 System . out . println ( animal . food . name ); // Food } } \u5982\u679c A \u7c7b\u7ee7\u627f B \u7c7b\uff0c B \u7ee7\u627f C \uff0c\u5148\u5b9a\u4e49 C obj = new A() \uff0c\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\u4ecd\u7136\u9075\u5faa\u4ece\u5b50\u7c7b\uff08\u8fd0\u884c\u7c7b\u578b\uff09\u627e\u8d77\u7684\u89c4\u5219\u3002\u5982\u679c\u5b50\u7c7b A \u627e\u4e0d\u5230\u53ef\u4ee5\u8c03\u7528\u7684\u65b9\u6cd5/\u5c5e\u6027\uff0c\u5219\u7ee7\u7eed\u5411\u4e0a\u627e\u5176\u7236\u7c7b B \u3002 \u591a\u6001\u7684\u5411\u4e0b\u8f6c\u578b \u00b6 [\u5b50\u7c7b\u7c7b\u578b] [\u5f15\u7528\u540d] = (\u5b50\u7c7b\u7c7b\u578b)\u7236\u7c7b\u5f15\u7528 \u53ea\u80fd\u5f3a\u5236\u8f6c\u6362\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u4e0d\u80fd\u5f3a\u8f6c\u7236\u7c7b\u5bf9\u8c61 \u4e14\u8981\u6c42\u7236\u7c7b\u5f15\u7528\u5728\u7f16\u8bd1\u65f6\u672c\u6765\u5c31\u6307\u5411\u8be5\u5b50\u7c7b\u5bf9\u8c61 1 2 3 4 5 6 7 // \u53ef\u4ee5 Animail animal = new Cat (); Cat cat = ( Cat ) animal ; // \u9519\u8bef Animail animal = new Cat (); Dog dog = ( Dog ) animal ; \u5bf9\u8c61\u591a\u6001\u65f6\uff0c\u65e0\u6cd5\u8c03\u7528\u57fa\u7c7b\u6ca1\u6709\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u8981\u8c03\u7528\uff0c\u53ef\u4ee5\u8fdb\u884c\u5411\u4e0b\u8f6c\u578b 1 2 3 4 5 6 7 8 9 10 11 12 13 class A { } class B extends A { void fun (){ } } class Main (){ public static void main ( String [] args ){ A a = new B (); if ( a instanceof B ){ (( B ) a ). fun (); // \u5f3a\u5236\u8f6c\u4e3aB\u7c7b\u578b } } } \u7f16\u8bd1\u7c7b\u578b\u4e0e\u8fd0\u884c\u7c7b\u578b \u00b6 \u7b49\u53f7\u5750\u6807\u4e3a\u7f16\u8bd1\u7c7b\u578b\uff0c\u7b49\u53f7\u53f3\u8fb9\u4e3a\u8fd0\u884c\u7c7b\u578b\u3002\u7f16\u8bd1\u7c7b\u578b\u4e0d\u53ef\u53d8\uff0c\u8fd0\u884c\u7c7b\u578b\u53ef\u53d8\u3002 instanceof \u00b6 \u5224\u65ad\u7684\u662f\u5bf9\u8c61\u7684 \u8fd0\u884c\u7c7b\u578b \u662f\u5426\u4e3a\u67d0\u4e2a\u7c7b\u578b/\u67d0\u7c7b\u578b\u7684\u5b50\u7c7b\u578b 1 2 3 4 5 6 7 8 9 // Cat \u7ee7\u627f Animal \u7c7b Animal animal = new Cat (); if ( animal instanceof Animal ){ System . out . println ( \"animal \u662f Animal\u7c7b\u578b\" ); // \u8f93\u51fa } if ( animal instanceof Cat ){ System . out . println ( \"animal \u662f Cat\" ); // \u8f93\u51fa } \uff08\u56db\uff09java\u7684\u52a8\u6001\u7ed1\u5b9a\u673a\u5236\u3010\u91cd\u70b9\u3011 \u00b6 \u89c6\u9891\u6559\u7a0b \u5b50\u7c7b\u7684\u5c5e\u6027\u65e0\u6cd5\u88ab\u7236\u7c7b\u5f15\u7528\u76f4\u63a5\u8bbf\u95ee\u5230\uff0c\u56e0\u4e3a\u5c5e\u6027\u662f\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u597d\u7684\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u4f7f\u7528 get \u65b9\u6cd5\u83b7\u53d6\u5c5e\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u8bbf\u95ee\u5b50\u7c7b\u5c5e\u6027\u7684\u9700\u8981\u3002 \u4f8b\u4e00\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 class A { int num = 10 ; } class B extends A { int num = 20 ; } class Index { public static void main ( String [] args ){ A a = new B (); System . out . println ( a . num ); // \u8f93\u51fa 10 } } \u6539\u8fdb\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class A { int num = 10 ; int getNum (){ return num ; } } class B extends A { int num = 20 ; int getNum (){ return num ; // \u4f7f\u7528\u52a8\u6001\u7ed1\u5b9a\u7684\u65b9\u6cd5\u53ef\u4ee5\u8bbf\u95ee\u5230\u5f53\u524d\u7c7b\u7684\u5c5e\u6027 } } class Index { public static void main ( String [] args ){ A a = new B (); System . out . println ( a . getNum ()); // \u8f93\u51fa 20 } } \u4f8b\u4e8c\uff1a \u901a\u8fc7\u591a\u6001\u5b9e\u73b0\u7684\u5bf9\u8c61\uff0c\u5728\u8bbf\u95ee\u65b9\u6cd5\u65f6\uff0c\u4f18\u5148\u8bbf\u95ee\u52a8\u6001\u7ed1\u5b9a\u7684\u7c7b\uff0c\u5982\u679c\u627e\u4e0d\u5230\u518d\u627e\u5176\u7236\u7c7b\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class A { int num = 10 ; int getNum () { return num ; } int cal (){ return getNum () * 10 ; } } class B extends A { int num = 20 ; int getNum () { return num ; } int cal (){ return getNum () + 10 ; } } class C extends B { int num = 30 ; int getNum () { return num ; } } class Index { public static void main ( String [] args ){ A c = new C (); System . out . println ( c . cal ()); // \u8f93\u51fa 40 \uff08B.cal() => C.getNum() + 10\uff09 } } // \u5982\u679cB\u7c7b\u4e5f\u6ca1\u6709cal\u65b9\u6cd5\uff0c\u5219\u8f93\u51fa 300 (A.cal() => C.getNum() * 10 => 300) // \u5982\u679cC\u7c7b\u6ca1\u6709getNum\u65b9\u6cd5\u3001B\u7c7b\u6ca1\u6709cal\u65b9\u6cd5\uff0c\u5219\u8f93\u51fa 200 (A.cal() => B.getNum() * 10 => 200) \u4e5d\u3001Object \u00b6 \uff08\u4e00\uff09equals() \u00b6 equals \u548c == \u533a\u522b\uff1a | \u6982\u5ff5 | \u57fa\u672c\u6570\u636e\u7c7b\u578b | \u5f15\u7528\u7c7b\u578b ---|---|---|--- == | \u6bd4\u8f83\u8fd0\u7b97\u7b26 | \u53ef\u4ee5\u4f7f\u7528 | \u53ef\u4ee5\u4f7f\u7528\uff0c\u6bd4\u8f83\u7684\u662f\u5730\u5740\u662f\u5426\u76f8\u7b49 equals() | Object \u65b9\u6cd5 | \u4e0d\u53ef\u4f7f\u7528 | \u53ef\u4ee5\u4f7f\u7528\uff0c\u9ed8\u8ba4\u7528 == \u5b9e\u73b0\uff0c\u82e5\u8981\u6bd4\u8f83\u5185\u5bb9\u76f8\u7b49\u9700\u8981\u8fdb\u884c\u91cd\u5199 equals()\u91cd\u5199\u6837\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 public boolean equals ( Object obj ){ if ( this == obj ) return true ; if ( obj instanceof [ \u7c7b\u578b ] ){ // obj\u662f\u5426\u4e3a[\u7c7b\u578b]\u6216\u8005\u5176\u5b50\u7c7b // ... \u5177\u4f53\u5c5e\u6027\u6bd4\u8f83 } else { return false ; } } \uff08\u4e8c\uff09toString() \u00b6 \u9ed8\u8ba4\u8fd4\u56de\u3010\u5168\u7c7b\u540d@\u5bf9\u8c61\u54c8\u5e0c\u503c\u7684\u5341\u516d\u8fdb\u5236\u3011 \u76f4\u63a5\u8f93\u51fa\u5bf9\u8c61\u65f6\uff0c toString \u65b9\u6cd5\u4f1a\u88ab\u9ed8\u8ba4\u8c03\u7528 \uff08\u4e09\uff09finalize() \u00b6 \u5bf9\u8c61\u88ab\u56de\u6536\u65f6\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528 \u6ce8\u610f\uff0c\u5783\u573e\u56de\u6536\u7684\u65f6\u95f4\u7531\u7cfb\u7edf\u81ea\u5df1\u51b3\u5b9a\uff0c\u5373\u4f7f\u624b\u52a8\u8c03\u7528 System.gc() \u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u6267\u884c \uff08\u56db\uff09\u4f8b\u9898 \u00b6 \u4f8b1\uff1a \u00b6 \u4f8b2\uff1a \u00b6 Student \u7ee7\u627f Person 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 // \u7236\u7c7b public class Person { public void run (){ System . out . println ( \"Person run()\" ); } public void eat (){ System . out . println ( \"Person eat()\" ); } } // \u5b50\u7c7b public class Student extends Person { @Override public void run () { System . out . println ( \"Student run()\" ); } public void study (){ System . out . println ( \"Student study()\" ); } } // main()\u6240\u5728\u5165\u53e3 public class Index { public static void main ( String [] args ) { // p\u4e0d\u80fd\u8bbf\u95eestudy()\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd0\u884c\u65f6\u624d\u80fd\u52a8\u6001\u7ed1\u5b9a\uff0c\u7f16\u8bd1\u65f6\u53ea\u80fd\u770b\u5230Person\u7c7b\u578b Person p = new Student (); p . run (); // Student p . eat (); // Person System . out . println ( \"====================\" ); Student s = ( Student ) p ; s . run (); // Student s . study (); // Student s . eat (); // Person } } \u7531\u7236\u7c7b Person \u5f15\u7528\u6307\u5411\u5b50\u7c7b Student \u5bf9\u8c61\uff0c\u5728\u7f16\u8bd1\u65f6\u65e0\u6cd5\u786e\u8ba4\u5176\u5b50\u7c7b\u7c7b\u578b\uff0c\u56e0\u6b64\u53ea\u80fd\u8bbf\u95ee\u5230\u7236\u7c7b Person \u62e5\u6709\u7684\u65b9\u6cd5 run() \u548c eat() \uff1b\u800c\u8fd0\u884c\u540e\u5b58\u5728\u52a8\u6001\u7ed1\u5b9a\u673a\u5236\uff0c\u56e0\u6b64\u6267\u884c\u4e86\u5b50\u7c7b\u7684 run() \u65b9\u6cd5\u3002 \u4f8b3\uff1a \u00b6 \u7ee7\u627f\u4e2d\u6784\u9020\u65b9\u6cd5\u7684\u6267\u884c\u987a\u5e8f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 // A\u7c7b public class A { public A () { // 6 System . out . println ( \"A\u7c7b\" ); // 7 } } // B\u7c7b public class B extends A { public B () { System . out . println ( \"B\u7c7b\" ); } public B ( String name ) { // 5 System . out . println ( name + \",B\u7c7b\u6709\u53c2\u6784\u9020\" ); // 8 } } // C\u7c7b public class C extends B { public C () { // 1 this ( \"hello\" ); // 2 System . out . println ( \"C\u7c7b\" ); // 10 } public C ( String name ) { // 3 super ( \"haha\" ); // 4 System . out . println ( \"C\u7c7b\u6709\u53c2\u6784\u9020\" ); // 9 } } /* main\u65b9\u6cd5\u4e2d\u6267\u884c C c = new C() ,\u8f93\u51fa\u4e3a\uff1a A\u7c7b haha,B\u7c7b\u6709\u53c2\u6784\u9020 C\u7c7b\u6709\u53c2\u6784\u9020 C\u7c7b */ \u5341\u3001static \u00b6 \u5e94\u7528\uff1a\u5355\u4f8b\u6a21\u5f0f \uff08\u4e00\uff09static\u53d8\u91cf \u00b6 \u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab static \u53d8\u91cf \u7c7b\u52a0\u8f7d\u65f6\u751f\u6210 static \u53d8\u91cf \u901a\u8fc7\u5bf9\u8c61\u540d\u548c\u7c7b\u540d\u5747\u53ef\u8bbf\u95ee \uff08\u4e8c\uff09static\u65b9\u6cd5 \u00b6 \u5f53\u65b9\u6cd5\u4e2d\u4e0d\u6d89\u53ca\u4efb\u4f55\u5b9e\u4f8b\u5bf9\u8c61\u65f6\uff0c\u9002\u5408\u4f7f\u7528 static \u4fee\u9970\uff0c\u5982\u5404\u79cd\u5de5\u5177\u7c7b static \u65b9\u6cd5\u4e2d\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u53d8\u91cf\u6216\u9759\u6001\u65b9\u6cd5\uff0c\u4e0d\u80fd\u51fa\u73b0\u548c\u5bf9\u8c61\u6709\u5173\u7684\u5173\u952e\u8bcd super \u3001 this \u7b49\uff1b\u975e\u9759\u6001\u65b9\u6cd5\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002 \uff08\u4e09\uff09main\u65b9\u6cd5 \u00b6 public static void main(String[] args){} \u7531 java \u865a\u62df\u673a\u8c03\u7528 \u7531\u4e8e java \u865a\u62df\u673a\u548c main \u6240\u5728\u7c7b\u4e0d\u5728\u540c\u4e00\u4e2a\u7c7b\u548c\u5305\uff0c\u56e0\u6b64\u8981\u58f0\u660e\u4e3a public String[] args \u4e3a\u6267\u884c\u7a0b\u5e8f\u65f6\u4f20\u5165\u7684\u53c2\u6570\u5217\u8868 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Hello { public static void main ( String [] args ){ for ( String i : args ){ System . out . println ( i ); } } } // \u6267\u884c\uff1a // javac Hello.java // java Hello A B C // \u8f93\u51fa: // A // B // C \uff08 idea \u4e2d\u53ef\u4ee5\u901a\u8fc7\u53f3\u4e0a\u89d2 Edit Configuration \u8bbe\u7f6e\u4f20\u5165\u53c2\u6570\uff09 \u5341\u4e00\u3001\u4ee3\u7801\u5757/\u521d\u59cb\u5316\u5757 \u00b6 \uff08\u4e00\uff09\u666e\u901a\u4ee3\u7801\u5757 \u00b6 1 2 3 { // \u4ee3\u7801... }; \uff08\u5206\u53f7\u53ef\u52a0\u53ef\u4e0d\u52a0\uff09 \u5982\u679c\u591a\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u90fd\u6709\u91cd\u590d\u7684\u8bed\u53e5\uff0c\u5219\u53ef\u4ee5\u628a\u5b83\u4eec\u62bd\u79bb\u5230\u521d\u59cb\u5316\u5757\u4e2d \u521d\u59cb\u5316\u5757\u7684\u8c03\u7528\u987a\u5e8f\u4f18\u5148\u4e8e\u6784\u9020\u5668 \u666e\u901a\u4ee3\u7801\u5757\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u8c03\u7528\uff0c\u521b\u5efa\u4e00\u6b21\u5c31\u8c03\u7528\u4e00\u6b21\uff0c\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u6210\u5458\u4e0d\u4f1a\u6267\u884c\u5b83 \uff08\u4e8c\uff09\u9759\u6001\u4ee3\u7801\u5757 \u00b6 1 2 3 static { < \u4ee3\u7801 > }; \u9759\u6001\u4ee3\u7801\u5757\u5728\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\u6267\u884c\uff0c\u4e14\u53ea\u4f1a\u88ab\u6267\u884c\u4e00\u6b21 \u9759\u6001\u4ee3\u7801\u5757\u53ea\u80fd\u8c03\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u65b9\u6cd5 \uff08\u4e09\uff09\u7c7b\u52a0\u8f7d\u7684\u65f6\u673a \u00b6 \u521b\u5efa\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6 \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7236\u7c7b\u5148\u88ab\u52a0\u8f7d\uff0c\u5176\u6b21\u662f\u5b50\u7c7b \u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u3001\u65b9\u6cd5\u65f6 \u7c7b\u52a0\u8f7d\u53ea\u4f1a\u6267\u884c\u4e00\u6b21 \uff08\u56db\uff09\u4ee3\u7801\u8c03\u7528\u987a\u5e8f \u00b6 1. \u666e\u901a\u7c7b\u4e2d\u7684\u8c03\u7528\u987a\u5e8f \u00b6 \u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u4ee3\u7801\u5757 \u666e\u901a\u53d8\u91cf\u548c\u666e\u901a\u4ee3\u7801\u5757 \u6784\u9020\u5668 \uff08\u9759\u6001\uff09\u53d8\u91cf\u548c\uff08\u9759\u6001\uff09\u4ee3\u7801\u5757\u7684\u6267\u884c\u987a\u5e8f\uff0c\u4e0e\u4ee3\u7801\u4e66\u5199\u7684\u987a\u5e8f\u4e00\u81f4\u3002\u5728\uff08\u9759\u6001\uff09\u4ee3\u7801\u5757\u4e2d\u53ef\u4ee5\u4f7f\u7528\uff08\u9759\u6001\uff09\u53d8\u91cf\uff0c\u4f46\u662f\u5b83\u5fc5\u987b\u5728\uff08\u9759\u6001\uff09\u4ee3\u7801\u5757\u524d\u58f0\u660e\u3002 2. \u5b58\u5728\u7ee7\u627f\u5173\u7cfb\u7684\u4ee3\u7801\u8c03\u7528\u987a\u5e8f \u00b6 \u7236\u7c7b\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u4ee3\u7801\u5757 \u5b50\u7c7b\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u4ee3\u7801\u5757 \u7236\u7c7b\u666e\u901a\u53d8\u91cf\u548c\u666e\u901a\u4ee3\u7801\u5757 \u7236\u7c7b\u6784\u9020\u5668 \u5b50\u7c7b\u666e\u901a\u53d8\u91cf\u548c\u666e\u901a\u4ee3\u7801\u5757 \u5b50\u7c7b\u6784\u9020\u5668 \u4e4b\u6240\u4ee5\u662f\u8fd9\u79cd\u987a\u5e8f\uff0c\u662f\u56e0\u4e3a \u6784\u9020\u5668\u7684\u5f00\u5934\u5176\u5b9e\u9690\u85cf\u4e86 super() \u548c\u666e\u901a\u4ee3\u7801\u5757\u7684\u8c03\u7528\uff1a 1 2 3 4 5 6 7 class A { public A (){ // super(); 1 // \u8c03\u7528\u666e\u901a\u4ee3\u7801\u5757 2 System . out . println ( \"ok\" ) // 3 } } \u5341\u4e8c\u3001final \u00b6 \u9002\u7528\u8303\u56f4\uff1a \u4e0d\u5e0c\u671b\u67d0\u4e2a\u7c7b\u88ab\u7ee7\u627f \u4e0d\u5e0c\u671b\u67d0\u4e2a\u65b9\u6cd5\u88ab\u5b50\u7c7b\u91cd\u5199\uff08\u8986\u76d6\uff09 \u4e0d\u5e0c\u671b\u67d0\u4e2a\u5c5e\u6027\uff08\u6210\u5458\u53d8\u91cf\uff09\u88ab\u4fee\u6539 \u4e0d\u5e0c\u671b\u67d0\u4e2a\u5c40\u90e8\u53d8\u91cf\u88ab\u4fee\u6539 \u6ce8\u610f final \u4fee\u9970\u7684\u5c5e\u6027\u5fc5\u987b\u8d4b\u521d\u503c\uff1a\u5b9a\u4e49\u65f6\u3001\u6784\u9020\u5668\uff08\u9759\u6001\u5c5e\u6027\u9664\u5916\uff09\u3001\u666e\u901a/\u9759\u6001\u521d\u59cb\u5316\u5757\u4e2d\u3002 final \u7c7b\u6ca1\u5fc5\u8981\u5728\u5199 final \u65b9\u6cd5 final \u4e0d\u80fd\u4fee\u9970\u6784\u9020\u5668 final \u5f80\u5f80\u548c static \u914d\u5408\u4f7f\u7528\uff0c\u5e95\u5c42\u7f16\u8bd1\u5668\u505a\u51fa\u4e86\u4f18\u5316\u5904\u7406\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u7c7b\u52a0\u8f7d\uff0c\u4f1a\u66f4\u5feb\u3002 1 2 3 4 5 6 7 8 public class A { public final static int n = 10 ; static { System . out . println ( \"\u9759\u6001\u521d\u59cb\u5316\u5757\uff01\" ); } } // \u8c03\u7528A.n\uff0c\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa","title":"Java\u57fa\u7840"},{"location":"Java%E5%9F%BA%E7%A1%80/#java","text":"","title":"\u4e00\u3001Java\u5f00\u53d1\u7ec6\u8282"},{"location":"Java%E5%9F%BA%E7%A1%80/#_1","text":"\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a public \u7c7b\uff0c\u4e14\u8be5\u7c7b\u540d\u79f0\u5fc5\u987b\u548c\u6587\u4ef6\u4e00\u81f4\u3002 \u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u975e public \u7684\u7c7b\uff0c\u8fd9\u4e9b java \u7c7b\u4e2d\u5747\u53ef\u4ee5\u5199 main \u65b9\u6cd5\uff0c\u7528 javac \u7f16\u8bd1\u540e\u4f1a\u751f\u6210\u591a\u4e2a class \u6587\u4ef6\uff0c\u53ef\u4ee5\u5206\u522b\u8fd0\u884c\u3002","title":"\uff08\u4e00\uff09\u6ce8\u610f\u4e8b\u9879"},{"location":"Java%E5%9F%BA%E7%A1%80/#_2","text":"","title":"\uff08\u4e8c\uff09\u5b66\u4e60\u65b9\u6cd5"},{"location":"Java%E5%9F%BA%E7%A1%80/#1","text":"\u5de5\u4f5c\u9700\u8981 \u8df3\u69fd \u5e73\u65f6\u5b66\u65b0\u6280\u672f","title":"1. \u9700\u8981\u5b66\u4e60\u7684\u60c5\u51b5"},{"location":"Java%E5%9F%BA%E7%A1%80/#2","text":"\u7528 \u4f20\u7edf\u6280\u672f\u8003\u8651 \u662f\u5426\u80fd\u89e3\u51b3\u5de5\u4f5c\u9700\u8981\uff0c\u82e5\u89e3\u51b3\u4e0d\u4e86\u6216\u4e0d\u5b8c\u7f8e\uff0c\u518d\u627e\u65b0\u6280\u672f\u5bf9\u6bd4\u5e76\u89e3\u51b3\u3002 \u505a\u597d\u8c03\u7814\uff0c\u8981\u77e5\u9053\u65b0\u6280\u672f \u80fd\u591f\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898 \uff0c \u6539\u8fdb \u5728\u54ea\uff0c\u80fd\u5e26\u6765\u4ec0\u4e48 \u4f18\u52bf \uff1f\u76f8\u5e94\u7684 \u7f3a\u70b9 \u53c8\u662f\u4ec0\u4e48\uff1f \u5b66\u4e60\u65b0\u6280\u672f\u65f6\uff0c \u4e0d\u8981\u53bb\u592a\u94bb\u7814\u7ec6\u8282 \uff0c\u8981\u5148\u628a \u57fa\u672c\u539f\u7406 \u548c \u8bed\u6cd5 \u5f04\u61c2\u3002 \u7528\u5b66\u5230\u7684\u57fa\u672c\u539f\u7406\u5b9e\u73b0\u4e2a \u5feb\u901f\u5165\u95e8\u7684\u5c0f\u9879\u76ee \uff08\u5982\uff1a\u589e\u5220\u6539\u67e5\uff09\uff0c\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684\u5de5\u4f5c\u9700\u6c42\u4e86\u3002 \u6700\u540e\uff0c\u518d\u7814\u7a76 \u6280\u672f\u7684\u7ec6\u8282\u3001\u89c4\u8303\u3001\u5982\u4f55\u4f18\u5316 \u7b49\uff08\u8fd9\u90e8\u5206\u662f\u6c38\u65e0\u6b62\u5883\u7684\uff09","title":"2. \u8981\u70b9"},{"location":"Java%E5%9F%BA%E7%A1%80/#intellij-idea","text":"","title":"\uff08\u4e09\uff09Intellij Idea"},{"location":"Java%E5%9F%BA%E7%A1%80/#1_1","text":"file -> setting -> editor -> keymap \u53ef\u67e5\u770b/\u4fee\u6539 \u5feb\u6377\u952e \u529f\u80fd Ctrl+Alt+L \u683c\u5f0f\u5316 Ctrl+Y \u5220\u9664\u5f53\u524d\u884c Alt+Enter \u5bfc\u5165\u4f9d\u8d56\u5305 Ctrl+D \u590d\u5236\u5f53\u524d\u884c Ctrl+F \u67e5\u627e Ctrl+R \u66ff\u6362 Alt+Insert \u63d2\u5165\u6784\u9020\u5668\u7b49 Ctrl+H \u67e5\u770b\u7c7b\u7ed3\u6784 Ctrl+B\u6216\u9f20\u6807\u5de6\u952e \u5b9a\u4f4d\u7c7b/\u65b9\u6cd5/\u53d8\u91cf\u7684\u5b9a\u4e49\u5904 F7 \u8df3\u5165\uff08\u8fdb\u5165\u65b9\u6cd5\uff09 F8 \u8df3\u8fc7\uff08\u6267\u884c\u8bed\u53e5\uff0c\u4e0d\u8fdb\u5165\u65b9\u6cd5\uff09 shift+F8 \u8df3\u51fa\uff08\u8df3\u51fa\u65b9\u6cd5\uff09 F9 \u6267\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9 \u9009\u4e2d\u4ee3\u7801\u6bb5\uff0cCtrl+Alt+T \u6dfb\u52a0 if-else \u3001 try-catch \u3001 while \u7b49 Surround With \u5757 Ctrl+J \u663e\u793a\u6240\u6709\u5feb\u6377\u952e Ctrl+G \u5149\u6807\u5feb\u901f\u8df3\u8dc3\u5230\u6307\u5b9a\u884c","title":"1. \u5feb\u6377\u952e"},{"location":"Java%E5%9F%BA%E7%A1%80/#2_1","text":"file -> setting -> editor -> Live templates \u53ef\u67e5\u770b/\u4fee\u6539 \u7c7b\u3001\u53d8\u91cf \u542b\u4e49 main public static void main(String[] args) geti public static getInstance() psf[i/s] public static final [int/String] prsf private static final lst args[args.length - 1] new Object().var \u81ea\u52a8\u521b\u5efa\u53d8\u91cf\u540d \u8f93\u51fa \u542b\u4e49 sout System.out.println(); soutv System.out.println(\"args = \" + args); souf System.out.printf(\"\"); serr System.err.println(); \u5faa\u73af \u542b\u4e49 fori for(int i=0;i<;i++) \u5927\u5199i \u589e\u5f3a\u7248for\u5faa\u73af\uff1afor(Object obj: ) iter for (String arg : args) itar for (int i = 0; i < args.length; i++) ritar for (int i = args.length - 1; i >= 0; i--) { itli for (int i = 0; i < list.size(); i++) itco for (Iterator iterator = collection.iterator(); iterator.hasNext(); ) \u5176\u4ed6 \u542b\u4e49 ifn if (args == null) inn if (args != null) mn = Math.min(, ); mx = Math.max(, ); toar .toArray(new Object[0]) thr throw new tryc try...catch trycf try...catch...finally RL .readLock().lock(); WL .writeLock.lock();","title":"2. \u6a21\u677f"},{"location":"Java%E5%9F%BA%E7%A1%80/#java_1","text":"","title":"\u4e8c\u3001Java\u57fa\u7840"},{"location":"Java%E5%9F%BA%E7%A1%80/#_3","text":"\u5b57\u7b26 \u542b\u4e49 \\t \u5236\u8868\u7b26\uff0c\u5b9e\u73b0 tab \u5bf9\u9f50\u529f\u80fd \\n \u6362\u884c\u7b26 \\r \u56de\u8f66\u7b26\uff0c\u56de\u5230\u884c\u9996\uff08\u4e4b\u540e\u518d\u8f93\u5165\u5185\u5bb9\u4f1a\u76f4\u63a5\u66ff\u6362\u672c\u884c\u539f\u6709\u5b57\u7b26\uff09 \\\\ \\ \\\" \" \\' ' \\r \u548c \\r\\n \u6548\u679c\u4e00\u81f4\uff0c\u90fd\u662f\u6362\u884c","title":"\uff08\u4e00\uff09\u8f6c\u4e49\u5b57\u7b26"},{"location":"Java%E5%9F%BA%E7%A1%80/#_4","text":"\u5355\u884c\u6ce8\u91ca\uff1a 1 // \u6ce8\u91ca\u6587\u5b57 \u591a\u884c\u6ce8\u91ca\uff1a 1 2 3 4 /* \u6ce8\u91ca \u6587\u5b57 */ \u6587\u6863\u6ce8\u91ca\uff1a 1 2 3 4 /** * @author WOC_BUG * @version 1.0 */ \u6ce8\u91ca\u5185\u5bb9\u53ef\u4ee5\u7528 javadoc \u5de5\u5177\u751f\u6210\u8bf4\u660e\u6587\u6863\uff1a 1 javadoc -d [\u8def\u5f84] -[\u6587\u6863\u4e2d\u52a0\u8fc7\u7684doc\u5b57\u6bb5] [\u6587\u4ef6\u540d].java \u4f8b\uff1a","title":"\uff08\u4e8c\uff09\u6ce8\u91ca"},{"location":"Java%E5%9F%BA%E7%A1%80/#_5","text":"\u6807\u7b7e \u63cf\u8ff0 @author \u6807\u8bc6\u4e00\u4e2a\u7c7b\u7684\u4f5c\u8005 @deprecated \u6307\u540d\u4e00\u4e2a\u8fc7\u671f\u7684\u7c7b\u6216\u6210\u5458 {@docRoot} \u6307\u660e\u5f53\u524d\u6587\u6863\u6839\u76ee\u5f55\u7684\u8def\u5f84 @exception \u6807\u5fd7\u4e00\u4e2a\u7c7b\u629b\u51fa\u7684\u5f02\u5e38 {@inheritDoc} \u4ece\u76f4\u63a5\u7236\u7c7b\u7ee7\u627f\u7684\u6ce8\u91ca {@link} \u63d2\u5165\u4e00\u4e2a\u5230\u53e6\u4e00\u4e2a\u4e3b\u9898\u7684\u94fe\u63a5 {@linkplain} \u63d2\u5165\u4e00\u4e2a\u5230\u53e6\u4e00\u4e2a\u4e3b\u9898\u7684\u94fe\u63a5\uff0c\u4f46\u662f\u8be5\u94fe\u63a5\u663e\u793a\u7eaf\u6587\u672c\u5b57\u4f53 @param \u8bf4\u660e\u4e00\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570 @return \u8bf4\u660e\u8fd4\u56de\u503c\u7c7b\u578b @see \u6307\u5b9a\u4e00\u4e2a\u5230\u53e6\u4e00\u4e2a\u4e3b\u9898\u7684\u94fe\u63a5 @serial \u8bf4\u660e\u4e00\u4e2a\u5e8f\u5217\u5316\u5c5e\u6027 @serialData \u8bf4\u660e\u901a\u8fc7 writeObject() \u548c writeExternal() \u65b9\u6cd5\u5199\u7684\u6570\u636e @serialField \u8bf4\u660e\u4e00\u4e2a ObjectStreamField \u7ec4\u4ef6 @since \u6807\u8bb0\u5f53\u5f15\u5165\u4e00\u4e2a\u7279\u5b9a\u7684\u53d8\u5316\u65f6 @throws \u548c @exception \u6807\u7b7e\u4e00\u6837. {@value} \u663e\u793a\u5e38\u91cf\u7684\u503c\uff0c\u8be5\u5e38\u91cf\u5fc5\u987b\u662f static \u5c5e\u6027\u3002 @version \u6307\u5b9a\u7c7b\u7684\u7248\u672c","title":"\uff08\u4e09\uff09\u6587\u6863\u6ce8\u91ca\u5e38\u7528\u6807\u7b7e"},{"location":"Java%E5%9F%BA%E7%A1%80/#doswindows","text":"\u547d\u4ee4 \u542b\u4e49 dir \u76ee\u5f55 tree \u76ee\u5f55\u6811 cd \u5207\u6362\u76ee\u5f55 cd /D c: \u4eceD\u76d8\u5207\u6362\u81f3C\u76d8\u6839\u76ee\u5f55 d:/abc/text.txt \u6216 d:\\\\abc\\\\text.txt \u7edd\u5bf9\u8def\u5f84 ../../text.txt \u6216 ..\\\\..\\\\text.txt \u76f8\u5bf9\u8def\u5f84 cls \u6e05\u5c4f(\u82cd\u8001\u5e08) exit \u9000\u51fa md \u521b\u5efa\u76ee\u5f55 rm \u5220\u9664\u76ee\u5f55 copy \u62f7\u8d1d\u6587\u4ef6 echo \u5411\u6587\u4ef6\u8f93\u5165\u5185\u5bb9 type \u521b\u5efa\u6587\u4ef6 move \u526a\u5207","title":"\uff08\u56db\uff09DOS\u547d\u4ee4\uff08Windows\uff09"},{"location":"Java%E5%9F%BA%E7%A1%80/#jdkjrejvm","text":"JDK = JRE + java \u5f00\u53d1\u5de5\u5177 JRE = JVM + java \u6838\u5fc3\u7c7b\u5e93","title":"\uff08\u4e94\uff09JDK\u3001JRE\u3001JVM\u7684\u5173\u7cfb"},{"location":"Java%E5%9F%BA%E7%A1%80/#java_2","text":"\u7f16\u5199 Java \u6e90\u7801 javac \u7f16\u8bd1\u6210 .class \u5b57\u8282\u7801\u6587\u4ef6 java \u8fd0\u884c\uff0c\u5373\u5c06 .class \u6587\u4ef6\u52a0\u8f7d\u5230 jvm \u8fd0\u884c","title":"\uff08\u516d\uff09Java\u7f16\u5199\u8fc7\u7a0b"},{"location":"Java%E5%9F%BA%E7%A1%80/#java_3","text":"","title":"\u4e09\u3001Java\u53d8\u91cf"},{"location":"Java%E5%9F%BA%E7%A1%80/#_6","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b \u5b57\u8282 \u7ec6\u8282 \u8303\u56f4 \u9ed8\u8ba4\u503c byte 1 -2^7 -2^7 ~ 2^7-1 2^7-1 (byte)0 short 2 -2^{15} -2^{15} ~ 2^{15}-1 2^{15}-1 (short)0 int 4 -2^{31} -2^{31} ~ 2^{31}-1 2^{31}-1 0 long 8 \u6570\u636e\u540e\u9762 \u5efa\u8bae \u52a0 l \u6216 L -2^{63} -2^{63} ~ 2^{63}-1 2^{63}-1 0L float 4\uff08\u7b26\u53f7\u4f4d+\u6307\u6570\u4f4d+\u4f4d\u6570\u4f4d\uff09 \u6570\u636e\u540e\u9762 \u5fc5\u987b \u52a0 f \u6216 F -3.403E38 -3.403E38 ~ 3.403E38 3.403E38 0.0f double 8\uff08\u7b26\u53f7\u4f4d+\u6307\u6570\u4f4d+\u4f4d\u6570\u4f4d\uff09 \u6ce8\u610f\u6bd4\u8f83/\u8fd0\u7b97\u7684\u7cbe\u5ea6\u95ee\u9898 -1.798E308 -1.798E308 ~ 1.798E308 1.798E308 0.0d char 2\uff08Unicode\u7f16\u7801\uff09 -2^{15} -2^{15} ~ 2^{15}-1 2^{15}-1 '\\u0000'\u5373null boolean 1 \u6216 4 \uff08\u6709\u5f85\u8003\u8bc1\uff09 0 0 \u3001 1 1 false \u5168\u5c40\u53d8\u91cf\uff08\u5373\u5c5e\u6027\uff09\u6709\u9ed8\u8ba4\u503c\uff0c\u800c\u5c40\u90e8\u53d8\u91cf\u4e0d\u4f1a\u88ab\u81ea\u52a8\u521d\u59cb\u5316 \u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u91cd\u540d\uff0c\u8bbf\u95ee\u65f6\u9075\u5faa\u5c31\u8fd1\u539f\u5219 1 2 3 4 5 6 7 8 9 class Person { String name = \"Bob\" ; void setName (){ String name = \"Alice\" ; System . out . println ( name ); } } // \u8f93\u51fa\uff1aAlice \u5f15\u7528\u6570\u636e\u7c7b\u578b \u5b57\u8282 \u7c7b \u63a5\u53e3 \u6570\u7ec4","title":"\uff08\u4e00\uff09\u53d8\u91cf"},{"location":"Java%E5%9F%BA%E7%A1%80/#_7","text":"+\u53f7\u524d\u540e\u90fd\u662f\u6570\u503c\u7c7b\u578b\uff0c\u505a\u8fd0\u7b97 +\u53f7\u524d\u540e\u6709\u5b57\u7b26\u7c7b\u578b\uff0c\u505a\u62fc\u63a5","title":"+\u53f7\u7684\u4f7f\u7528"},{"location":"Java%E5%9F%BA%E7%A1%80/#_8","text":"","title":"\u5b57\u7b26"},{"location":"Java%E5%9F%BA%E7%A1%80/#boolean","text":"Java \u4e2d\u4e0d\u80fd\u7528 0 \u6216\u975e 0 \u7684\u6570\u5b57\u4ee3\u8868 true \u6216 false","title":"Boolean"},{"location":"Java%E5%9F%BA%E7%A1%80/#_9","text":"\u4ece\u4f4e\u7cbe\u5ea6\u5230\u9ad8\u7cbe\u5ea6\u80fd\u591f\u81ea\u52a8\u8f6c\u6362\uff1a char -> int -> long -> float -> double byte -> short -> int -> long -> float -> double \u4e3a\u4ec0\u4e48 long \u80fd\u81ea\u52a8\u8f6c\u6362\u4e3a float ? float \u4e2d\u67098\u4f4d\u8868\u793a\u6307\u6570\u300123\u4f4d\u8868\u793a\u5c3e\u6570\uff0c\u8303\u56f4\u662f 2^{127} 2^{127} \uff08 127 \u662f\u56e0\u4e3a\u6307\u6570\u4e0d\u80fd\u4e3a\u8d1f\u6570\uff09\uff1b long \u7684\u8303\u56f4\u662f 2^{64} 2^{64} \uff1b \u56e0\u6b64 float \u8303\u56f4\u8fdc\u5927\u4e8e long \u3002 \u591a\u79cd\u6570\u636e\u7c7b\u578b\u6df7\u5408\u8fd0\u7b97\u65f6\uff0c\u9996\u5148\u4f1a\u8f6c\u6362\u6210\u5bb9\u91cf\u6700\u5927\u7684\u6570\u636e\u7c7b\u578b 1 2 3 int n1 = 10 ; float n2 = n1 + 1.1 ; // \u9519\u8bef // \u56e0\u4e3a 1.1 \u662f double \u7c7b\u578b\uff0c n1 \u4f1a\u4ece int \u8f6c\u6362\u4e3a double \uff0cn1 + 1.1 \u7684\u7ed3\u679c\u662f double\uff0c\u65e0\u6cd5\u81ea\u52a8\u8f6c\u6362\u6210 float \uff08 byte \uff0c short \uff09\u4e0e char \u4e0d\u80fd\u76f8\u4e92\u8f6c\u6362 byte \u3001 short \u3001 char \u4e09\u8005\u53ef\u4ee5\u8fd0\u7b97\uff0c\u4e0d\u7ba1\u5b83\u4eec\u662f\u5355\u72ec\u8fd0\u7b97\u8fd8\u662f\u6df7\u5408\u8fd0\u7b97\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u90fd\u4f1a\u9996\u5148\u8f6c\u4e3a int \u5355\u72ec\u8fd0\u7b97\uff1a 1 2 3 4 byte b1 = 1 ; byte b2 = 2 ; byte b3 = b1 + b2 ; // \u9519\u8bef // b1 + b2 \u4f1a\u8f6c\u4e3a int \u6df7\u5408\u8fd0\u7b97\uff1a 1 2 3 4 byte b1 = 1 ; short s1 = 1 ; short s2 = b1 + s1 ; // \u9519\u8bef // b1 + s1 \u9996\u5148\u4f1a\u8f6c\u4e3a int boolean \u4e0d\u53c2\u4e0e\u7c7b\u578b\u7684\u81ea\u52a8\u8f6c\u6362 char \u7c7b\u578b\u53ea\u80fd\u4fdd\u5b58 int \u7c7b\u578b\u7684\u5e38\u91cf\u503c\uff0c\u4e0d\u80fd\u4fdd\u5b58\u53d8\u91cf\u503c 1 2 3 4 char c1 = 97 ; // \u6b63\u786e int n1 = 97 ; char c2 = n1 ; // \u9519\u8bef // int \u7684\u8303\u56f4\u6bd4 char \u5927","title":"\uff08\u4e8c\uff09\u7c7b\u578b\u8f6c\u6362"},{"location":"Java%E5%9F%BA%E7%A1%80/#_10","text":"","title":"\uff08\u4e09\uff09\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e60\u9898"},{"location":"Java%E5%9F%BA%E7%A1%80/#1_2","text":"","title":"\u4e60\u98981"},{"location":"Java%E5%9F%BA%E7%A1%80/#2_2","text":"\u5b57\u7b26\u76f8\u52a0\u5f97\u5230\u7684\u662f\u5176\u5b57\u7b26\u7801\u503c\u76f8\u52a0\u7684\u548c","title":"\u4e60\u98982"},{"location":"Java%E5%9F%BA%E7%A1%80/#string","text":"","title":"\uff08\u56db\uff09String"},{"location":"Java%E5%9F%BA%E7%A1%80/#string_1","text":"","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6cString"},{"location":"Java%E5%9F%BA%E7%A1%80/#string_2","text":"","title":"String\u8f6c\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"Java%E5%9F%BA%E7%A1%80/#_11","text":"\u53d8\u91cf\u4e4b\u95f4\u5b9a\u4e49\u7684\u5148\u540e\u987a\u5e8f\uff0c\u51b3\u5b9a\u4e86\u521d\u59cb\u5316\u987a\u5e8f \u5373\u4f7f\u53d8\u91cf\u5b9a\u4e49\u5206\u6563\u5728\u65b9\u6cd5\u4e4b\u95f4\uff0c\u4ed6\u4eec\u4ecd\u7136\u5728\u4efb\u4f55\u65b9\u6cd5\uff08\u5305\u62ec\u6784\u9020\u5668\uff09\u4e4b\u524d\u88ab\u521d\u59cb\u5316\u3002","title":"\uff08\u4e94\uff09\u53d8\u91cf\u521d\u59cb\u5316\u987a\u5e8f"},{"location":"Java%E5%9F%BA%E7%A1%80/#_12","text":"","title":"\u56db\u3001\u8fd0\u7b97\u7b26"},{"location":"Java%E5%9F%BA%E7%A1%80/#_13","text":"","title":"\uff08\u4e00\uff09\u7b97\u672f\u8fd0\u7b97\u7b26"},{"location":"Java%E5%9F%BA%E7%A1%80/#_14","text":"1 2 3 4 5 6 System . out . println ( 10 / 4 ); // 2 System . out . println ( 10.0 / 4 ); // 2.5 System . out . println ( 10 / 4.0 ); // 2.5 double ans = 10 / 4 ; // 10/4\u5f972\uff0c\u518d\u8f6c\u4e3adouble\u4e3a2.0 System . out . println ( ans ); // 2.0","title":"\u9664\u6cd5/"},{"location":"Java%E5%9F%BA%E7%A1%80/#_15","text":"a a % b b = a - a / b * b a - a / b * b 1 2 3 4 5 System . out . println ( 10 % 3 ); // 1 System . out . println ( - 10 % 3 ); // -1 System . out . println ( 10 % - 3 ); // 1 System . out . println ( - 10 % - 3 ); // -1 // \u7b26\u53f7\u968f\u88ab\u9664\u6570\u7684\u6b63\u8d1f\u53d8\u5316 \u5f53 a \u662f\u5c0f\u6570\u65f6\uff1a a a % b b = a - (int) a / b * b a - (int) a / b * b 1 2 3 4 5 System . out . println ( - 10.5 % 3 ); // -1.5 - 10.5 - ( int )( - 10.5 ) / 3 * 3 = - 10.5 - ( - 10 ) / 3 * 3 = - 10.5 + 9 = - 1.5","title":"\u53d6\u6a21%"},{"location":"Java%E5%9F%BA%E7%A1%80/#_16","text":"i = i++ 1 2 3 4 5 6 7 int i = 1 ; i = i ++ ; // \u2460 tmp = i; // \u2461 i = i + 1; // \u2462 return tmp; // \u2463 i = tmp; System . out . println ( i ); // 1 i = ++i 1 2 3 4 5 6 int i = 1 ; i = ++ i ; // \u2460 i = i + 1; // \u2461 return i; // \u2462 i = i; System . out . println ( i ); // 2","title":"\u81ea\u589e++"},{"location":"Java%E5%9F%BA%E7%A1%80/#_17","text":"","title":"\uff08\u4e8c\uff09\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"Java%E5%9F%BA%E7%A1%80/#_18","text":"a && b \uff1a\u82e5 a \u4e3a\u5047\uff0c\u5219\u4e0d\u4f1a\u6267\u884c/\u5224\u65ad b a & b \uff1a\u82e5 a \u4e3a\u5047\uff0c\u4f9d\u65e7\u4f1a\u6267\u884c\u548c\u5224\u65ad b 1 2 3 4 5 6 7 8 9 int a = 10 ; int b = 20 ; if ( a > 100 && ++ b < 100 ){ System . out . println ( \"true\" ); } System . out . println ( \"a = \" + a + \",b = \" + b ); // \u8f93\u51fa\uff1a // a = 10,b = 20 1 2 3 4 5 6 7 8 9 int a = 10 ; int b = 20 ; if ( a > 100 & ++ b < 100 ){ System . out . println ( \"true\" ); } System . out . println ( \"a = \" + a + \",b = \" + b ); // \u8f93\u51fa\uff1a // a = 10,b = 21","title":"&amp;&amp;\u548c&amp;"},{"location":"Java%E5%9F%BA%E7%A1%80/#_19","text":"\u540c\u7406 a || b \uff1a\u82e5 a \u4e3a\u771f\uff0c\u5219\u4e0d\u4f1a\u6267\u884c/\u5224\u65ad b a | b \uff1a\u82e5 a \u4e3a\u771f\uff0c\u4f9d\u65e7\u4f1a\u6267\u884c\u548c\u5224\u65ad b","title":"||\u548c|"},{"location":"Java%E5%9F%BA%E7%A1%80/#_20","text":"","title":"\uff08\u4e09\uff09\u590d\u5408\u8fd0\u7b97"},{"location":"Java%E5%9F%BA%E7%A1%80/#_21","text":"\u590d\u5408\u8fd0\u7b97\u4f1a\u81ea\u52a8\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 1 2 3 4 byte a = 4 ; a += 2 ; // \u76f8\u5f53\u4e8e a = (byte)(a + 2) a ++ ; // \u76f8\u5f53\u4e8e a = (byte)(a + 1) // \u800c\u76f4\u63a5 a = a + 2\u624d\u662f\u9519\u7684\uff0c\u56e0\u4e3a2\u662fint\u7c7b\u578b","title":"+=\u3001++\u7b49"},{"location":"Java%E5%9F%BA%E7%A1%80/#_22","text":"\u6ce8\u610f\uff1a \u8d4b\u503c\u8bed\u53e5\u7684\u7ed3\u679c\u5e76\u4e0d\u662f\u6c38\u771f\uff0c\u800c\u662f\u8981\u5224\u65ad\u8d4b\u503c\u64cd\u4f5c\u540e\u7684\u7ed3\u679c\u503c\u7684 1 2 3 4 5 6 7 8 boolean x = false , y = true ; if ( x = true ){ // \u771f // ... } if ( y = false ){ // \u5047 // ... }","title":"\uff08\u56db\uff09\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u7ed3\u679c"},{"location":"Java%E5%9F%BA%E7%A1%80/#_23","text":"","title":"\uff08\u4e94\uff09\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7"},{"location":"Java%E5%9F%BA%E7%A1%80/#_24","text":"0 0 \u548c\u6b63\u6570\u7684\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\u90fd\u662f\u5b83\u672c\u8eab \u8d1f\u6570\u7684\u53cd\u7801 = \u5176\u539f\u7801 \u7b26\u53f7\u4f4d\u4e0d\u53d8 \uff0c\u5176\u5b83\u4f4d\u53d6\u53cd = \u5176\u8865\u7801 - 1 \u8d1f\u6570\u7684\u8865\u7801 = \u5176\u53cd\u7801 + 1 java \u4e2d\u7684\u6570\u90fd\u662f\u6709\u7b26\u53f7\u7684 \u8fd0\u7b97\u65f6\u8981\u7528\u8865\u7801\u8fd0\u7b97\uff0c\u770b\u7ed3\u679c\u8981\u7528\u6e90\u7801\u770b \u4f8b\u98981\uff0c\u6c42 ~-2 \u200b\uff1a -2 -2 \u539f\u7801\uff1a 10000000 00000000 00000000 00000010 -2 -2 \u53cd\u7801\uff1a 11111111 11111111 11111111 11111101 -2 -2 \u8865\u7801\uff1a 11111111 11111111 11111111 11111110 ~ -2 -2 \u8865\u7801\uff1a00000000 00000000 00000000 00000001 ~ -2 -2 \u539f\u7801\uff1a00000000 00000000 00000000 00000001 \u7b54\u6848\uff1a 1 1 \u4f8b\u98982\uff0c\u6c42 ~2: 2 2 \u539f\u7801\uff1a 00000000 00000000 00000000 00000010 2 2 \u8865\u7801\uff1a 00000000 00000000 00000000 00000010 ~ 2 2 \u8865\u7801\uff1a11111111 11111111 11111111 11111101 ~ 2 2 \u539f\u7801\uff1a10000000 00000000 00000000 00000011 \u7b54\u6848\uff1a -3 -3 \u6ce8\u610f\uff1a \u7b26\u53f7\u4f4d\u4e5f\u53c2\u4e0e\u4f4d\u8fd0\u7b97 \u8ba1\u7b97\u53cd\u7801\u4e0d\u5305\u62ec\u7b26\u53f7\u4f4d","title":"\uff08\u516d\uff09\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801"},{"location":"Java%E5%9F%BA%E7%A1%80/#_25","text":"<< \uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u4f4e\u4f4d\u8865\u96f6 >> \uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u4f4e\u4f4d\u6ea2\u51fa\uff0c\u5e76\u7528\u7b26\u53f7\u4f4d\u8865\u6ea2\u51fa\u7684\u9ad8\u4f4d >>> \uff1a\u4f4e\u4f4d\u6ea2\u51fa\uff0c\u9ad8\u4f4d\u8865\u96f6 char \u3001 byte \u3001 short \u8fdb\u884c\u79fb\u4f4d\u64cd\u4f5c\u65f6\uff0c\u4f1a\u5148\u8f6c\u6210 int \uff0c\u8fd0\u7b97\u540e\u518d\u622a\u65ad\u591a\u4f59\u4f4d Q\uff1a \u4e3a\u4ec0\u4e48 int \u7c7b\u578b\u7684\u6570\u503c\u5728 >>32 \u65f6\u7ed3\u679c\u4e0d\u4e3a 0 \uff1f A\uff1a \u5373\uff0c\u5de6\u79fb\u3001\u53f3\u79fb\u64cd\u4f5c\u6700\u591a\u53ea\u80fd\u79fb31\u4f4d\uff0c\u8d85\u8fc7\u4e4b\u540e\u7684\u503c\u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u4e0d\u540c\u7684\u7f16\u8bd1\u5668","title":"\uff08\u4e03\uff09\u5de6\u79fb\u3001\u53f3\u79fb\u3001\u65e0\u7b26\u53f7\u53f3\u79fb"},{"location":"Java%E5%9F%BA%E7%A1%80/#_26","text":"","title":"\u4e94\u3001\u63a7\u5236\u8bed\u53e5"},{"location":"Java%E5%9F%BA%E7%A1%80/#_27","text":"\u7c7b\u4f3c\u4e8e C \u4e2d\u7684 goto \u6807\u7b7e\uff0c\u4f46\u662f\u6536\u5230\u9650\u5236\uff0c\u53ea\u80fd\u914d\u5408 continue \u548c break \u4f7f\u7528 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 outer : // \u5916\u5c42\u5faa\u73af\u7684\u6807\u7b7e for ( int i = 0 ; i < 3 ; i ++ ){ if ( i == 1 ) continue outer ; inter : // \u5185\u5c42\u5faa\u73af\u7684\u6807\u7b7e for ( int j = 0 ; j < 10 ; j ++ ){ if ( j == 2 ) break inter ; System . out . println ( \"i=\" + i + \",j=\" + j ); } } /* \u8f93\u51fa\uff1a i=0,j=0 i=0,j=1 i=2,j=0 i=2,j=1 */","title":"\u6807\u7b7e"},{"location":"Java%E5%9F%BA%E7%A1%80/#_28","text":"","title":"\u516d\u3001\u6570\u7ec4"},{"location":"Java%E5%9F%BA%E7%A1%80/#_29","text":"\u6570\u7ec4\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u662f\u5f15\u7528 \u7c7b\u578b \u5b9a\u4e49\u65b9\u6cd5\uff1a int[] ans = {1,4,5,6,10}; int ans[] = {1,2,3,4,5}; int[] ans = new int[5]; int ans[]= new int[5]; java\u4e2d\u53ef\u4ee5\u7528\u53d8\u91cf\u5b9a\u4e49\u6570\u7ec4\u5927\u5c0f 1 2 int size = 100 \uff1b int [] num = new int [ size ] ;","title":"\uff08\u4e00\uff09\u57fa\u672c\u6982\u5ff5"},{"location":"Java%E5%9F%BA%E7%A1%80/#_30","text":"\u6570\u7ec4\u4e4b\u95f4\u7684\u8d4b\u503c\u662f\u5f15\u7528\u8d4b\u503c\uff1a 1 2 3 4 int [] arr1 = { 1 , 2 , 3 }; int [] arr2 = arr1 ; arr2 [ 0 ] = 10 ; // arr1\u7684\u7b2c0\u4e2a\u5143\u7d20\u4e5f\u53d8\u6210\u4e8610 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4fdd\u5b58\u7684\u662f\u503c\uff0c\u5373\u62f7\u8d1d\u7684\u662f\u503c \u5f15\u7528\u6570\u636e\u7c7b\u578b\u4fdd\u5b58\u7684\u662f\u5806\u5185\u7684\u5730\u5740\uff0c\u5373\u62f7\u8d1d\u7684\u662f\u5730\u5740","title":"\uff08\u4e8c\uff09\u503c\u4f20\u9012\u4e0e\u5f15\u7528\u4f20\u9012"},{"location":"Java%E5%9F%BA%E7%A1%80/#_31","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 int [] arr = { 1 , 2 , 3 }; int [] arr2 = new int [ arr . length + 1 ] ; // \u8d4b\u503c for ( int i = 0 ; i < arr . length ; i ++ ){ arr2 [ i ] = arr [ i ] ; } arr2 [ 3 ]= 4 ; // \u62f7\u8d1d\u5f15\u7528 arr = arr2 ; for ( int i = 0 ; i < arr . length ; i ++ ){ System . out . println ( arr [ i ] ); } /* \u8f93\u51fa\uff1a 1 2 3 4 */","title":"\uff08\u4e09\uff09\u6570\u7ec4\u6269\u5bb9"},{"location":"Java%E5%9F%BA%E7%A1%80/#_32","text":"","title":"\uff08\u56db\uff09\u4e8c\u7ef4\u6570\u7ec4"},{"location":"Java%E5%9F%BA%E7%A1%80/#_33","text":"","title":"\u4e8c\u7ef4\u6570\u7ec4\u7684\u5185\u5b58\u5f62\u5f0f"},{"location":"Java%E5%9F%BA%E7%A1%80/#_34","text":"int[][] arr = {{1,1,1},{8,8,9},{100}}; int[][] arr = new int[2][3]; int[][] arr; arr = new int[2][3]; java int[][] arr = new int[2][]; // \u521b\u5efa\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u91cc\u9762\u653e2\u4e2a\u4e00\u4f4d\u6570\u7ec4\uff0c\u4f46\u662f\u6bcf\u4e2a\u4e00\u4f4d\u6570\u7ec4\u8fd8\u6ca1\u6709\u5f00\u6570\u636e\u7a7a\u95f4 for(int i=0;i<arr.length;i++){ arr[i] = new int[i+1]; // \u7b2c\u4e8c\u7ef4\u5bb9\u91cf\u53ef\u968f\u610f\u8bbe\u7f6e }","title":"\u8d4b\u503c\u65b9\u5f0f"},{"location":"Java%E5%9F%BA%E7%A1%80/#string_3","text":"\u4f8b\u9898\uff1a","title":"String\u6570\u7ec4"},{"location":"Java%E5%9F%BA%E7%A1%80/#_35","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Other { Other ( String ... str ){ // \u7c7b\u4f3c\u4e8e\u4f20\u5165\u4e00\u4e2aString\u6570\u7ec4 for ( String i : str ) System . out . print ( i + \" \" ); System . out . println (); } } public class Index { public static void main ( String [] args ){ Other other = new Object (); // \u4f20\u5165\u4e3a\u7a7a Other other2 = new Object ( \"a\" , \"b\" , \"c\" ); Other other3 = new Object ( new String [] { \"1\" , \"2\" , \"3\" }); // \u76f4\u63a5\u4f20\u5165\u6570\u7ec4 // Other other4 = new Object({\"A\",\"B\",\"C\"}); // \u9519\u8bef } } \u6ce8\u610f\uff1a\u53ef\u53d8\u53c2\u6570\u5217\u8868\u53ea\u80fd\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u5b9a\u4e49\uff0c\u4e14\u540c\u4e00\u4e2a\u5f62\u53c2\u5217\u8868\u4e2d\u6700\u591a\u53ea\u80fd\u51fa\u73b0\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570\u3002","title":"\uff08\u4e94\uff09\u53ef\u53d8\u53c2\u6570\u5217\u8868"},{"location":"Java%E5%9F%BA%E7%A1%80/#_36","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 enum MyEnum { UP , DOWN , LEFT , RIGHT , MIDDLE } for ( MyEnum myEnum : MyEnum . values ()){ System . out . println ( myEnum + \",\" + myEnum . ordinal ()); } /* Output: UP,0 DOWN,1 LEFT,2 RIGHT,3 MIDDLE,4 */ \u679a\u4e3e\u53ef\u7528\u4e8eswitch\u8bed\u53e5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 MyEnum middle = MyEnum . MIDDLE ; switch ( middle ){ case LEFT : // \u6807\u7b7e\u5fc5\u987b\u4e3a\u679a\u4e3e\u7c7b\u578b\u7684\u975e\u9650\u5b9a\u540d\u79f0\uff0c\u4e0d\u80fd\u4e3aMyEnum.LEFT System . out . println ( MyEnum . LEFT ); break ; case RIGHT : System . out . println ( MyEnum . RIGHT ); break ; case UP : System . out . println ( MyEnum . UP ); break ; case DOWN : System . out . println ( MyEnum . DOWN ); break ; case MIDDLE : System . out . println ( MyEnum . MIDDLE ); break ; }","title":"\uff08\u516d\uff09\u679a\u4e3e\u7c7b\u578b"},{"location":"Java%E5%9F%BA%E7%A1%80/#_37","text":"","title":"\u4e03\u3001\u7c7b&amp;\u5bf9\u8c61"},{"location":"Java%E5%9F%BA%E7%A1%80/#_38","text":"","title":"\uff08\u4e00\uff09\u5bf9\u8c61"},{"location":"Java%E5%9F%BA%E7%A1%80/#_39","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u76f4\u63a5\u4fdd\u5b58\u5728\u5806\u4e2d\u7684\u5bf9\u8c61\u4e2d \u5e38\u91cf\u3001\u5b57\u7b26\u4e32\u7c7b\u578b\u4fdd\u5b58\u5728\u65b9\u6cd5\u533a\u7684\u5e38\u91cf\u6c60\u4e2d\uff0c\u800c\u5bf9\u8c61\u4e2d\u4fdd\u5b58\u7684\u662f\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u6570\u636e\u7684\u5730\u5740","title":"\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u5728\u5f62\u5f0f"},{"location":"Java%E5%9F%BA%E7%A1%80/#_40","text":"\u5f53\u521b\u5efa\u5bf9\u8c61\uff0c\u6216\u9996\u6b21\u8bbf\u95ee\u9759\u6001\u57df\u3001\u9759\u6001\u65b9\u6cd5\u65f6\uff0c\u4f1a\u9996\u5148\u5c06\u7c7b\u4fe1\u606f\u52a0\u8f7d\u5230\u65b9\u6cd5\u533a\u4e2d\uff0c\u5305\u62ec\u5c5e\u6027\u3001\u884c\u4e3a\u3002\uff08 \u53ea\u52a0\u8f7d\u4e00\u6b21 \uff09 \u5728\u5806\u4e2d\u5206\u914d\u7a7a\u95f4\uff0c\u6e05\u7a7a\u7a7a\u95f4\uff0c\u5e76\u521d\u59cb\u5316\u4e3a\u9ed8\u8ba4\u503c \u5c06\u5bf9\u8c61\u5728\u5806\u4e2d\u7684\u5730\u5740\uff0c\u8d4b\u7ed9\u6307\u5411\u5b83\u7684\u5f15\u7528 \u8fdb\u884c\u6307\u5b9a\u5c5e\u6027\u7684\u521d\u59cb\u5316 \u6267\u884c\u6784\u9020\u5668 \uff08\u8be6\u89c1 \u300aThink In Java\u300b 95~96\u9875 \u6216 \u97e9\u987a\u5e73 Java \u89c6\u9891199~200\u96c6\uff09","title":"\u5bf9\u8c61\u521b\u5efa\u7684\u6d41\u7a0b"},{"location":"Java%E5%9F%BA%E7%A1%80/#_41","text":"\u8bbf\u95ee\u9759\u6001\u5e38\u91cf\u4e0d\u4f1a\u521d\u59cb\u5316\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 class A { public final static String text = \"hello world!\" ; static { System . out . println ( \"A\" ); } } public class Test { System . out . println ( A . text ); } // \u8f93\u51fa\uff1ahello world! // \u9759\u6001\u4ee3\u7801\u5757\u6ca1\u6709\u6267\u884c\uff0c\u8bf4\u660e\u6ca1\u6709\u521d\u59cb\u5316\u7c7b // \u82e5\u6539\u6210 public final static String text = new String(\"hello world!\"); \u5219\u4f1a\u521d\u59cb\u5316","title":"\u6ce8\u610f"},{"location":"Java%E5%9F%BA%E7%A1%80/#_42","text":"","title":"\u65b9\u6cd5\u7684\u8c03\u7528\u673a\u5236"},{"location":"Java%E5%9F%BA%E7%A1%80/#_43","text":"\u6ce8\u610f\u65b9\u6cd5\u4e2d\u90fd\u662f\u503c\u4f20\u9012\uff0c\u56e0\u6b64\u4f20\u5165\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u4f1a\u88ab\u771f\u7684\u6539\u53d8\uff0c\u6539\u53d8\u7684\u662f\u5176\u62f7\u8d1d\u3002\u800c\u4f20\u5165\u7684\u5f15\u7528\u7684\u62f7\u8d1d\u80fd\u591f\u6307\u5411\u540c\u4e00\u5757\u5806\u533a\u95f4\uff0c\u4ece\u800c\u771f\u6b63\u5730\u6539\u53d8\u6570\u636e\u3002","title":"\u65b9\u6cd5\u4f20\u53c2"},{"location":"Java%E5%9F%BA%E7%A1%80/#this","text":"\u5bf9\u8c61\u4e2d\u9690\u85cf\u7740\u4e00\u4e2a this \uff0c\u5b83\u7684\u503c\u662f\u5f53\u524d\u5bf9\u8c61\u7684\u5730\u5740\u3002 java \u4e2d\u53ef\u4ee5\u901a\u8fc7 hashCode \u6765\u4f5c\u4e3a\u5047\u5730\u5740\u67e5\u770b\uff0chashCode\u662f\u6839\u636e\u5bf9\u8c61\u7684\u5185\u90e8\u5730\u5740\u8f6c\u6362\u6210\u7684\u4e00\u4e2a\u6574\u6570\u3002 this \u4f5c\u4e3a\u6784\u9020\u5668\u4f7f\u7528\u65f6\uff0c\u53ea\u80fd\u653e\u5728\u7b2c\u4e00\u53e5 1 2 3 4 5 6 7 8 class T { public T (){ this ( \"jack\" , 23 ); // ... \u5176\u4ed6\u8bed\u53e5 } public T ( String name , int age ){ } }","title":"\uff08\u4e8c\uff09this"},{"location":"Java%E5%9F%BA%E7%A1%80/#final","text":"static \u3001 final \u5171\u540c\u4fee\u9970\u7684\u5e38\u91cf\u662f \u7f16\u8bd1\u65f6\u5e38\u91cf \uff08\u4e0d\u5305\u62ec new \u521b\u5efa\u7684\u5bf9\u8c61\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 class A { public final static String text = \"hello world!\" ; static { System . out . println ( \"A\" ); } } public class Test { System . out . println ( A . text ); } // \u8f93\u51fa\uff1ahello world! // \u9759\u6001\u4ee3\u7801\u5757\u6ca1\u6709\u6267\u884c\uff0c\u8bf4\u660e\u6ca1\u6709\u521d\u59cb\u5316\u7c7b\uff0c\u56e0\u4e3atext\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u653e\u5728\u5e38\u91cf\u6c60\u4e2d\u4e86 // \u82e5\u6539\u6210 public final static String text = new String(\"hello world!\"); \u5219\u4f1a\u521d\u59cb\u5316 final \u4fee\u9970\u7684\u5f15\u7528\u7c7b\u578b\u4e0d\u53ef\u6539\u53d8\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u4f46\u53ef\u4ee5\u6539\u53d8\u5bf9\u8c61\u7684\u5c5e\u6027\u3002 \u6ca1\u6709\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\u7684 final \u5e38\u91cf\uff0c\u5fc5\u987b\u5728\u6784\u9020\u5668\u4e2d\u521d\u59cb\u5316\u3002","title":"\uff08\u4e09\uff09final"},{"location":"Java%E5%9F%BA%E7%A1%80/#_44","text":"\u4fee\u9970\u7b26 \u672c\u7c7b \u5305\u5185 \u5b50\u7c7b \u5305\u5916 private \u221a default \u221a \u221a protected \u221a \u221a \u221a public \u221a \u221a \u221a \u221a \u6ce8\u610f\uff0c\u53ea\u6709 public \u548c default \u624d\u80fd\u4fee\u9970\u7c7b","title":"\uff08\u56db\uff09\u8bbf\u95ee\u6743\u9650\u4fee\u9970\u7b26"},{"location":"Java%E5%9F%BA%E7%A1%80/#_45","text":"\u5411\u4e0a\u8f6c\u578b\uff1a\u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class A { public void test (){ System . out . println ( \"A.test()\" ); } } class B extends A { public void test (){ System . out . println ( \"B.test()\" ); } } public class Main { public static void main ( String args [] ){ A a = new B (); a . test (); } } // \u8f93\u51fa B.test \u5411\u4e0a\u8f6c\u578b\u8c03\u7528\u65b9\u6cd5\u5fc5\u8981\u6761\u4ef6\uff1a\u7ee7\u627f+\u65b9\u6cd5\u8986\u76d6 \u82e5\u4e0a\u4f8b\u4e2d\u7684\u65b9\u6cd5\u662f private \uff0c\u5b50\u7c7bB\u5c31\u65e0\u6cd5\u8986\u76d6A\u7684\u65b9\u6cd5\uff0c\u56e0\u6b64\u5411\u4e0a\u8f6c\u578b\u540e\u4e5f\u65e0\u6cd5\u4f7f\u7528\u8be5\u65b9\u6cd5","title":"\uff08\u4e94\uff09\u5411\u4e0a\u8f6c\u578b"},{"location":"Java%E5%9F%BA%E7%A1%80/#_46","text":"\u63a5\u4e0a\u4f8b\uff1a 1 2 3 4 5 6 A a = new B (); B b = ( B ) a ; // \u5411\u4e0b\u8f6c\u578b\u4e3a\u5f3a\u5236\u8f6c\u6362 // \u9519\u8bef // A a = new A(); // B b = (B)a; \u53ea\u6709\u7236\u7c7b\u5f15\u7528\u7684\u5b50\u7c7b\u5bf9\u8c61\u624d\u80fd\u5411\u4e0b\u8f6c\u578b\uff0c\u76f4\u63a5\u7236\u7c7b\u5bf9\u8c61\u4e0d\u80fd\u5411\u4e0b\u8f6c\u578b\u3002","title":"\uff08\u516d\uff09\u5411\u4e0b\u8f6c\u578b"},{"location":"Java%E5%9F%BA%E7%A1%80/#_47","text":"","title":"\u516b\u3001\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001"},{"location":"Java%E5%9F%BA%E7%A1%80/#_48","text":"\u5c06\u5c5e\u6027\u548c\u65b9\u6cd5\u5c01\u88c5\u5728\u7c7b\u4e2d\uff0c\u9690\u85cf\u5177\u4f53\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u63d0\u4f9b\u5bf9\u5916\u7684\u63a5\u53e3\u3002","title":"\uff08\u4e00\uff09\u5c01\u88c5"},{"location":"Java%E5%9F%BA%E7%A1%80/#_49","text":"private \u65b9\u6cd5\u4e0d\u80fd\u88ab\u8986\u76d6\uff0c\u56e0\u6b64\u5728\u5411\u4e0a\u8f6c\u578b\u65f6\u65e0\u6cd5\u8c03\u7528 \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4e0d\u7ba1\u4f7f\u7528\u54ea\u4e2a\u5b50\u7c7b\u6784\u9020\u5668\uff0c\u90fd\u4f1a\u9ed8\u8ba4\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u5668\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5fc5\u987b\u5728\u5b50\u7c7b\u6784\u9020\u5668\u4e2d\u4f7f\u7528 super \u6307\u5b9a\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002","title":"\uff08\u4e8c\uff09\u7ee7\u627f"},{"location":"Java%E5%9F%BA%E7%A1%80/#_50","text":"\u7c7b\u4fe1\u606f\u4fdd\u5b58\u5728\u65b9\u6cd5\u533a\uff0c\u5bf9\u8c61\u4e2d\u4f1a\u4fdd\u5b58\u6709\u5176\u7236\u7c7b\u7684\u5c5e\u6027","title":"\u7ee7\u627f\u5185\u5b58\u60c5\u51b5"},{"location":"Java%E5%9F%BA%E7%A1%80/#_51","text":"\u76f4\u63a5\u8bbf\u95ee\u5c5e\u6027\u548c\u5728\u5c5e\u6027\u524d\u52a0 this \u8bbf\u95ee\u7684\u6548\u679c\u3001\u67e5\u627e\u987a\u5e8f\u90fd\u662f\u4e00\u81f4\u7684 \u8be6\u89c1\uff1a \u97e9\u987a\u5e73Java_\u7ee7\u627f\u672c\u8d28\u8be6\u89e3","title":"\u5bf9\u8c61\u8bbf\u95ee\u5c5e\u6027/\u65b9\u6cd5\u987a\u5e8f"},{"location":"Java%E5%9F%BA%E7%A1%80/#_52","text":"\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 // A\u7c7b public class A { public A () { System . out . println ( \"A()\" ); // 4 } public A ( String name ) { System . out . println ( \"A: \" + name ); } } // B\u7c7b public class B extends A { public B (){ this ( \"Alice\" ); // 2 System . out . println ( \"B()\" ); // 6 } public B ( String name ){ // 3 System . out . println ( \"B: \" + name ); // 5 } } // main\u6240\u5728\u7c7b public class ExtendExercise { public static void main ( String [] args ) { A obj = new B (); // 1 } } \u6267\u884c\u987a\u5e8f\uff1a \u8fdb\u5165 B() \uff0c\u53d1\u73b0\u6709\u4e2a this(\"Alice\") \uff0c\u4e8e\u662f\u8fdb\u5165 B(String name) \u3002 \u800c B(String name) \u4f1a\u6709\u9ed8\u8ba4\u7684 super \u6307\u5411\u7236\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u4e8e\u662f\u8fdb\u5165 A() \u3002 A() \u6267\u884c\u7ed3\u675f\u540e\uff0c\u7ee7\u7eed\u6267\u884c B(String name) \uff0c\u968f\u540e\u518d\u56de\u5230 B() \u3002 \u8f93\u51fa\u7ed3\u679c\uff1a 1 2 3 // A() // B: Alice // B()","title":"\u4f8b\u9898"},{"location":"Java%E5%9F%BA%E7%A1%80/#super","text":"super \u548c this \u90fd\u53ea\u80fd\u653e\u5728\u6784\u9020\u5668\u7684\u7b2c\u4e00\u884c\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e0d\u80fd\u5171\u5b58\u3002","title":"super"},{"location":"Java%E5%9F%BA%E7%A1%80/#override","text":"\u5b50\u7c7b\u7684\u65b9\u6cd5\u7b7e\u540d\u5fc5\u987b\u548c\u7236\u7c7b\u4e00\u81f4 \u5b50\u7c7b\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u4e3a\u7236\u7c7b\u8fd4\u56de\u503c\u6216\u5176\u5b50\u7c7b \u5b50\u7c7b\u65b9\u6cd5\u4e0d\u7f29\u5c0f\u7236\u7c7b\u65b9\u6cd5\u7684\u8bbf\u95ee\u6743\u9650 override\u4e0eoverload\u533a\u522b \u4ee3\u7801\u590d\u7528","title":"Override"},{"location":"Java%E5%9F%BA%E7%A1%80/#polymorphic","text":"\u65b9\u6cd5\u6216\u5bf9\u8c61\u5177\u6709\u591a\u79cd\u5f62\u6001\u3002","title":"\uff08\u4e09\uff09\u591a\u6001\uff08Polymorphic\uff09"},{"location":"Java%E5%9F%BA%E7%A1%80/#_53","text":"\u91cd\u8f7d(Overload)\uff1a\u65b9\u6cd5\u7b7e\u540d\u4e0d\u4e00\u6837\uff08\u65b9\u6cd5\u7b7e\u540d = \u65b9\u6cd5\u540d + \u53c2\u6570\u5217\u8868\uff09 1 2 3 4 5 public class Animal { public void eat () { } public void eat ( String name ) { } }","title":"\u9759\u6001\u591a\u6001"},{"location":"Java%E5%9F%BA%E7%A1%80/#_54","text":"\u7236\u7c7b\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 \u91cd\u5199\uff08Override\uff09 \u5c5e\u6027\u4e0d\u652f\u6301\u91cd\u5199\uff08\u5305\u62ec\u5f15\u7528\u7c7b\u578b\u7684\u5c5e\u6027\uff09\uff0c\u56e0\u4e3a\u5c5e\u6027\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u786e\u5b9a\uff0c\u56e0\u6b64\u65e0\u6cd5\u52a8\u6001\u67e5\u627e\u5b50\u7c7b\u5c5e\u6027 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // Animal\u57fa\u7c7b public class Animal { int age = 10 ; Food food = new Fish (); // Food\u57fa\u7c7b\uff0cFish\u5b50\u7c7b\uff0c\u91cc\u9762\u53ea\u6709\u4e00\u4e2aString\u5c5e\u6027 public void eat (){ System . out . println ( \"Animal eat()\" ); } } // Cat\u5b50\u7c7b public class Cat extends Animal { int age = 7 ; Food food = new Fish (); @Override public void eat (){ System . out . println ( \"Cat eat()\" ); } } public class Index { public static void main ( String [] args ) { Animal animal = new Cat (); System . out . println ( animal . age ); // 10 System . out . println ( animal . food . name ); // Food } } \u5982\u679c A \u7c7b\u7ee7\u627f B \u7c7b\uff0c B \u7ee7\u627f C \uff0c\u5148\u5b9a\u4e49 C obj = new A() \uff0c\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\u4ecd\u7136\u9075\u5faa\u4ece\u5b50\u7c7b\uff08\u8fd0\u884c\u7c7b\u578b\uff09\u627e\u8d77\u7684\u89c4\u5219\u3002\u5982\u679c\u5b50\u7c7b A \u627e\u4e0d\u5230\u53ef\u4ee5\u8c03\u7528\u7684\u65b9\u6cd5/\u5c5e\u6027\uff0c\u5219\u7ee7\u7eed\u5411\u4e0a\u627e\u5176\u7236\u7c7b B \u3002","title":"\u52a8\u6001\u591a\u6001"},{"location":"Java%E5%9F%BA%E7%A1%80/#_55","text":"[\u5b50\u7c7b\u7c7b\u578b] [\u5f15\u7528\u540d] = (\u5b50\u7c7b\u7c7b\u578b)\u7236\u7c7b\u5f15\u7528 \u53ea\u80fd\u5f3a\u5236\u8f6c\u6362\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u4e0d\u80fd\u5f3a\u8f6c\u7236\u7c7b\u5bf9\u8c61 \u4e14\u8981\u6c42\u7236\u7c7b\u5f15\u7528\u5728\u7f16\u8bd1\u65f6\u672c\u6765\u5c31\u6307\u5411\u8be5\u5b50\u7c7b\u5bf9\u8c61 1 2 3 4 5 6 7 // \u53ef\u4ee5 Animail animal = new Cat (); Cat cat = ( Cat ) animal ; // \u9519\u8bef Animail animal = new Cat (); Dog dog = ( Dog ) animal ; \u5bf9\u8c61\u591a\u6001\u65f6\uff0c\u65e0\u6cd5\u8c03\u7528\u57fa\u7c7b\u6ca1\u6709\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u8981\u8c03\u7528\uff0c\u53ef\u4ee5\u8fdb\u884c\u5411\u4e0b\u8f6c\u578b 1 2 3 4 5 6 7 8 9 10 11 12 13 class A { } class B extends A { void fun (){ } } class Main (){ public static void main ( String [] args ){ A a = new B (); if ( a instanceof B ){ (( B ) a ). fun (); // \u5f3a\u5236\u8f6c\u4e3aB\u7c7b\u578b } } }","title":"\u591a\u6001\u7684\u5411\u4e0b\u8f6c\u578b"},{"location":"Java%E5%9F%BA%E7%A1%80/#_56","text":"\u7b49\u53f7\u5750\u6807\u4e3a\u7f16\u8bd1\u7c7b\u578b\uff0c\u7b49\u53f7\u53f3\u8fb9\u4e3a\u8fd0\u884c\u7c7b\u578b\u3002\u7f16\u8bd1\u7c7b\u578b\u4e0d\u53ef\u53d8\uff0c\u8fd0\u884c\u7c7b\u578b\u53ef\u53d8\u3002","title":"\u7f16\u8bd1\u7c7b\u578b\u4e0e\u8fd0\u884c\u7c7b\u578b"},{"location":"Java%E5%9F%BA%E7%A1%80/#instanceof","text":"\u5224\u65ad\u7684\u662f\u5bf9\u8c61\u7684 \u8fd0\u884c\u7c7b\u578b \u662f\u5426\u4e3a\u67d0\u4e2a\u7c7b\u578b/\u67d0\u7c7b\u578b\u7684\u5b50\u7c7b\u578b 1 2 3 4 5 6 7 8 9 // Cat \u7ee7\u627f Animal \u7c7b Animal animal = new Cat (); if ( animal instanceof Animal ){ System . out . println ( \"animal \u662f Animal\u7c7b\u578b\" ); // \u8f93\u51fa } if ( animal instanceof Cat ){ System . out . println ( \"animal \u662f Cat\" ); // \u8f93\u51fa }","title":"instanceof"},{"location":"Java%E5%9F%BA%E7%A1%80/#java_4","text":"\u89c6\u9891\u6559\u7a0b \u5b50\u7c7b\u7684\u5c5e\u6027\u65e0\u6cd5\u88ab\u7236\u7c7b\u5f15\u7528\u76f4\u63a5\u8bbf\u95ee\u5230\uff0c\u56e0\u4e3a\u5c5e\u6027\u662f\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u597d\u7684\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u4f7f\u7528 get \u65b9\u6cd5\u83b7\u53d6\u5c5e\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u8bbf\u95ee\u5b50\u7c7b\u5c5e\u6027\u7684\u9700\u8981\u3002 \u4f8b\u4e00\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 class A { int num = 10 ; } class B extends A { int num = 20 ; } class Index { public static void main ( String [] args ){ A a = new B (); System . out . println ( a . num ); // \u8f93\u51fa 10 } } \u6539\u8fdb\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class A { int num = 10 ; int getNum (){ return num ; } } class B extends A { int num = 20 ; int getNum (){ return num ; // \u4f7f\u7528\u52a8\u6001\u7ed1\u5b9a\u7684\u65b9\u6cd5\u53ef\u4ee5\u8bbf\u95ee\u5230\u5f53\u524d\u7c7b\u7684\u5c5e\u6027 } } class Index { public static void main ( String [] args ){ A a = new B (); System . out . println ( a . getNum ()); // \u8f93\u51fa 20 } } \u4f8b\u4e8c\uff1a \u901a\u8fc7\u591a\u6001\u5b9e\u73b0\u7684\u5bf9\u8c61\uff0c\u5728\u8bbf\u95ee\u65b9\u6cd5\u65f6\uff0c\u4f18\u5148\u8bbf\u95ee\u52a8\u6001\u7ed1\u5b9a\u7684\u7c7b\uff0c\u5982\u679c\u627e\u4e0d\u5230\u518d\u627e\u5176\u7236\u7c7b\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class A { int num = 10 ; int getNum () { return num ; } int cal (){ return getNum () * 10 ; } } class B extends A { int num = 20 ; int getNum () { return num ; } int cal (){ return getNum () + 10 ; } } class C extends B { int num = 30 ; int getNum () { return num ; } } class Index { public static void main ( String [] args ){ A c = new C (); System . out . println ( c . cal ()); // \u8f93\u51fa 40 \uff08B.cal() => C.getNum() + 10\uff09 } } // \u5982\u679cB\u7c7b\u4e5f\u6ca1\u6709cal\u65b9\u6cd5\uff0c\u5219\u8f93\u51fa 300 (A.cal() => C.getNum() * 10 => 300) // \u5982\u679cC\u7c7b\u6ca1\u6709getNum\u65b9\u6cd5\u3001B\u7c7b\u6ca1\u6709cal\u65b9\u6cd5\uff0c\u5219\u8f93\u51fa 200 (A.cal() => B.getNum() * 10 => 200)","title":"\uff08\u56db\uff09java\u7684\u52a8\u6001\u7ed1\u5b9a\u673a\u5236\u3010\u91cd\u70b9\u3011"},{"location":"Java%E5%9F%BA%E7%A1%80/#object","text":"","title":"\u4e5d\u3001Object"},{"location":"Java%E5%9F%BA%E7%A1%80/#equals","text":"equals \u548c == \u533a\u522b\uff1a | \u6982\u5ff5 | \u57fa\u672c\u6570\u636e\u7c7b\u578b | \u5f15\u7528\u7c7b\u578b ---|---|---|--- == | \u6bd4\u8f83\u8fd0\u7b97\u7b26 | \u53ef\u4ee5\u4f7f\u7528 | \u53ef\u4ee5\u4f7f\u7528\uff0c\u6bd4\u8f83\u7684\u662f\u5730\u5740\u662f\u5426\u76f8\u7b49 equals() | Object \u65b9\u6cd5 | \u4e0d\u53ef\u4f7f\u7528 | \u53ef\u4ee5\u4f7f\u7528\uff0c\u9ed8\u8ba4\u7528 == \u5b9e\u73b0\uff0c\u82e5\u8981\u6bd4\u8f83\u5185\u5bb9\u76f8\u7b49\u9700\u8981\u8fdb\u884c\u91cd\u5199 equals()\u91cd\u5199\u6837\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 public boolean equals ( Object obj ){ if ( this == obj ) return true ; if ( obj instanceof [ \u7c7b\u578b ] ){ // obj\u662f\u5426\u4e3a[\u7c7b\u578b]\u6216\u8005\u5176\u5b50\u7c7b // ... \u5177\u4f53\u5c5e\u6027\u6bd4\u8f83 } else { return false ; } }","title":"\uff08\u4e00\uff09equals()"},{"location":"Java%E5%9F%BA%E7%A1%80/#tostring","text":"\u9ed8\u8ba4\u8fd4\u56de\u3010\u5168\u7c7b\u540d@\u5bf9\u8c61\u54c8\u5e0c\u503c\u7684\u5341\u516d\u8fdb\u5236\u3011 \u76f4\u63a5\u8f93\u51fa\u5bf9\u8c61\u65f6\uff0c toString \u65b9\u6cd5\u4f1a\u88ab\u9ed8\u8ba4\u8c03\u7528","title":"\uff08\u4e8c\uff09toString()"},{"location":"Java%E5%9F%BA%E7%A1%80/#finalize","text":"\u5bf9\u8c61\u88ab\u56de\u6536\u65f6\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528 \u6ce8\u610f\uff0c\u5783\u573e\u56de\u6536\u7684\u65f6\u95f4\u7531\u7cfb\u7edf\u81ea\u5df1\u51b3\u5b9a\uff0c\u5373\u4f7f\u624b\u52a8\u8c03\u7528 System.gc() \u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u6267\u884c","title":"\uff08\u4e09\uff09finalize()"},{"location":"Java%E5%9F%BA%E7%A1%80/#_57","text":"","title":"\uff08\u56db\uff09\u4f8b\u9898"},{"location":"Java%E5%9F%BA%E7%A1%80/#1_3","text":"","title":"\u4f8b1\uff1a"},{"location":"Java%E5%9F%BA%E7%A1%80/#2_3","text":"Student \u7ee7\u627f Person 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 // \u7236\u7c7b public class Person { public void run (){ System . out . println ( \"Person run()\" ); } public void eat (){ System . out . println ( \"Person eat()\" ); } } // \u5b50\u7c7b public class Student extends Person { @Override public void run () { System . out . println ( \"Student run()\" ); } public void study (){ System . out . println ( \"Student study()\" ); } } // main()\u6240\u5728\u5165\u53e3 public class Index { public static void main ( String [] args ) { // p\u4e0d\u80fd\u8bbf\u95eestudy()\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd0\u884c\u65f6\u624d\u80fd\u52a8\u6001\u7ed1\u5b9a\uff0c\u7f16\u8bd1\u65f6\u53ea\u80fd\u770b\u5230Person\u7c7b\u578b Person p = new Student (); p . run (); // Student p . eat (); // Person System . out . println ( \"====================\" ); Student s = ( Student ) p ; s . run (); // Student s . study (); // Student s . eat (); // Person } } \u7531\u7236\u7c7b Person \u5f15\u7528\u6307\u5411\u5b50\u7c7b Student \u5bf9\u8c61\uff0c\u5728\u7f16\u8bd1\u65f6\u65e0\u6cd5\u786e\u8ba4\u5176\u5b50\u7c7b\u7c7b\u578b\uff0c\u56e0\u6b64\u53ea\u80fd\u8bbf\u95ee\u5230\u7236\u7c7b Person \u62e5\u6709\u7684\u65b9\u6cd5 run() \u548c eat() \uff1b\u800c\u8fd0\u884c\u540e\u5b58\u5728\u52a8\u6001\u7ed1\u5b9a\u673a\u5236\uff0c\u56e0\u6b64\u6267\u884c\u4e86\u5b50\u7c7b\u7684 run() \u65b9\u6cd5\u3002","title":"\u4f8b2\uff1a"},{"location":"Java%E5%9F%BA%E7%A1%80/#3","text":"\u7ee7\u627f\u4e2d\u6784\u9020\u65b9\u6cd5\u7684\u6267\u884c\u987a\u5e8f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 // A\u7c7b public class A { public A () { // 6 System . out . println ( \"A\u7c7b\" ); // 7 } } // B\u7c7b public class B extends A { public B () { System . out . println ( \"B\u7c7b\" ); } public B ( String name ) { // 5 System . out . println ( name + \",B\u7c7b\u6709\u53c2\u6784\u9020\" ); // 8 } } // C\u7c7b public class C extends B { public C () { // 1 this ( \"hello\" ); // 2 System . out . println ( \"C\u7c7b\" ); // 10 } public C ( String name ) { // 3 super ( \"haha\" ); // 4 System . out . println ( \"C\u7c7b\u6709\u53c2\u6784\u9020\" ); // 9 } } /* main\u65b9\u6cd5\u4e2d\u6267\u884c C c = new C() ,\u8f93\u51fa\u4e3a\uff1a A\u7c7b haha,B\u7c7b\u6709\u53c2\u6784\u9020 C\u7c7b\u6709\u53c2\u6784\u9020 C\u7c7b */","title":"\u4f8b3\uff1a"},{"location":"Java%E5%9F%BA%E7%A1%80/#static","text":"\u5e94\u7528\uff1a\u5355\u4f8b\u6a21\u5f0f","title":"\u5341\u3001static"},{"location":"Java%E5%9F%BA%E7%A1%80/#static_1","text":"\u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab static \u53d8\u91cf \u7c7b\u52a0\u8f7d\u65f6\u751f\u6210 static \u53d8\u91cf \u901a\u8fc7\u5bf9\u8c61\u540d\u548c\u7c7b\u540d\u5747\u53ef\u8bbf\u95ee","title":"\uff08\u4e00\uff09static\u53d8\u91cf"},{"location":"Java%E5%9F%BA%E7%A1%80/#static_2","text":"\u5f53\u65b9\u6cd5\u4e2d\u4e0d\u6d89\u53ca\u4efb\u4f55\u5b9e\u4f8b\u5bf9\u8c61\u65f6\uff0c\u9002\u5408\u4f7f\u7528 static \u4fee\u9970\uff0c\u5982\u5404\u79cd\u5de5\u5177\u7c7b static \u65b9\u6cd5\u4e2d\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u53d8\u91cf\u6216\u9759\u6001\u65b9\u6cd5\uff0c\u4e0d\u80fd\u51fa\u73b0\u548c\u5bf9\u8c61\u6709\u5173\u7684\u5173\u952e\u8bcd super \u3001 this \u7b49\uff1b\u975e\u9759\u6001\u65b9\u6cd5\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002","title":"\uff08\u4e8c\uff09static\u65b9\u6cd5"},{"location":"Java%E5%9F%BA%E7%A1%80/#main","text":"public static void main(String[] args){} \u7531 java \u865a\u62df\u673a\u8c03\u7528 \u7531\u4e8e java \u865a\u62df\u673a\u548c main \u6240\u5728\u7c7b\u4e0d\u5728\u540c\u4e00\u4e2a\u7c7b\u548c\u5305\uff0c\u56e0\u6b64\u8981\u58f0\u660e\u4e3a public String[] args \u4e3a\u6267\u884c\u7a0b\u5e8f\u65f6\u4f20\u5165\u7684\u53c2\u6570\u5217\u8868 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Hello { public static void main ( String [] args ){ for ( String i : args ){ System . out . println ( i ); } } } // \u6267\u884c\uff1a // javac Hello.java // java Hello A B C // \u8f93\u51fa: // A // B // C \uff08 idea \u4e2d\u53ef\u4ee5\u901a\u8fc7\u53f3\u4e0a\u89d2 Edit Configuration \u8bbe\u7f6e\u4f20\u5165\u53c2\u6570\uff09","title":"\uff08\u4e09\uff09main\u65b9\u6cd5"},{"location":"Java%E5%9F%BA%E7%A1%80/#_58","text":"","title":"\u5341\u4e00\u3001\u4ee3\u7801\u5757/\u521d\u59cb\u5316\u5757"},{"location":"Java%E5%9F%BA%E7%A1%80/#_59","text":"1 2 3 { // \u4ee3\u7801... }; \uff08\u5206\u53f7\u53ef\u52a0\u53ef\u4e0d\u52a0\uff09 \u5982\u679c\u591a\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u90fd\u6709\u91cd\u590d\u7684\u8bed\u53e5\uff0c\u5219\u53ef\u4ee5\u628a\u5b83\u4eec\u62bd\u79bb\u5230\u521d\u59cb\u5316\u5757\u4e2d \u521d\u59cb\u5316\u5757\u7684\u8c03\u7528\u987a\u5e8f\u4f18\u5148\u4e8e\u6784\u9020\u5668 \u666e\u901a\u4ee3\u7801\u5757\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u8c03\u7528\uff0c\u521b\u5efa\u4e00\u6b21\u5c31\u8c03\u7528\u4e00\u6b21\uff0c\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u6210\u5458\u4e0d\u4f1a\u6267\u884c\u5b83","title":"\uff08\u4e00\uff09\u666e\u901a\u4ee3\u7801\u5757"},{"location":"Java%E5%9F%BA%E7%A1%80/#_60","text":"1 2 3 static { < \u4ee3\u7801 > }; \u9759\u6001\u4ee3\u7801\u5757\u5728\u7c7b\u52a0\u8f7d\u7684\u65f6\u5019\u6267\u884c\uff0c\u4e14\u53ea\u4f1a\u88ab\u6267\u884c\u4e00\u6b21 \u9759\u6001\u4ee3\u7801\u5757\u53ea\u80fd\u8c03\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u65b9\u6cd5","title":"\uff08\u4e8c\uff09\u9759\u6001\u4ee3\u7801\u5757"},{"location":"Java%E5%9F%BA%E7%A1%80/#_61","text":"\u521b\u5efa\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6 \u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7236\u7c7b\u5148\u88ab\u52a0\u8f7d\uff0c\u5176\u6b21\u662f\u5b50\u7c7b \u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u3001\u65b9\u6cd5\u65f6 \u7c7b\u52a0\u8f7d\u53ea\u4f1a\u6267\u884c\u4e00\u6b21","title":"\uff08\u4e09\uff09\u7c7b\u52a0\u8f7d\u7684\u65f6\u673a"},{"location":"Java%E5%9F%BA%E7%A1%80/#_62","text":"","title":"\uff08\u56db\uff09\u4ee3\u7801\u8c03\u7528\u987a\u5e8f"},{"location":"Java%E5%9F%BA%E7%A1%80/#1_4","text":"\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u4ee3\u7801\u5757 \u666e\u901a\u53d8\u91cf\u548c\u666e\u901a\u4ee3\u7801\u5757 \u6784\u9020\u5668 \uff08\u9759\u6001\uff09\u53d8\u91cf\u548c\uff08\u9759\u6001\uff09\u4ee3\u7801\u5757\u7684\u6267\u884c\u987a\u5e8f\uff0c\u4e0e\u4ee3\u7801\u4e66\u5199\u7684\u987a\u5e8f\u4e00\u81f4\u3002\u5728\uff08\u9759\u6001\uff09\u4ee3\u7801\u5757\u4e2d\u53ef\u4ee5\u4f7f\u7528\uff08\u9759\u6001\uff09\u53d8\u91cf\uff0c\u4f46\u662f\u5b83\u5fc5\u987b\u5728\uff08\u9759\u6001\uff09\u4ee3\u7801\u5757\u524d\u58f0\u660e\u3002","title":"1. \u666e\u901a\u7c7b\u4e2d\u7684\u8c03\u7528\u987a\u5e8f"},{"location":"Java%E5%9F%BA%E7%A1%80/#2_4","text":"\u7236\u7c7b\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u4ee3\u7801\u5757 \u5b50\u7c7b\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u4ee3\u7801\u5757 \u7236\u7c7b\u666e\u901a\u53d8\u91cf\u548c\u666e\u901a\u4ee3\u7801\u5757 \u7236\u7c7b\u6784\u9020\u5668 \u5b50\u7c7b\u666e\u901a\u53d8\u91cf\u548c\u666e\u901a\u4ee3\u7801\u5757 \u5b50\u7c7b\u6784\u9020\u5668 \u4e4b\u6240\u4ee5\u662f\u8fd9\u79cd\u987a\u5e8f\uff0c\u662f\u56e0\u4e3a \u6784\u9020\u5668\u7684\u5f00\u5934\u5176\u5b9e\u9690\u85cf\u4e86 super() \u548c\u666e\u901a\u4ee3\u7801\u5757\u7684\u8c03\u7528\uff1a 1 2 3 4 5 6 7 class A { public A (){ // super(); 1 // \u8c03\u7528\u666e\u901a\u4ee3\u7801\u5757 2 System . out . println ( \"ok\" ) // 3 } }","title":"2. \u5b58\u5728\u7ee7\u627f\u5173\u7cfb\u7684\u4ee3\u7801\u8c03\u7528\u987a\u5e8f"},{"location":"Java%E5%9F%BA%E7%A1%80/#final_1","text":"\u9002\u7528\u8303\u56f4\uff1a \u4e0d\u5e0c\u671b\u67d0\u4e2a\u7c7b\u88ab\u7ee7\u627f \u4e0d\u5e0c\u671b\u67d0\u4e2a\u65b9\u6cd5\u88ab\u5b50\u7c7b\u91cd\u5199\uff08\u8986\u76d6\uff09 \u4e0d\u5e0c\u671b\u67d0\u4e2a\u5c5e\u6027\uff08\u6210\u5458\u53d8\u91cf\uff09\u88ab\u4fee\u6539 \u4e0d\u5e0c\u671b\u67d0\u4e2a\u5c40\u90e8\u53d8\u91cf\u88ab\u4fee\u6539 \u6ce8\u610f final \u4fee\u9970\u7684\u5c5e\u6027\u5fc5\u987b\u8d4b\u521d\u503c\uff1a\u5b9a\u4e49\u65f6\u3001\u6784\u9020\u5668\uff08\u9759\u6001\u5c5e\u6027\u9664\u5916\uff09\u3001\u666e\u901a/\u9759\u6001\u521d\u59cb\u5316\u5757\u4e2d\u3002 final \u7c7b\u6ca1\u5fc5\u8981\u5728\u5199 final \u65b9\u6cd5 final \u4e0d\u80fd\u4fee\u9970\u6784\u9020\u5668 final \u5f80\u5f80\u548c static \u914d\u5408\u4f7f\u7528\uff0c\u5e95\u5c42\u7f16\u8bd1\u5668\u505a\u51fa\u4e86\u4f18\u5316\u5904\u7406\uff0c\u4e0d\u4f1a\u5bfc\u81f4\u7c7b\u52a0\u8f7d\uff0c\u4f1a\u66f4\u5feb\u3002 1 2 3 4 5 6 7 8 public class A { public final static int n = 10 ; static { System . out . println ( \"\u9759\u6001\u521d\u59cb\u5316\u5757\uff01\" ); } } // \u8c03\u7528A.n\uff0c\u6ca1\u6709\u4efb\u4f55\u8f93\u51fa","title":"\u5341\u4e8c\u3001final"},{"location":"Java%E8%BF%9B%E9%98%B6/","text":"\u4e00\u3001\u5de5\u5177 \u00b6 javac \u7f16\u8bd1\u5de5\u5177 javap \u53cd\u7f16\u8bd1\u5de5\u5177(\u4ece class \u6587\u4ef6\u5f97\u5230 java \u6587\u4ef6)\uff1a \u4e8c\u3001\u62bd\u8c61 \u00b6 \u5f53\u7236\u7c7b\u65b9\u6cd5\u4e0d\u786e\u5b9a\u5177\u4f53\u5b9e\u73b0\u5185\u5bb9\u65f6\uff0c\u53ef\u4ee5\u5b9a\u4e49\u5176\u4e3a\u62bd\u8c61\u65b9\u6cd5\u3002 1 2 3 public abstract class Animal { public abstract void eat (); } \u6ce8\u610f\uff1a \u5305\u542b\u62bd\u8c61\u65b9\u6cd5\u7684\u7c7b\uff0c\u5fc5\u987b\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff1b \u62bd\u8c61\u65b9\u6cd5\u6ca1\u6709\u65b9\u6cd5\u4f53\uff1b \u62bd\u8c61\u7c7b\u53ef\u4ee5\u6ca1\u6709\u62bd\u8c61\u65b9\u6cd5\uff1b abstract \u53ea\u80fd\u4fee\u9970\u7c7b\u548c\u65b9\u6cd5\uff1b \u7ee7\u627f\u4e86\u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\uff0c\u5fc5\u987b\u5b9e\u73b0\u5176\u7236\u7c7b\u7684\u6240\u6709\u62bd\u8c61\u65b9\u6cd5\uff0c\u9664\u975e\u5b83\u81ea\u5df1\u4e5f\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff1b \u62bd\u8c61\u65b9\u6cd5\u4e0d\u80fd\u4f7f\u7528 private \u3001 final \u3001 static \uff0c\u56e0\u4e3a\u52a0\u4e86\u8fd9\u4e09\u4e2a\u5173\u952e\u5b57\u7684\u65b9\u6cd5\u65e0\u6cd5\u88ab\u91cd\u5199\u3002 \u5e94\u7528\uff1a\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f \u4e09\u3001\u63a5\u53e3 \u00b6 \uff08\u4e00\uff09\u57fa\u672c\u6982\u5ff5 \u00b6 \u5b9e\u73b0\u63a5\u53e3\u662f\u5bf9 java \u5355\u7ee7\u627f\u673a\u5236\u7684\u8865\u5145\uff0c\u7ee7\u627f\u662f\u6ee1\u8db3 is-a \u7684\u5173\u7cfb\uff0c\u5b9e\u73b0\u63a5\u53e3\u662f\u6ee1\u8db3 like-a \u7684\u5173\u7cfb\u3002 Jdk7 \u4e4b\u524d\uff0c\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u6ca1\u6709\u65b9\u6cd5\u4f53\uff1b Jdk8 \u4e4b\u540e\uff0c\u63a5\u53e3\u4e2d\u53ef\u4ee5\u6709\u9759\u6001\u65b9\u6cd5\u3001\u9ed8\u8ba4\u65b9\u6cd5\uff08 default \u4fee\u9970\uff09\uff1b \u63a5\u53e3\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u53ef\u4ee5\u4e0d\u52a0 abstract \u5173\u952e\u5b57\uff1b \u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff1b \u63a5\u53e3\u4e0d\u80fd\u7ee7\u627f\u7c7b\uff0c\u53ea\u80fd \u7ee7\u627f \u5176\u4ed6\u63a5\u53e3\uff0c\u6ce8\u610f\u662f extends \u5173\u952e\u5b57\uff1b 1 2 3 interface A {} interface B {} interface C extends A , B {} \u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u662f public \u7684\uff1b \u63a5\u53e3\u672c\u8eab\u53ea\u80fd\u662f public \u6216\u9ed8\u8ba4\u7684\uff1b \u63a5\u53e3\u4e2d\u7684\u5c5e\u6027\u5b9e\u9645\u4e0a\u9690\u85cf\u4e86 static final \u4fee\u9970\u7b26\uff0c\u56e0\u6b64\u5fc5\u987b\u521d\u59cb\u5316\uff1b 1 2 3 interface A { int n = 10 ; // \u7b49\u4ef7\u4e8epublic static final n = 10; } \u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u62bd\u8c61\u7c7b\uff0c\u53ef\u4ee5\u4e0d\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\uff1b \u63a5\u53e3\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5b9e\u73b0\u4ee3\u7801\u7684\u63a5\u53e3 \u3002 \uff08\u4e8c\uff09\u63a5\u53e3\u7684\u591a\u6001\u7279\u6027 \u00b6 1. \u591a\u6001\u53c2\u6570 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 interface Usb { public void start (); public void end (); } class Camera implements Usb { @Override public void start (){ System . out . println ( \"\u76f8\u673a\u5f00\u59cb\u5de5\u4f5c\" ); } @Override public void stop (){ System . out . println ( \"\u76f8\u673a\u505c\u6b62\u5de5\u4f5c\" ); } } class Phone implements Usb { @Override public void start (){ System . out . println ( \"\u624b\u673a\u5f00\u59cb\u5de5\u4f5c\" ); } @Override public void stop (){ System . out . println ( \"\u624b\u673a\u505c\u6b62\u5de5\u4f5c\" ); } } class Computer { public void work ( Usb usb ) { // \u4f20\u5165\u63a5\u53e3 usb . start (); usb . stop (); } } 2. \u591a\u6001\u6570\u7ec4 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 interface Usb {} class Camera implements Usb {} class Phone implements Usb { public void call (){ System . out . println ( \"\u6253\u7535\u8bdd...\" ) } } public class Index { public static void main ( String [] args ) { Usb [] usbs = new Usb [ 2 ] ; usbs [ 0 ] = new Phone (); usbs [ 1 ] = new Camera (); for ( Usb i : usbs ){ if ( i instanceof Phone ){ (( Phone ) i ). call (); // \u5411\u4e0b\u8f6c\u578b } } } } 3. \u63a5\u53e3\u7684\u591a\u6001\u4f20\u9012\u73b0\u8c61 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 interface IA { void hi (); } interface IB extends IA { } class C implements IB { @Override public void hi () { } } public class Index { public static void main ( String [] args ) { IA a = new C (); a . hi (); } } \uff08\u4e09\uff09\u7ee7\u627f\u4e0e\u63a5\u53e3 \u00b6 \u7ee7\u627f\u4e0e\u63a5\u53e3\u540c\u65f6\u4f7f\u7528\u65f6\uff0c\u76f8\u540c\u7684\u5c5e\u6027\u5fc5\u987b\u660e\u786e\u5176\u542b\u4e49 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 interface A { int x = 10 ; } class B { int x = 20 ; } class C extends B implements A { public void printX (){ // System.out.println(x); // x is ambiguous System . out . println ( A . x ); System . out . println ( super . x ); } } \u56db\u3001\u5185\u90e8\u7c7b \u00b6 \u7c7b\u7684\u4e94\u5927\u6210\u5458\uff1a\u5c5e\u6027\u3001\u65b9\u6cd5\u3001\u6784\u9020\u5668\u3001\u521d\u59cb\u5316\u5757\u3001\u5185\u90e8\u7c7b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class OuterOther { // \u5916\u90e8\u5176\u4ed6\u7c7b } class Outer { // \u5916\u90e8\u7c7b int n = 10 ; // \u5c5e\u6027 Outer () { // \u6784\u9020\u5668 } { // \u521d\u59cb\u5316\u5757 } int getN (){ // \u65b9\u6cd5 return n ; } class Inner { // \u5185\u90e8\u7c7b } } \uff08\u4e00\uff09\u5c40\u90e8\u5185\u90e8\u7c7b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class OuterOther { // 5. \u65e0\u6cd5\u8bbf\u95eeInner } class Outer { private int n = 10 ; private void m1 () {} public void m2 () { final class Inner { // 3. \u4f5c\u7528\u57df\u4ec5\u5728m2()\u4e2d int n = 20 ; // 6. \u53d8\u91cfn\u91cd\u540d public void f1 (){ // 1. \u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458 m1 (); System . out . println ( n ); // 6. \u5c31\u8fd1\u539f\u5219\uff0c\u8f93\u51fa20 System . out . println ( this . n ); // \u5185\u90e8\u7c7b\u7684n System . out . println ( Outer . this . n ); // 6. \u5916\u90e8\u7c7b\u7684n\uff0cthis\u4e3a\u8c03\u7528m2()\u7684\u5bf9\u8c61 } } } { class Inner { // \u4f5c\u7528\u57df\u4ec5\u5728\u521d\u59cb\u5316\u5757\u4e2d public void f1 (){ m1 (); } } } Inner inner = new Inner (); // 4. \u5916\u90e8\u7c7b\u901a\u8fc7\u521b\u5efa\u5b9e\u4f8b\u8bbf\u95ee } \u80fd\u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u5c5e\u6027\uff1b \u4e0d\u80fd\u6dfb\u52a0\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c final \u3001 abstract \u7b49\u53ef\u4ee5\u6dfb\u52a0\uff1b \u4f5c\u7528\u57df\u4ec5\u5728\u65b9\u6cd5/\u4ee3\u7801\u5757\u4e2d\uff1b \u5916\u90e8\u7c7b\u901a\u8fc7\u521b\u5efa\u5185\u90e8\u7c7b\u7684\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\uff1b \u5916\u90e8\u5176\u5b83\u7c7b\uff0c\u4e0d\u80fd\u8bbf\u95ee\u5c40\u90e8\u5185\u90e8\u7c7b\uff08\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff09\uff1b \u5916\u90e8\u7c7b\u548c\u5c40\u90e8\u5185\u90e8\u7c7b\u7684\u6210\u5458\u91cd\u540d\u65f6\uff0c\u9075\u5faa\u5c31\u8fd1\u539f\u5219\uff0c\u82e5\u60f3\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u7c7b\u540d.this.\u6210\u5458 \u53bb\u8bbf\u95ee\uff1b \uff08\u4e8c\uff09\u533f\u540d\u5185\u90e8\u7c7b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 class Outer { private int n = 10 ; public void method () { // \u7f16\u8bd1\u7c7b\u578b\uff1aIA // \u8fd0\u884c\u7c7b\u578b\uff1a\u533f\u540d\u5185\u90e8\u7c7b\uff08\u5e95\u5c42\u4f1a\u5206\u914d\u4e00\u4e2a\u7c7b\u540dOuter$1\uff09 IA tiger = new IA () { @Override public void cry () { System . out . println ( \"\u864e\u5578...\" ); } }; tiger . cry (); // \u7f16\u8bd1\u7c7b\u578b\uff1aFather // \u8fd0\u884c\u7c7b\u578b\uff1a\u533f\u540d\u5185\u90e8\u7c7b\uff08\u5e95\u5c42\u4f1a\u5206\u914d\u4e00\u4e2a\u7c7b\u540dOuter$2\uff09 Father father = new Father ( \"Jack\" ){ @Override public void test (){ System . out . println ( \"\u533f\u540d\u5185\u90e8\u7c7b\u91cd\u5199test()\" ); } } father . test (); } } interface IA { public void cry (); } class Father { Father ( String name ){ } public void test (){ } } \u80fd\u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u7684\uff1b \u4e0d\u80fd\u6dfb\u52a0\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c final \u53ef\u4ee5\u6dfb\u52a0\uff1b \u4f5c\u7528\u57df\u4ec5\u5728\u65b9\u6cd5/\u4ee3\u7801\u5757\u4e2d\uff1b \u672c\u8d28\u662f\u7c7b\uff0c\u540c\u65f6\u8fd8\u662f\u4e00\u4e2a\u5bf9\u8c61\uff1b 1 2 3 4 5 6 7 // \u63a5\u4e0a\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u65b9\u6cd5 new Father ( \"Jack\" ){ @Override public void test (){ System . out . println ( \"\u533f\u540d\u5185\u90e8\u7c7b\u91cd\u5199test()\" ); } }. test (); jdk \u5e95\u5c42\u4f1a\u7ed9\u533f\u540d\u5185\u90e8\u7c7b\u5206\u914d\u540d\u5b57\uff1a\u5916\u90e8\u7c7b\u540d$\u7f16\u53f7\uff1b \u533f\u540d\u5185\u90e8\u7c7b\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff08\u6ce8\u610f\uff0c\u4e0d\u662f\u8bf4\u533f\u540d\u5185\u90e8\u7c7b\u7684\u5bf9\u8c61\uff09\uff1b \u5916\u90e8\u5176\u5b83\u7c7b\uff0c\u4e0d\u80fd\u8bbf\u95ee\u533f\u540d\u5185\u90e8\u7c7b\uff08\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff09\uff1b \u5916\u90e8\u7c7b\u548c\u533f\u540d\u5185\u90e8\u7c7b\u7684\u6210\u5458\u91cd\u540d\u65f6\uff0c\u9075\u5faa\u5c31\u8fd1\u539f\u5219\uff0c\u82e5\u60f3\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u7c7b\u540d.this.\u6210\u5458 \u53bb\u8bbf\u95ee\uff1b \u4e0d\u80fd\u91cd\u5199\u6784\u9020\u5668\u3002 \uff08\u4e09\uff09\u6210\u5458\u5185\u90e8\u7c7b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Outer { private int n = 10 ; private class Inner { void fun (){ System . out . println ( n ); } }; public void printInnerFun (){ Inner inner = new Inner (); inner . fun (); } } \u80fd\u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u7684\uff1b \u672c\u8d28\u662f\u7c7b\uff0c\u540c\u65f6\u4e5f\u662f\u5c5e\u6027\uff1b\u56e0\u6b64\uff0c \u53ef\u4ee5\u52a0\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\u4f53 \uff1b \u5916\u90e8\u7c7b\u8bbf\u95ee\u6210\u5458\u5185\u90e8\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u8c61\uff1b \u5916\u90e8\u5176\u4ed6\u7c7b\u8bbf\u95ee\u6210\u5458\u5185\u90e8\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // 1. \u901a\u8fc7\u5916\u90e8\u7c7b\u521b\u5efa\u5bf9\u8c61 Outer outer = new Outer (); Outer . Inner inner = outer . new Inner (); // 2. \u5728\u5916\u90e8\u7c7b\u4e2d\u7f16\u5199\u65b9\u6cd5\uff0c\u8fd4\u56de\u5185\u90e8\u7c7b\u5bf9\u8c61 class Outer { // ... public Inner getInner (){ return new Inner (); } // ... } \u5916\u90e8\u7c7b\u548c\u6210\u5458\u5185\u90e8\u7c7b\u7684\u6210\u5458\u91cd\u540d\u65f6\uff0c\u9075\u5faa\u5c31\u8fd1\u539f\u5219\uff0c\u82e5\u60f3\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u7c7b\u540d.this.\u6210\u5458 \u53bb\u8bbf\u95ee\u3002 \uff08\u56db\uff09\u9759\u6001\u5185\u90e8\u7c7b \u00b6 \u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u9759\u6001\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u7684\uff1b \u672c\u8d28\u662f\u7c7b\uff0c\u540c\u65f6\u4e5f\u662f\u9759\u6001\u5c5e\u6027\uff1b\u56e0\u6b64\uff0c \u53ef\u4ee5\u52a0\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\u4f53 \uff1b \u5916\u90e8\u7c7b\u8bbf\u95ee\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u8c61\uff1b \u5916\u90e8\u5176\u4ed6\u7c7b\u8bbf\u95ee\u9759\u6001\u5185\u90e8\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 1. \u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8bbf\u95ee Outer . Inner inner = new Outer . Inner (); // 2. \u5728\u5916\u90e8\u7c7b\u4e2d\u7f16\u5199\u65b9\u6cd5\uff0c\u8fd4\u56de\u5185\u90e8\u7c7b\u5bf9\u8c61 class Outer { // ... public Inner getInner (){ return new Inner (); } public static Inner getInner_ (){ return new Inner (); } // ... } \u5916\u90e8\u7c7b\u548c\u6210\u5458\u5185\u90e8\u7c7b\u7684\u6210\u5458\u91cd\u540d\u65f6\uff0c\u9075\u5faa\u5c31\u8fd1\u539f\u5219\uff0c\u82e5\u60f3\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u7c7b\u540d.\u6210\u5458 \u53bb\u8bbf\u95ee\u3002 \u4e94\u3001\u679a\u4e3e \u00b6 \u4e00\u7ec4\u6709\u9650\u5e38\u91cf\u7684\u96c6\u5408 \u4e0d\u80fd\u4fee\u6539 \uff08\u4e00\uff09\u81ea\u5b9a\u4e49\u679a\u4e3e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 class Season { private String name ; private String detail ; // \u56fa\u5b9a\u51e0\u4e2apublic static\u5bf9\u8c61 // \u52a0\u5165final\u4fee\u9970\u7b26\u4f18\u5316 public static final Season SPRING = new Season ( \"\u6625\u5929\" , \"\u82b1\" ); public static final Season SUMMER = new Season ( \"\u590f\u5929\" , \"\u897f\u74dc\" ); public static final Season AUTUMN = new Season ( \"\u79cb\u5929\" , \"\u67ab\u53f6\" ); public static final Season WINTER = new Season ( \"\u51ac\u5929\" , \"\u96ea\" ); // \u79c1\u6709\u5316\u6784\u9020\u5668\uff0c\u907f\u514d\u591a\u4f59\u7684\u5bf9\u8c61\u4ea7\u751f private Season ( String name , String detail ){ this . name = name ; this . detail = detail ; } // \u53bb\u9664set\u65b9\u6cd5\uff0c\u907f\u514d\u4fee\u6539\u5c5e\u6027 public String getName () { return name ; } public String getDetail () { return detail ; } } \uff08\u4e8c\uff09enum\u5173\u952e\u5b57\u5b9e\u73b0 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 enum Season { // \u5fc5\u987b\u5199\u5728\u6700\u524d\u9762\uff0c\u4e14\u5fc5\u987b\u7528\u9017\u53f7\u9694\u5f00 SPRING ( \"\u6625\u5929\" , \"\u6e29\u6696\" ), SUMMER ( \"\u590f\u5929\" , \"\u897f\u74dc\" ), AUTUMN ( \"\u79cb\u5929\" , \"\u51c9\u723d\" ), WINTER ( \"\u51ac\u5929\" , \"\u96ea\" ); private String name ; private String detail ; // \u79c1\u6709\u5316\u6784\u9020\u5668\uff0c\u907f\u514d\u591a\u4f59\u7684\u5bf9\u8c61\u4ea7\u751f private Season ( String name , String detail ){ this . name = name ; this . detail = detail ; } // \u53bb\u9664set\u65b9\u6cd5\uff0c\u907f\u514d\u4fee\u6539\u5c5e\u6027 public String getName () { return name ; } public String getDetail () { return detail ; } } \u5982\u679c\u662f\u65e0\u53c2\u6784\u9020\u53ef\u4ee5\u7b80\u5199\u4e3a\uff1a 1 2 3 4 // \u65e0\u53c2\u6784\u9020\u7684\u56db\u4e2aSeason\u5bf9\u8c61 enum Season { SPRING , SUMMER , AUTUMN , WINTER ; } \u4f8b\u9898\uff1a 1 2 3 4 5 6 enum Gender { BOY , GIRL ; } // enum \u7c7b\u7684 toString() \u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u679a\u4e3e\u9879\u7684 name System . out . println ( Gender . BOY ); // \u8f93\u51faBOY \uff08\u4e09\uff09\u5e38\u7528\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 Season autumn = Season . AUTUMN ; Season summer = Season . SUMMER ; System . out . println ( autumn . ordinal ()); // \u8f93\u51fa2\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb System . out . println ( autumn . name ()); // \u8f93\u51faAUTUMN Season [] values = autumn . values (); //\u8fd4\u56de\u6240\u6709\u679a\u4e3e\u9879 Season autumn2 = Season . valueOf ( \"AUTUMN\" ); // \u6309\u540d\u79f0\u8fd4\u56de\u5bf9\u5e94\u679a\u4e3e\u9879\uff0cautumn2\u548cautumn\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 System . out . println ( summer . compareTo ( autumn )); // \u8f93\u51fa-1\uff0c\u662f\u4e24\u4e2a\u7684\u5e8f\u53f7\u76f8\u51cf\u7684\u7ed3\u679c \u6ce8\u610f\uff1a enum \u6709\u9690\u5f0f\u7ee7\u627f Enum \u7c7b\uff0c\u56e0\u6b64\u4e0d\u80fd\u7ee7\u627f\u5176\u4ed6\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9e\u73b0\u63a5\u53e3\u3002 \u516d\u3001\u6ce8\u89e3\uff08Annotation\uff09 \u00b6 \u53c8\u79f0\u4e3a\u5143\u6570\u636e( Metadata ) \uff08\u4e00\uff09@Override \u00b6 \u7528\u4e8e\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5 1 2 3 4 @Target ( ElementType . METHOD ) // \u9650\u5236\u6ce8\u89e3\u4f7f\u7528\u5728\u54ea\u4e9b\u5143\u7d20\u4e0a @Retention ( RetentionPolicy . SOURCE ) // \u9650\u5236\u6ce8\u89e3\u53ea\u4fdd\u7559\u5728\u6e90\u6587\u4ef6\uff0c\u5176\u4ed6\u9009\u9879\u6709:CLASS\u3001RUNTIME public @interface Override { // @interface\u8868\u793a\u662f\u6ce8\u89e3\uff0c\u4e0d\u662f\u63a5\u53e3 } Target \u548c Retention \u662f\u4fee\u9970\u6ce8\u89e3\u7684\u6ce8\u89e3\uff0c\u79f0\u4e3a\u5143\u6ce8\u89e3\u3002 \uff08\u4e8c\uff09@Deprecated \u00b6 \u8868\u793a\u67d0\u4e2a\u5143\u7d20\uff08\u7c7b\u3001\u65b9\u6cd5\u7b49\uff09\u5df2\u8fc7\u65f6\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528 \u53ef\u4ee5\u7528\u4e8e\u7248\u672c\u5347\u7ea7\u65f6\u7684\u8fc7\u6e21 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 @Documented // \u8868\u793a\u8be5\u6ce8\u89e3\u5e94\u5f53\u88abjavadoc\u5de5\u5177\u8bb0\u5f55 @Retention ( RetentionPolicy . RUNTIME ) @Target ( value = { CONSTRUCTOR , FIELD , LOCAL_VARIABLE , METHOD , PACKAGE , MODULE , PARAMETER , TYPE }) public @interface Deprecated { /** * Returns the version in which the annotated element became deprecated. * The version string is in the same format and namespace as the value of * the {@code @since} javadoc tag. The default value is the empty * string. * * @return the version string * @since 9 */ String since () default \"\" ; /** * Indicates whether the annotated element is subject to removal in a * future version. The default value is {@code false}. * * @return whether the element is subject to removal * @since 9 */ boolean forRemoval () default false ; } \uff08\u4e09\uff09@SuppressWarning \u00b6 \u6291\u5236\uff08\u4e0d\u663e\u793a\uff09\u7f16\u8bd1\u5668\u8b66\u544a \u5e38\u7528\u8b66\u544a\u7c7b\u578b\uff1a unchecked \u672a\u68c0\u67e5\u7684\u8b66\u544a rawtypes \u6ca1\u6709\u6307\u5b9a\u6cdb\u578b\u7684\u8b66\u544a unused \u6ca1\u6709\u4f7f\u7528\u67d0\u4e2a\u53d8\u91cf\u7684\u8b66\u544a all \u6240\u6709\u8b66\u544a \u70b9\u51fb\u5de6\u4fa7\u9ec4\u8272\u63d0\u9192\uff0c\u5373\u53ef\u5feb\u901f\u6dfb\u52a0 SupressWarning 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Target ({ TYPE , FIELD , METHOD , PARAMETER , CONSTRUCTOR , LOCAL_VARIABLE , MODULE }) @Retention ( RetentionPolicy . SOURCE ) public @interface SuppressWarnings { /** * The set of warnings that are to be suppressed by the compiler in the * annotated element. Duplicate names are permitted. The second and * successive occurrences of a name are ignored. The presence of * unrecognized warning names is <i>not</i> an error: Compilers must * ignore any warning names they do not recognize. They are, however, * free to emit a warning if an annotation contains an unrecognized * warning name. * * <p> The string {@code \"unchecked\"} is used to suppress * unchecked warnings. Compiler vendors should document the * additional warning names they support in conjunction with this * annotation type. They are encouraged to cooperate to ensure * that the same names work across multiple compilers. * @return the set of warnings to be suppressed */ String [] value (); } \uff08\u56db\uff09\u5143\u6ce8\u89e3 \u00b6 1. Retention \u00b6 \u7528\u4e8e\u6307\u5b9a\u6ce8\u89e3\u53ef\u4ee5\u4fdd\u7559\u7684\u65f6\u957f \u53c2\u6570\uff1a 1) RetentionPolicy.SOURCE \uff1a\u6ce8\u89e3\u53ea\u4fdd\u7559\u5728\u6e90\u6587\u4ef6\u4e2d 2) RetentionPolicy.CLASS \uff1a\u6ce8\u89e3\u4fdd\u7559\u5230\u7f16\u8bd1\u540e\uff0c\u8bb0\u5f55\u5728 class \u6587\u4ef6\u4e2d 3) RetentionPolicy.RUNTIME \uff1a\u6ce8\u89e3\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u8be5\u6ce8\u89e3 2. Target \u00b6 \u6307\u5b9a\u80fd\u591f\u4fee\u9970\u7684\u7a0b\u5e8f\u5143\u7d20\uff1a\u7c7b\u3001\u65b9\u6cd5\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u5c5e\u6027\u3001\u6784\u9020\u5668\u3001\u53c2\u6570\u3001\u5305\u3001\u6a21\u5757\u7b49 3. Documented \u00b6 \u6307\u5b9a\u5f53\u524d\u6ce8\u89e3\u80fd\u88ab javadoc \u63d0\u53d6\u6210\u6587\u6863 4. Inherited \u00b6 \u88ab\u4fee\u9970\u7684\u6ce8\u89e3\u5c06\u5177\u6709\u7ee7\u627f\u6027\uff0c\u82e5\u67d0\u4e2a\u7c7b\u7684\u6ce8\u89e3\u88ab Inherited \u4fee\u9970\uff0c\u5219\u5b83\u7684\u5b50\u7c7b\u81ea\u52a8\u5177\u6709\u8be5\u6ce8\u89e3 \u4e03\u3001\u5f02\u5e38 \u00b6 \uff08\u4e00\uff09try-catch \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 try { // \u53ef\u80fd\u51fa\u9519\u7684\u4ee3\u7801\u5757 } catch ( NullPointerException e ) { // \u5f02\u5e38\u53d1\u751f\u65f6\u4f1a\u76f4\u63a5\u8fdb\u5165catch\u5757\uff0c\u4e0d\u6267\u884c\u5f02\u5e38\u540e\u9762\u7684\u4ee3\u7801\uff1b\u82e5\u6ca1\u6709\u5f02\u5e38\u5219\u4e0d\u4f1a\u8fdb\u5165 System . out . println ( e . getMessage ()); } catch ( ArithmeticException e ) { System . out . println ( e . getMessage ()); } catch ( Exception e ) { // \u5b50\u7c7b\u5f02\u5e38\u8981\u5199\u5728\u7236\u7c7b\u5f02\u5e38\u524d\u9762 e . printStackTrace (); System . out . println ( e . getMessage ()); } finally { // \u4e0d\u7ba1\u6709\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u5fc5\u5b9a\u6267\u884c\u7684\u4ee3\u7801 } catch \u4e5f\u53ef\u4ee5\u4e0d\u5199\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 try { int n1 = 10 ; int n2 = 0 ; System . out . println ( n1 / n2 ); } finally { System . out . println ( \"finally\" ); } System . out . println ( \"\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\" ); /* \u8f93\u51fa\uff1a finally */ \u867d\u7136 finally \u6267\u884c\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u6355\u83b7\u5f02\u5e38\uff0c\u4e0d\u4f1a\u8f93\u51fa\u540e\u9762\u7684\u5185\u5bb9\u3002 \uff08\u4e8c\uff09\u5f02\u5e38\u5206\u7c7b \u00b6 \u5f02\u5e38\\left\\{ \\begin{aligned} Error \\\\ Exception \\end{aligned} \\right. \u5f02\u5e38\\left\\{ \\begin{aligned} Error \\\\ Exception \\end{aligned} \\right. 1. Error \u00b6 Java \u865a\u62df\u673a\u65e0\u6cd5\u89e3\u51b3\u7684\u4e25\u91cd\u9519\u8bef\uff0c\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\uff1a JVM \u7cfb\u7edf\u5185\u90e8\u9519\u8bef\u3001\u8d44\u6e90\u8017\u5c3d\u7b49\u3002 Error\\left\\{ \\begin{aligned} StackOverFlow \\\\ OutOfMemory \\end{aligned} \\right. Error\\left\\{ \\begin{aligned} StackOverFlow \\\\ OutOfMemory \\end{aligned} \\right. 2. Exception \u00b6 \u5176\u4ed6\u7f16\u7a0b\u9519\u8bef\uff0c\u6216\u5076\u7136\u7684\u5916\u5728\u56e0\u7d20\u5bfc\u81f4\u7684\u4e00\u822c\u6027\u95ee\u9898\uff1a\u7a7a\u6307\u9488\u8bbf\u95ee\u3001\u8bfb\u53d6\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u3001\u7f51\u7edc\u4e2d\u65ad\u7b49\u3002 Exception \\left\\{ \\begin{aligned} 1) \u8fd0\u884c\u65f6\u5f02\u5e38\uff08\u9ed8\u8ba4throws\u629b\u7ed9\u7236\u7c7b\uff0c\u76f4\u5230JVM\uff09 \\\\ 2) \u7f16\u8bd1\u65f6\u5f02\u5e38\uff08\u5fc5\u987b\u7528try-catch\u6216throws\u5904\u7406\uff09 \\end{aligned} \\right. Exception \\left\\{ \\begin{aligned} 1) \u8fd0\u884c\u65f6\u5f02\u5e38\uff08\u9ed8\u8ba4throws\u629b\u7ed9\u7236\u7c7b\uff0c\u76f4\u5230JVM\uff09 \\\\ 2) \u7f16\u8bd1\u65f6\u5f02\u5e38\uff08\u5fc5\u987b\u7528try-catch\u6216throws\u5904\u7406\uff09 \\end{aligned} \\right. 1) \u8fd0\u884c\u65f6\u5f02\u5e38\\left\\{ \\begin{aligned} NullPointerException \uff08\u7a7a\u6307\u9488\u5f02\u5e38\uff09 \\\\ ClassCastException \uff08\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff09 \\\\ NumberFormatException \uff08\u6570\u5b57\u683c\u5f0f\u5f02\u5e38\uff09 \\\\ ArrayIndexOutOfBoundsException \uff08\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\uff09 \\\\ ArithmeticException\uff08\u7b97\u672f\u8fd0\u7b97\u5f02\u5e38\uff09 \\end{aligned} \\right. 1) \u8fd0\u884c\u65f6\u5f02\u5e38\\left\\{ \\begin{aligned} NullPointerException \uff08\u7a7a\u6307\u9488\u5f02\u5e38\uff09 \\\\ ClassCastException \uff08\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff09 \\\\ NumberFormatException \uff08\u6570\u5b57\u683c\u5f0f\u5f02\u5e38\uff09 \\\\ ArrayIndexOutOfBoundsException \uff08\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\uff09 \\\\ ArithmeticException\uff08\u7b97\u672f\u8fd0\u7b97\u5f02\u5e38\uff09 \\end{aligned} \\right. 2) \u7f16\u8bd1\u65f6\u5f02\u5e38 \\left\\{ \\begin{aligned} FileNotFoundException \uff08\u627e\u4e0d\u5230\u6587\u4ef6\u5f02\u5e38\uff09 \\\\ ClassNotFoundException \uff08\u627e\u4e0d\u5230\u7c7b\u5f02\u5e38\uff09 \\\\ IOException \uff08\u6587\u4ef6\u5f02\u5e38\uff09 \\\\ SQLException \uff08\u6570\u636e\u5e93\u5f02\u5e38\uff09 \\\\ EOFException \uff08\u64cd\u4f5c\u6587\u4ef6\u5230\u6587\u4ef6\u672b\u5c3e\uff09 \\\\ IllegalArgumentException \uff08\u53c2\u6570\u5f02\u5e38\uff09 \\end{aligned} \\right. 2) \u7f16\u8bd1\u65f6\u5f02\u5e38 \\left\\{ \\begin{aligned} FileNotFoundException \uff08\u627e\u4e0d\u5230\u6587\u4ef6\u5f02\u5e38\uff09 \\\\ ClassNotFoundException \uff08\u627e\u4e0d\u5230\u7c7b\u5f02\u5e38\uff09 \\\\ IOException \uff08\u6587\u4ef6\u5f02\u5e38\uff09 \\\\ SQLException \uff08\u6570\u636e\u5e93\u5f02\u5e38\uff09 \\\\ EOFException \uff08\u64cd\u4f5c\u6587\u4ef6\u5230\u6587\u4ef6\u672b\u5c3e\uff09 \\\\ IllegalArgumentException \uff08\u53c2\u6570\u5f02\u5e38\uff09 \\end{aligned} \\right. \uff08\u4e09\uff09\u5f02\u5e38\u4f53\u7cfb\u56fe \u00b6 \uff08\u56db\uff09throws \u00b6 \u5c06\u9519\u8bef\u629b\u51fa\u7ed9\u8c03\u7528\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u76f4\u5230\u629b\u7ed9 JVM \uff08\u82e5\u7a0b\u5e8f\u5458\u6ca1\u6709\u663e\u793a\u5730\u5904\u7406\u5f02\u5e38\uff0c\u9ed8\u8ba4\u4f7f\u7528 throws \uff09 throws \u53ef\u4ee5\u629b\u51fa\u4e00\u7cfb\u5217\u5f02\u5e38 throws \u629b\u51fa\u7684\u5f02\u5e38\u53ef\u4ee5\u662f\u53d1\u751f\u5f02\u5e38\u7684\u7236\u7c7b \u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\u65f6\uff0c\u629b\u51fa\u7684\u5f02\u5e38\u5fc5\u987b\u662f \u7236\u7c7b\u5f02\u5e38 \u6216 \u7236\u7c7b\u5f02\u5e38\u7684\u5b50\u7c7b \uff1b try-catch \u548c throws \u4e8c\u9009\u4e00\uff0c\u6709\u4e86 try-catch \u53ef\u4ee5\u4e0d\u5fc5\u5199 throws ; \u6ce8\u610f\uff0c\u5b50\u7c7b\u629b\u51fa\u7684\u7f16\u8bd1\u65f6\u5f02\u5e38\uff0c\u7236\u7c7b\u4e00\u5b9a\u8981\u5904\u7406\u6216\u7ee7\u7eed\u629b\u51fa\uff0c\u800c\u8fd0\u884c\u5f02\u5e38\u4e0d\u7528\uff0c\u56e0\u4e3a\u6709\u9ed8\u8ba4\u5904\u7406\u673a\u5236\u3002 \u533a\u522b \u5b9a\u4e49 \u4f4d\u7f6e \u540e\u9762\u8ddf\u7684\u4e1c\u897f throws \u5f02\u5e38\u5904\u7406\u7684\u65b9\u5f0f \u65b9\u6cd5\u7b7e\u540d\u540e \u5f02\u5e38\u7c7b\u578b throw \u751f\u6210\u5f02\u5e38\u5bf9\u8c61 \u65b9\u6cd5\u4f53\u4e2d \u5f02\u5e38\u5bf9\u8c61 \uff08\u4e94\uff09\u81ea\u5b9a\u4e49\u5f02\u5e38 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Index { public static void main ( String [] args ) { int age = 150 ; if ( ! ( age >= 0 && age <= 120 )){ throw new AgeException ( \"\u5e74\u9f84\u9700\u8981\u57280\u5230120\u5c81\u4e4b\u95f4\uff01\" ); } System . out . println ( \"\u5e74\u9f84\u6b63\u786e\uff01\" ); } } class AgeException extends RuntimeException { AgeException ( String message ){ super ( message ); } } \u629b\u51fa\u6548\u679c\uff1a \u6ce8\u610f\uff0c\u81ea\u5b9a\u4e49\u5f02\u5e38\u4e00\u822c\u90fd\u7ee7\u627f RuntimeException \uff0c\u5982\u679c\u7ee7\u627f\u7f16\u8bd1\u65f6\u5f02\u5e38\u8fd8\u8981\u624b\u52a8\u629b\u51fa\uff0c\u6bd4\u8f83\u9ebb\u70e6\u3002 \uff08\u516d\uff09\u5f02\u5e38\u4f8b\u9898 \u00b6 \u4f8b\u4e00\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 try { String [] arr = new String [ 3 ] ; // 1 if ( arr [ 1 ] . equals ( \"hello\" )) { // 2 System . out . println ( arr [ 1 ] ); } else { arr [ 3 ] = \"world\" ; } return 1 ; } catch ( ArrayIndexOutOfBoundsException e ){ return 2 ; } catch ( NullPointerException e ){ // 3 return 3 ; // 4 } finally { // 5 return 4 ; // 6 } // \u8fd4\u56de4 \u4f8b\u4e8c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 int i = 1 ; try { i ++ ; String [] arr = new String [ 3 ] ; if ( arr [ 1 ] . equals ( \"hello\" )) { System . out . println ( arr [ 1 ] ); } else { arr [ 3 ] = \"world\" ; } return i ; } catch ( ArrayIndexOutOfBoundsException e ) { return i ; } catch ( NullPointerException e ) { return ++ i ; // \u4e34\u65f6\u4fdd\u5b58i\u7684\u503c\uff1aint tmp = i; } finally { ++ i ; System . out . println ( \"i = \" + i ); // i = 4 } // \u8f93\u51fai = 4\uff0c\u8fd4\u56de3 \u4f8b\u4e09\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public static void main ( String [] args ) { try { func (); System . out . println ( \"A\" ); } catch ( Exception e ){ System . out . println ( \"C\" ); } System . out . println ( \"D\" ); } public static void func (){ try { throw new RuntimeException (); } finally { System . out . println ( \"B\" ); } } /* \u8f93\u51fa\uff1a B C D */ \u4e60\u9898\uff1a \u8ba9\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u5982\u679c\u8f93\u5165\u7684\u4e0d\u662f\u6574\u6570\uff0c\u5c31\u4e00\u76f4\u91cd\u65b0\u8f93\u5165\u3002\u8981\u6c42\u7528\u5f02\u5e38\u5b9e\u73b0\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) { Scanner scanner = new Scanner ( System . in ); int num = 0 ; while ( true ) { try { String str = scanner . next (); num = Integer . parseInt ( str ); break ; } catch ( NumberFormatException e ) { System . out . println ( \"\u4f60\u8f93\u5165\u7684\u4e0d\u662f\u6574\u6570\" ); } } System . out . println ( \"\u4f60\u8f93\u5165\u7684\u662f\uff1a\" + num ); } \u5982\u679c\u8f93\u5165\u6b63\u786e\uff0c\u5219\u76f4\u63a5 break \uff0c\u5426\u5219\u4f1a\u88ab catch \uff0c\u7ee7\u7eed\u8fdb\u5165\u5faa\u73af\u3002 \u516b\u3001\u5e38\u7528\u7c7b \u00b6 \uff08\u4e00\uff09\u5305\u88c5\u7c7b \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b \u5305\u88c5\u7c7b boolean Boolean char Character byte Byte short Short int Integer long Long float Float double Double Boolean\u548cCharacter\u7c7b\u7ed3\u6784\u56fe\uff1a \u5176\u4f59\u5305\u88c5\u7c7b\u7ed3\u6784\u56fe\u5982\u4e0b\uff1a 1. \u88c5\u7bb1\u4e0e\u62c6\u7bb1 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 int n = 100 ; // \u624b\u52a8\u88c5\u7bb1 Integer integer = new Integer ( n ); Integer integer2 = Integer . valueOf ( n ); // \u624b\u52a8\u62c6\u7bb1 int n2 = integer . intValue (); // jdk5\u4ee5\u540e // \u81ea\u52a8\u88c5\u7bb1 Integer integer3 = n ; // \u5e95\u5c42\u4f7f\u7528\u4e86Integer.valueOf(n); // \u81ea\u52a8\u62c6\u7bb1 int n3 = integer ; // \u5e95\u5c42\u4f7f\u7528\u4e86integer.intValue() 2. \u5305\u88c5\u7c7b\u4e0eString\u76f8\u4e92\u8f6c\u6362 \u00b6 \u5305\u88c5\u7c7b\u8f6cString\uff1a String str = n + \"\"; String str = n.toSting(); String str = String.valueOf(n); String\u8f6c\u5305\u88c5\u7c7b\uff1a Integer n = Integer.parseInt(str); Integer n = new Integer(str); 3. \u4f8b\u9898 \u00b6 \u4f8b1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 1 Object obj = true ? new Integer ( 1 ): new Double ( 2.0 ); System . out . println ( obj ); // \u8f93\u51fa 1.0 // \u56e0\u4e3a\u4e09\u5143\u8fd0\u7b97\u7b26\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u8981\u628a\u7c7b\u578b\u8f6c\u6362\u4e3a\u8303\u56f4\u5927\u7684 // 2 Object obj ; if ( true ){ obj = new Integer ( 1 ); } else { obj = new Double ( 2.0 ); } System . out . println ( obj ); // \u8f93\u51fa 1 \u4f8b2\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 1 Integer n1 = new Integer ( 1 ); Integer n2 = new Integer ( 1 ); System . out . println ( n1 == n2 ); // false // 2 Integer n3 = 1 ; Integer n4 = 1 ; System . out . println ( n3 == n4 ); // true // 3 Integer n5 = 128 ; Integer n6 = 128 ; System . out . println ( n5 == n6 ); // false \u67e5\u770b\u6e90\u7801\u53ef\u77e5\uff0c\u81ea\u52a8\u88c5\u7bb1\u8c03\u7528\u4e86 valueOf() \u65b9\u6cd5\uff1a [-128,127] [-128,127] \u8303\u56f4\u5185\u7684\u6570\uff0c\u8fd4\u56de\u7684\u662f cache \u6570\u7ec4\u4e2d\u7684\u503c\uff0c\u56e0\u6b64\u5730\u5740\u4e00\u6837\uff1b\u8303\u56f4\u5916\u7684\u6570\u662f\u76f4\u63a5 new \u7684 Integer \u5bf9\u8c61\u3002 \u4f8b3\uff1a 1 2 3 4 5 6 7 Integer n1 = 127 ; int n2 = 127 ; System . out . println ( n1 == n2 ); // true int n3 = 127 ; Integer n4 = 127 ; System . out . println ( n3 == n4 ); // true \u4e3b\u8981\u6709\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5224\u65ad\u7684\u5c31\u662f\u503c\u662f\u5426\u76f8\u7b49\u3002 \uff08\u4e8c\uff09String\u7c7b \u00b6 1. \u7279\u70b9 \u00b6 \u5b9e\u73b0\u4e86 Serializabele \u63a5\u53e3\u53ef\u4ee5\u4e32\u884c\u5316\uff0c\u53ef\u7528\u4e8e\u7f51\u7edc\u4f20\u8f93\uff1b \u5b9e\u73b0\u4e86 Comparable \u63a5\u53e3\u53ef\u4ee5\u76f8\u4e92\u6bd4\u8f83\uff1b String name = \"Kun\"; \u4e2d\u7684 \"Kun\" \u662f\u5e38\u91cf\uff0c\u4fdd\u5b58\u5728\u5e38\u91cf\u6c60\u4e2d\uff0c\u518d\u7531 name \u6307\u5411\uff1b String \u7c7b\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027\u7528\u4e8e\u5b58\u653e\u5b57\u7b26\u4e32\uff1a private final char value[] \uff0c value[] \u662f\u4e00\u4e2a final \u7c7b\u578b\uff0c\u8bf4\u660e\u5b83\u7684\u5730\u5740\u4e0d\u53ef\u4ee5\u4fee\u6539\uff1b \u5bf9\u5b57\u7b26\u4e32\u505a\u5927\u91cf\u4fee\u6539\u65f6\uff0c\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 String \u3002 2. \u5b57\u7b26\u4e32\u8fde\u63a5\u7684\u6548\u7387\u95ee\u9898 \u00b6 String str = \"Hello\"+\"World\"; \u65f6\uff0c\u4f1a\u76f4\u63a5\u4ece\u5e38\u91cf\u6c60\u4e2d\u83b7\u53d6\u5e76\u8fde\u63a5\uff1b String str = str1 + str2; \u65f6\uff0c\u5728 JDK8 \u4e2d\uff0c\u4f1a\u521b\u5efa StringBuilder \u5bf9\u8c61\u5e76\u4f7f\u7528append\u8fdb\u884c\u8fde\u63a5\uff0c\u8fde\u63a5\u7ed3\u675f\u540e\u518d\u901a\u8fc7 toStrnig() \u65b9\u6cd5\u8fd4\u56deString\uff0c\u56e0\u6b64\u6548\u7387\u6781\u4f4e\uff1b\u800c JDK9 \u4e2d\uff0c\u76f4\u63a5\u901a\u8fc7 makeConcatWithConstants \u65b9\u6cd5\u8fde\u63a5\u5b57\u7b26\u4e32\uff0c\u5bf9\u5176\u8fdb\u884c\u4e86\u4e00\u5b9a\u4f18\u5316\u3002 3. String\u7684\u5185\u5b58\u5e03\u5c40 \u00b6 String str = \"Hello\" str \u76f4\u63a5\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u7684\u5730\u5740\u3002 String str = new String(\"Hello\") \u5806\u4e2d\u5f00\u8f9f\u7a7a\u95f4\uff0c str \u6307\u5411\u5806\uff0c\u5bf9\u8c61\u5185\u7684 value \u5c5e\u6027\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u7684\u5730\u5740\u3002 4. \u4f8b\u9898 \u00b6 \u4f8b1\uff1a 1 2 3 4 String a = \"abc\" ; String b = \"abc\" ; System . out . println ( a . equals ( b )); // true System . out . println ( a == b ); // true \u4f8b2\uff1a 1 2 3 4 5 6 7 String a = \"hello\" ; String b = new String ( \"hello\" ); System . out . println ( a . equals ( b )); // true System . out . println ( a == b ); // false System . out . println ( a == b . intern ()); // true System . out . println ( b == b . intern ()); // false intern() \u65b9\u6cd5\uff1a\u8fd4\u56de\u5e38\u91cf\u6c60\u4e2d\u8be5\u5b57\u7b26\u4e32\u7684\u5730\u5740\uff1b\u82e5\u6ca1\u6709\uff0c\u5c31\u5c06\u5176\u6dfb\u52a0\u5230\u6c60\u4e2d\uff0c\u518d\u8fd4\u56de\u5730\u5740\u3002\u4ee5\u4e0a\u9762\u7684\u56fe\u4e3a\u4f8b\uff0c str \u7684\u5730\u5740\u662f ox33 \uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u662f 0x99 \u3002 \u4f8b3\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 String a = \"hello\" ; String b = \"hi\" ; // \u4ea7\u751f\u4e862\u4e2a\u5bf9\u8c61 // \uff08\u8fd9\u91cc\u628a\u5f15\u7528\u6307\u5411\u7684\u7a7a\u95f4\u7b97\u6210\u4e00\u4e2a\u5bf9\u8c61\uff09 String c = \"Hello\" + \"World\" ; // \u4ea7\u751f\u4e861\u4e2a\u5bf9\u8c61 // \u7f16\u8bd1\u5668\u4f1a\u4f18\u5316\u4e3a\"HelloWord\" String d = \"Hello\" ; String e = \"World\" ; String f = d + e ; // \u4ea7\u751f\u4e864\u4e2a\u5bf9\u8c61 // 1. d \u548c e \u5404\u5360\u4e00\u4e2a\u5bf9\u8c61 // 2. \u521b\u5efa\u4e86\u4e00\u4e2aStringBuilder\u5bf9\u8c61builder // 3. \u8be5\u5bf9\u8c61\u901a\u8fc7\u4e24\u6b21\u6267\u884cappend()\u65b9\u6cd5\uff0c\u8fde\u63a5\u5b57\u7b26\u4e32HelloWorld // 4. f = builder.toString();\u521b\u5efa\u4e86\u4e00\u4e2aString\u5bf9\u8c61 \u4f8b4\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public class Index { String str = new String ( \"hello\" ); char [] ch = new char [] { 'j' , 'a' , 'v' , 'a' }; // \u53ea\u6709\u8fd9\u79cd\u5199\u6cd5\u624d\u80fd\u76f4\u63a5\u8f93\u51fachar[] public static void main ( String [] args ) { Index index = new Index (); index . change ( index . str , index . ch ); System . out . print ( index . str + \" \" ); System . out . println ( index . ch ); } public void change ( String str , char [] ch ) { str = \"java\" ; ch [ 0 ] = 'h' ; } } // \u8f93\u51fa\uff1ahello hava \u4f8b4\u8fc7\u7a0b\u5206\u6790\u5982\u4e0b\uff1a \u6ca1\u6709\u6267\u884c change() \u65b9\u6cd5\u524d\uff0c main \u65b9\u6cd5\u4e2d\u7684 index \u5f15\u7528\u6307\u5411\u5806\u4e2d\u7684\u5bf9\u8c61\u3002 \u5bf9\u8c61\u4e2d\u6709 str \u548c ch \u4e24\u4e2a\u5f15\u7528\uff0c str \u6307\u5411\u5806\u4e2d\u7684 String \u5bf9\u8c61\uff0c ch \u6307\u5411\u5806\u4e2d\u7684 char[] \u5bf9\u8c61\u3002 String \u5bf9\u8c61\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u7684 hello \u5e38\u91cf\uff0c\u800c char[] \u5bf9\u8c61\u4e2d\u76f4\u63a5\u4fdd\u5b58\u4e86\u5b57\u7b26\u503c\u3002 \u6267\u884c\u4e86 change \u65b9\u6cd5\u540e\uff0c\u6808\u4e2d\u65b0\u589e\u6808\u5e27\uff0c\u4f20\u5165\u7684 str \u548c ch \u5f15\u7528\u88ab\u62f7\u8d1d\u5230\u65b9\u6cd5\u4e2d\u6210\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002 \u5c40\u90e8\u53d8\u91cf str \u76f4\u63a5\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u7684 java \u5e38\u91cf\uff0c\u5c40\u90e8\u53d8\u91cf ch \u4fee\u6539\u4e86\u5806\u4e2d\u7684\u5b57\u7b26\u3002 \u56de\u5230 main \u65b9\u6cd5\u540e\uff0c\u5806\u4e2d\u7684 str \u4f9d\u65e7\u6307\u5411 hello \uff0c ch \u6240\u6307\u5411\u7684\u5b57\u7b26\u6570\u7ec4\u5185\u5bb9\u5df2\u7ecf\u88ab\u6539\u53d8\u3002 \uff08\u6ce8\u610f\uff0c final char[] \u8868\u793a\u5f15\u7528\u4fdd\u5b58\u7684\u5730\u5740\u4e0d\u53ef\u4fee\u6539\uff0c\u800c\u4e0d\u662f\u5185\u5bb9\uff09 \uff08\u4e09\uff09StringBuffer\u7c7b \u00b6 1. \u7279\u70b9 \u00b6 \u7236\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u53d8\u91cf char[] value \uff0c\u4fdd\u5b58\u5728\u5806\u4e2d\u800c\u4e0d\u662f\u5e38\u91cf\u6c60\u4e2d\uff1b StringBuffer \u7c7b\u662f final \u7684\uff0c\u4e0d\u80fd\u88ab\u7ee7\u627f\uff1b \u53ef\u4ee5\u5feb\u901f\u4fee\u6539\u5185\u5bb9\uff0c\u4e0d\u5fc5\u6bcf\u6b21\u66f4\u65b0\u5730\u5740\uff0c\u53ea\u6709\u7a7a\u95f4\u4e0d\u591f\u65f6\u624d\u9700\u8981\u66f4\u65b0\u5730\u5740\uff0c\u6548\u7387\u9ad8\u3002 2. StringBuffer \u7684\u5185\u5b58\u5e03\u5c40 \u00b6 3. StringBuffer \u5e38\u7528\u65b9\u6cd5 \u00b6 \u6784\u9020\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a 1 2 3 4 5 StringBuffer sb1 = new StringBuffer (); // \u9ed8\u8ba4\u5f00\u8f9f\u4e00\u4e2a\u957f\u5ea6\u4e3a16\u7684char\u6570\u7ec4 StringBuffer sb2 = new StringBuffer ( 100 ); // \u5f00\u8f9f\u4e00\u4e2a\u957f\u5ea6\u4e3a[100]+16\u7684char\u6570\u7ec4 StringBuffer sb3 = new StringBuffer ( \"hello\" ); // \u5f00\u8f9f\u4e00\u4e2a\u957f\u5ea6\u4e3a[hello].length\u7684char\u6570\u7ec4 String \u548c StringBuffer \u76f8\u4e92\u8f6c\u6362\uff1a String \u8f6c StringBuffer \uff1a 1 2 3 4 5 6 7 String str = \"hello\" ; // \u65b9\u6cd51 StringBuffer sb = new StringBuffer ( str ); // \u5bf9str\u672c\u8eab\u6ca1\u6709\u5f71\u54cd // \u65b9\u6cd52 StringBuffer sb2 = new StringBuffer (); sb2 = sb2 . append ( str ); StringBuffer \u8f6c String \uff1a 1 2 3 4 5 6 StringBuffer sb = new StringBuffer ( \"Hello World\" ); // \u65b9\u6cd51 String str = sb . toString (); // \u65b9\u6cd52 String str2 = new String ( sb ); \u589e\u5220\u6539\u67e5\u63d2\uff1a 1 2 3 4 5 6 7 8 9 10 11 StringBuffer sb = new StringBuffer ( \"Hello World\" ); // \u589e sb . append ( \"!!!\" ); // Hello World!!! // \u63d2 sb . insert ( 2 , \"hi\" ); // Hehillo World!!! // \u5220 sb . delete ( 2 , 5 ); // Helo World!!! // \u6539 sb . replace ( 4 , 6 , \"hahaha\" ); // Helohahaharld!!! // \u67e5 sb . indexOf ( \"ha\" ); // 4 4. \u4f8b\u9898 \u00b6 1 2 3 4 StringBuffer sb = new StringBuffer (); sb . append ( null ); // \u8fd9\u91cc\u8981\u770b\u6e90\u7801\uff01\u6e90\u7801\u4e2d\u628anull\u8f6c\u6362\u6210\u4e86{'n','u','l','l'}\u5b58\u50a8 StringBuffer sb2 = new StringBuffer ( null ); // \u5e95\u5c42\u8c03\u7528\u4e86super(str.length() + 16)\uff0c\u56e0\u6b64\u4f1a\u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38 \uff08\u56db\uff09StringBuilder\u7c7b \u00b6 \u4e0e StringBuffer \u7c7b\u4f3c\uff0c\u662f\u53ef\u53d8\u5b57\u7b26\u5e8f\u5217\uff1b StringBuilder \u662f final \u7684\uff0c\u4e0d\u80fd\u88ab\u7ee7\u627f\uff1b \u53ef\u7528\u7684\u65b9\u6cd5\u548c StringBuffer \u4e00\u6837\uff0c\u4f46\u662f\u5b83\u9002\u7528\u4e8e\u5355\u7ebf\u7a0b\uff0c\u6ca1\u6709 synchronized \u540c\u6b65\uff0c\u56e0\u6b64\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u3002 \uff08\u4e94\uff09\u65e5\u671f\u7c7b \u00b6 1. Date \u4e0e SimpleDateFormat \u00b6 1 SimpleDateFormat simpleDateFormat = new SimpleDateFormat ( \"yyyy\u5e74MM\u6708dd\u65e5 hh:mm:ss E\" ); \u5c06 Date \u8f6c\u4e3a\u56fa\u5b9a\u683c\u5f0f\u7684 String 1 2 Date date = new Date (); String dateStr = simpleDateFormat . format ( date ); \u5c06\u683c\u5f0f\u5316 String \u8f6c\u6362\u56de Date 1 2 String str = \"1996\u5e7401\u670801\u65e5 10:20:35 \u661f\u671f\u4e94\" ; Date date = simpleDateFormat . parse ( str ); 2. Calendar \u00b6 Calendar \u662f\u62bd\u8c61\u7c7b \u53ef\u4ee5\u901a\u8fc7 getInstance() \u83b7\u5f97\u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Calendar c = new Calendar . getInstance (); // \u6ce8\u610f\uff0c\u7531\u4e8e\u8981\u548c\u5bf9\u8c61\u5173\u8054\u8d77\u6765\uff0c\u56e0\u6b64\u901a\u8fc7get\u7684\u65b9\u5f0f\u83b7\u53d6 System . out . println ( c . get ( Calendar . YEAR )); System . out . println ( c . get ( Calendar . MonTh ) + 1 ); // \u6708\u4efd\u9ed8\u8ba4\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u8981+1 System . out . println ( c . get ( Calendar . DAY_OF_MONTH )); System . out . println ( c . get ( Calendar . HOUR )); // \u9ed8\u8ba4\u662f12\u8fdb\u5236 System . out . println ( c . get ( Calendar . HOUR_OF_DAY )); // 24\u8fdb\u5236\u7684\u5c0f\u65f6 System . out . println ( c . get ( Calendar . MINUTE )); System . out . println ( c . get ( Calendar . SECOND )); // \u4fbf\u4e8e\u81ea\u7531\u7ec4\u5408 System . out . println ( c . get ( Calendar . YEAR ) + \"-\" + ( c . get ( Calendar . MonTh ) + 1 ) + \"-\" + c . get ( Calendar . DAY_OF_MONTH ) + \" \" + c . get ( Calendar . HOUR_OF_DAY ) + \":\" + c . get ( Calendar . MINUTE ) + \":\" + c . get ( Calendar . SECOND )); Date\u548cCalendar\u5b58\u5728\u7684\u95ee\u9898\uff1a \u65e5\u671f\u3001\u65f6\u95f4\u76f8\u5173\u7684\u7c7b\u5e94\u5f53\u662f\u4e0d\u53ef\u53d8\u7684\uff1b Date \u5e74\u4efd\u4ece1990\u5e74\u5f00\u59cb\uff0c\u6708\u4efd\u4ece0\u5f00\u59cb\u4e0d\u5408\u7406\uff1b \u683c\u5f0f\u5316\u53ea\u5bf9 Date \u53ef\u7528\uff0c Calendar \u65e0\u6cd5\u4f7f\u7528\uff1b \u7ebf\u7a0b\u4e0d\u5b89\u5168\u3002 3. JDK8\u65b0\u589e\u7b2c\u4e09\u4ee3\u65e5\u671f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // \u6784\u9020 LocalDateTime now = LocalDateTime . now (); // \u53ef\u4ee5\u83b7\u53d6\u5e74\u6708\u65e5\u65f6\u5206\u79d2 LocalDate now2 = LocalDate . now (); // \u53ef\u4ee5\u83b7\u53d6\u5e74\u6708\u65e5 LocalTime now3 = LocalTime . now (); // \u53ef\u4ee5\u83b7\u53d6\u65f6\u5206\u79d2 // \u65b9\u6cd5 System . out . println ( now ); System . out . println ( now . getYear ()); // 2022 System . out . println ( now . getMonth ()); // JUNE System . out . println ( now . getMonthValue ()); // 6 System . out . println ( now . getDayOfMonth ()); // 25 System . out . println ( now . getHour ()); // 17 System . out . println ( now . getMinute ()); // 6 System . out . println ( now . getSecond ()); // 46 // \u683c\u5f0f\u5316 DateTimeFormatter formatter = DateTimeFormatter . ofPattern ( \"yyyy\u5e74MM\u6708dd\u65e5 HH:mm:dd\" ); String dateStr = formatter . format ( now ); // \u65f6\u95f4\u6233 Instant nowX = Instant . now (); Date date = Date . from ( nowX ); // Instant\u8f6cDate Instant nowY = date . toInstant (); // Date\u8f6cInstant \uff08\u516d\uff09\u4f8b\u9898 \u00b6 1. \u4f8b\u4e00 \u00b6 \u5b9a\u4e49\u4e00\u4e2a Book \u7c7b\uff0c\u5305\u542b\u4e66\u540d\u3001\u4ef7\u683c\u4e24\u4e2a\u5c5e\u6027\uff0c\u4f7f\u7528\u63a5\u53e3\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002 \u63a5\u53e3\uff1a 1 2 3 public interface SortBook { double sortBook ( Book a , Book b ); } Book\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 public class Book { private String bookName ; private double price ; public Book ( String bookName , double price ) { this . bookName = bookName ; this . price = price ; } public static void sortBooks ( Book [] books , SortBook sb ) { for ( int i = 0 ; i < books . length - 1 ; i ++ ) { for ( int j = 0 ; j < books . length - i - 1 ; j ++ ) { if ( sb . sortBook ( books [ j ] , books [ j + 1 ] ) > 0 ) { Book tmp = books [ j ] ; books [ j ] = books [ j + 1 ] ; books [ j + 1 ] = tmp ; } } } } public static void printBooks ( Book [] books ) { for ( Book book : books ) { System . out . println ( book . getBookName () + \" , \" + book . getPrice ()); } System . out . println ( \"======================\" ); } public String getBookName () { return bookName ; } public double getPrice () { return price ; } } Main\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 public class Index { public static void main ( String [] args ) { Book [] books = new Book [ 5 ] ; books [ 0 ] = new Book ( \"\u6bcd\u732a\u7684\u4ea7\u540e\u62a4\u7406\" , 20.6 ); books [ 1 ] = new Book ( \"\u661f\u706b\u82f1\u8bed\" , 32.6 ); books [ 2 ] = new Book ( \"Android\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a\" , 70.5 ); books [ 3 ] = new Book ( \"\u8ba1\u7b97\u673a\u7f51\u7edc\" , 56.1 ); books [ 4 ] = new Book ( \"\u6df1\u7f51\" , 34.2 ); sortBooks ( books , new SortBook () { @Override public double sortBook ( Book a , Book b ) { return a . getPrice () - b . getPrice (); } }); printBooks ( books ); sortBooks ( books , new SortBook () { @Override public double sortBook ( Book a , Book b ) { return b . getPrice () - a . getPrice (); } }); printBooks ( books ); sortBooks ( books , new SortBook () { @Override public double sortBook ( Book a , Book b ) { return a . getBookName (). length () - b . getBookName (). length (); } }); printBooks ( books ); } } /* \u8f93\u51fa\uff1a \u6bcd\u732a\u7684\u4ea7\u540e\u62a4\u7406 , 20.6 \u661f\u706b\u82f1\u8bed , 32.6 \u6df1\u7f51 , 34.2 \u8ba1\u7b97\u673a\u7f51\u7edc , 56.1 Android\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a , 70.5 ====================== Android\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a , 70.5 \u8ba1\u7b97\u673a\u7f51\u7edc , 56.1 \u6df1\u7f51 , 34.2 \u661f\u706b\u82f1\u8bed , 32.6 \u6bcd\u732a\u7684\u4ea7\u540e\u62a4\u7406 , 20.6 ====================== \u6df1\u7f51 , 34.2 \u661f\u706b\u82f1\u8bed , 32.6 \u8ba1\u7b97\u673a\u7f51\u7edc , 56.1 \u6bcd\u732a\u7684\u4ea7\u540e\u62a4\u7406 , 20.6 Android\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a , 70.5 ====================== */ 2. \u4f8b\u4e8c \u00b6 \u5bf9\u8f93\u5165\u4e09\u4e2a\u5b57\u4ee5\u4e0a\u7684\u540d\u5b57\u8f6c\u6362\u683c\u5f0f\uff0c\u5982 Han Shun Ping \u8f6c\u6362\u4e3a Ping,Han .S \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class Index { public static void main ( String [] args ) { method ( \"Han Shun Ping\" ); } public static void method ( String str ) { String [] splitStr = str . split ( \" \" ); if ( splitStr . length != 3 ) { throw new RuntimeException ( \"\u5b57\u7b26\u4e32\u683c\u5f0f\u4e0d\u6b63\u786e\uff01\" ); } String ans = String . format ( \"%s,%s .%c\" , splitStr [ 2 ] , splitStr [ 0 ] , splitStr [ 1 ] . charAt ( 0 )); System . out . println ( ans ); } } \u7f16\u7a0b\u6280\u5de7\uff1a \u5728\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u65f6\uff0c\u3010\u5199\u51fa\u6b63\u786e\u60c5\u51b5\u540e\u76f4\u63a5\u53d6\u53cd\u3011\u6bd4\u8d77\u60f3\u4e00\u7cfb\u5217\u3010\u4e0d\u6b63\u786e\u7684\u60c5\u51b5\u3011\u8981\u66f4\u52a0\u5b8c\u5584\u548c\u65b9\u4fbf\u3002 \u6b64\u5916\uff0c\u629b\u51fa\u5f02\u5e38\u4e5f\u662f\u9002\u7528\u7684\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Index { public static void main ( String [] args ) { try { method (); System . out . println ( \"\u6210\u529f\uff01\" ); } catch ( Exception e ) { System . out . println ( e . getMessage ()); } } public static void method () { if ( ! ( \u6761\u4ef6 )) { throw new RuntimeException ( \"\u9519\u8bef\u4fe1\u606f\" ); } } } \u4e5d\u3001\u96c6\u5408 \u00b6 \uff08 ConcurrentHashMap \u80fd\u591f\u5904\u7406\u5e76\u53d1\u95ee\u9898\uff0c\u662f\u7ebf\u7a0b\u540c\u6b65\u7684\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff09 \uff08\u4e00\uff09Collection \u00b6 \uff08\u4e8c\uff09Iterator \u00b6 \u7528\u4e8e\u904d\u5386\u96c6\u5408 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Collection < String > arr = new ArrayList <> (); arr . add ( \"\u5f20\u4e09\" ); arr . add ( \"\u674e\u56db\" ); arr . add ( \"Khun\" ); Iterator < String > iterator = arr . iterator (); while ( iterator . hasNext ()){ Object obj = iterator . next (); System . out . println ( obj ); } // \u5faa\u73af\u7ed3\u675f\u540e\uff0citerator\u6307\u5411\u6700\u540e\u7684\u5143\u7d20 // \u9700\u8981\u91cd\u7f6e\u8fed\u4ee3\u5668\uff0c\u624d\u53ef\u518d\u6b21\u4f7f\u7528 iterator = col . iterator (); \uff08\u4e09\uff09List \u00b6 \u6709\u5e8f\u3001\u53ef\u91cd\u590d\uff1b \u6709\u7d22\u5f15\uff0c\u4f7f\u7528 list.get() \uff1b \u5e38\u7528\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // \u589e list . add ( \"hello\" ); list . add ( 1 , \"world\" ); list . addAll ( list2 ); list . addAll ( 1 , list2 ); // \u5220 list . remove ( 0 ); // \u6539 list . set ( 1 , \"hi\" ); // \u67e5 list . indexOf ( \"hello\" ); // \u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e list . lastIndexOf ( \"hello\" ); // \u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e List list3 = list . subList ( 0 , 2 ); // \u8fd4\u56de[0,2)\u7684\u5143\u7d20 \uff08\u56db\uff09ArrayList \u00b6 \u5e95\u5c42\u7531\u6570\u7ec4\u5b9e\u73b0\uff0c ArrayList \u4e2d\u7ef4\u62a4\u4e86\u4e00\u4e2a transient Object[] \u6570\u7ec4 elementData \uff08 transient \u8868\u793a\u5c5e\u6027\u4e0d\u4f1a\u88ab\u7cfb\u5217\u5316\uff09\uff1b \u53ef\u4ee5\u52a0\u5165null\uff1b \u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u6267\u884c\u6548\u7387\u9ad8; \u4f7f\u7528\u65e0\u53c2\u6784\u9020\u5668\u521b\u5efa ArrayList \u5bf9\u8c61\u65f6\uff0c\u9ed8\u8ba4\u5927\u5c0f\u4e3a 0 0 \uff0c\u9996\u6b21\u6269\u5bb9\u65f6\u5927\u5c0f\u6269\u4e3a 10 10 \uff0c\u6b64\u540e\u6269\u5bb9\u65f6\uff0c\u589e\u5927\u4e3a\u539f\u6765\u7684 1.5 1.5 \u500d\uff1b \u5982\u679c\u4f7f\u7528\u6307\u5b9a\u5927\u5c0f\u7684\u6784\u9020\u5668\u521b\u5efa ArrayList \u5bf9\u8c61\uff0c\u521d\u59cb\u5bb9\u91cf\u4e3a\u6307\u5b9a\u5927\u5c0f\uff0c\u4e4b\u540e\u6269\u5bb9\u65f6\uff0c\u6269\u5927\u4e3a\u539f\u6765\u7684 1.5 1.5 \u500d\u3002 1. \u6269\u5bb9\u5173\u952e\u6e90\u7801 \u00b6 2. \u5e38\u7528\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 List list = new ArrayList (); // \u6392\u5e8f Collections . reverse ( list ); // \u53cd\u8f6c\u987a\u5e8f Collections . shuffle ( list ); // \u6253\u4e71\u5143\u7d20\u968f\u673a\u6392\u5e8f Collections . sort ( list ); // \u6309\u5143\u7d20\u7684\u81ea\u7136\u987a\u5e8f\u6392\u5e8f Collections . sort ( list , new Comparator (){ // \u81ea\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f @Override public int compare ( Object o1 , Object o2 ){ return (( String ) o1 ). length - (( String ) o2 ). length ; } }); // \u4ea4\u6362\u4f4d\u7f6e\u4e3a0\u548c1\u7684\u5143\u7d20 Collections . swap ( list , 0 , 1 ); // \u6c42\u6700\u5927/\u6700\u5c0f Collections . max ( list ); // \u8fd4\u56de\u81ea\u7136\u987a\u5e8f\u6392\u5e8f\u7684\u6700\u5927\u503c Collections . max ( list , new Comparator (){ // \u81ea\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u4e2d\u7684\u6700\u5927\u503c @Override public int compare ( Object o1 , Object o2 ){ return (( String ) o1 ). length - (( String ) o2 ). length ; } }); Collections . max ( list , new Comparator (){ // \u8fd4\u56de\u81ea\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u4e2d\u7684\u6700\u5927\u503c @Override public int compare ( Object o1 , Object o2 ){ return (( String ) o1 ). length - (( String ) o2 ). length ; } }); Collections . max ( list , new Comparator (){ // \u8fd4\u56de\u81ea\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u6216\u8005\u628amax\u6539\u4e3amin\u6548\u679c\u4e5f\u4e00\u6837 @Override public int compare ( Object o1 , Object o2 ){ return (( String ) o2 ). length - (( String ) o1 ). length ; } }); // \u8fd4\u56de\u5143\u7d20\u51fa\u73b0\u6b21\u6570 Collections . frequency ( list , \"Kun\" ); // \u8d4b\u503clist2\u4e2d\u7684\u5143\u7d20\u5230list1 (\u8981\u6c42list1.size() \u2265 list2.size()) Collections . copy ( list1 , list2 ); // \u67e5\u627eNight\uff0c\u5e76\u5168\u90e8\u66ff\u6362\u4e3aKun Collection . replaceAll ( list , \"Night\" , \"Kun\" ); \uff08\u4e94\uff09Vector \u00b6 \u5e95\u5c42\u4e5f\u662f\u7531\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u5b9e\u73b0\uff1a protected Objected[] elementData \uff1b Vector \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u65b9\u6cd5\u90fd\u5e26\u6709 synchronized \uff1b \u6269\u5bb9\u673a\u5236\u548c ArrayList \u4e0d\u540c\uff1a\u4f7f\u7528\u65e0\u53c2\u6784\u9020\u5668\u521b\u5efa Vector \u5bf9\u8c61\u65f6\uff0c\u9ed8\u8ba4\u5927\u5c0f\u4e3a 10 \uff1b\u4f7f\u7528\u6709\u53c2\u6784\u9020\u5668\u521b\u5efa Vector \u65f6\uff0c\u5927\u5c0f\u4e3a\u6307\u5b9a\u5927\u5c0f\uff0c\u9700\u8981\u6269\u5bb9\u65f6\u589e\u5927\u5230\u539f\u6765\u7684 2 2 \u500d\uff1b \uff08\u516d\uff09LinkedList \u00b6 \u5e95\u5c42\u5b9e\u73b0\u4e86\u53cc\u5411\u94fe\u8868\uff0c\u589e\u5220\u6548\u7387\u8f83\u9ad8\uff0c\u6539\u67e5\u6548\u7387\u8f83\u4f4e\uff1b \u6dfb\u52a0\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\uff0c\u5305\u62ec null \uff1b \u7ebf\u7a0b\u4e0d\u5b89\u5168\u3002 \uff08\u4e03\uff09Set \u00b6 \u6dfb\u52a0\u548c\u53d6\u51fa\u987a\u5e8f\u4e0d\u4e00\u81f4\uff0c\u65e0\u7d22\u5f15\uff08\u5373\u4e0d\u80fd\u7528\u666e\u901a for \u5faa\u73af\u904d\u5386\uff09\uff1b \u5143\u7d20\u4e0d\u53ef\u91cd\u590d\uff08\u5305\u62ec null \uff09\u3002 \uff08\u516b\uff09HashSet \u00b6 \u5e95\u5c42\u662f HashMap \uff1b \u521d\u59cb\u5bb9\u91cf\u4e3a 16 16 \uff0c\u4e34\u754c\u503c\u4e3a 16*0.75=12 16*0.75=12 \uff0c\u5230\u8fbe\u4e34\u754c\u503c\u5c31\u4ee5 2 2 \u500d\u6269\u5bb9\u3002 1. \u6784\u9020\u5668 \u00b6 2. \u5e38\u7528\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 // \u589e st . add (); // \u6dfb\u52a0\u6210\u529f\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse // add\u7684\u5143\u7d20\u4e0d\u53ef\u91cd\u590d st . add ( \"A\" ); // T st . add ( \"A\" ); // F st . add ( new Dog ( \"tom\" )); // T st . add ( new Dog ( \"tom\" )); // T st . add ( new String ( \"tom\" )); // T st . add ( new String ( \"tom\" )); // F\uff0c\u548cadd\u7684\u6e90\u7801\u6709\u5173 3. add()\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /** * Adds the specified element to this set if it is not already present. * More formally, adds the specified element {@code e} to this set if * this set contains no element {@code e2} such that * {@code Objects.equals(e, e2)}. * If this set already contains the element, the call leaves the set * unchanged and returns {@code false}. * * @param e element to be added to this set * @return {@code true} if this set did not already contain the specified * element */ public boolean add ( E e ) { // put()\u8fd4\u56de\u4e3a\u7a7a\u8868\u793a\u63d2\u5165\u6210\u529f\uff0c\u5426\u5219\u8fd4\u56de\u4e0d\u4e3a\u7a7a\u8868\u793a\u5df2\u7ecf\u6709\u8be5\u503c\uff0c\u63d2\u5165\u5931\u8d25 // map\u662f\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u50a8\u7684\uff0c\u800cset\u662f\u5355\u503c\u5b58\u50a8\uff0c\u4e0d\u9700\u8981value,\u56e0\u6b64\u7528\u4e00\u4e2a\u9759\u6001\u5e38\u91cfPRESENT\u5360\u4f4d return map . put ( e , PRESENT ) == null ; } put \u4e2d\u7684\u5185\u5bb9\u8be6\u89c1 HashMap \u6dfb\u52a0\u5143\u7d20\u539f\u7406\u3002 4. \u603b\u7ed3 \u00b6 5. \u4f8b\u9898 \u00b6 \u4f8b\u4e00\uff1a \u521b\u5efa\u5305\u542b name \u548c age \u5c5e\u6027\u7684\u7c7b\uff0c\u8981\u6c42 name \u548c age \u90fd\u76f8\u540c\u7684\u5bf9\u8c61\u63d2\u5165 HashSet \u65f6\u8ba4\u4e3a\u662f\u76f8\u540c\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public class Main { public static void main ( String [] args ) { HashSet < Person > set = new HashSet <> (); set . add ( new Person ( \"\u5f20\u4e09\" , 23 )); set . add ( new Person ( \"\u5f20\u4e09\" , 23 )); System . out . println ( \"set size = \" + set . size ()); // \u8f93\u51fa set size = 1 } } class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } // \u4e0b\u65b9\u4ee3\u7801\u53ef\u4ee5\u7531 idea \u4e2d\u7684 alt + insert \u81ea\u52a8\u751f\u6210 @Override public boolean equals ( Object o ) { if ( this == o ) return true ; if ( o == null || getClass () != o . getClass ()) return false ; Person person = ( Person ) o ; return age == person . age && Objects . equals ( name , person . name ); } @Override public int hashCode () { return Objects . hash ( name , age ); // name\u548cage\u5171\u540c\u51b3\u5b9a\u54c8\u5e0c\u503c } } \u4f8b\u4e8c\uff1a \u5df2\u7ecf\u91cd\u5199\u4e86 People \u7684 name \u548c id \u5c5e\u6027\u7684 hashCode() \u548c equals() \u65b9\u6cd5\uff0c\u5206\u6790\u4e0b\u9762\u7684\u8fc7\u7a0b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HashSet < People > people = new HashSet <> (); People kun = new People ( \"Kun\" , 1 ); People night = new People ( \"Night\" , 2 ); people . add ( kun ); // OK people . add ( night ); // OK night . setName ( \"Rachel\" ); // OK // \u8be6\u89c1\u540e\u6587hashMap\u7684remove\u6e90\u7801\u5206\u6790 // \u65b0\u4f20\u5165\u7684night\u7531\u4e8ehash\u503c\u53d8\u4e86\uff0c\u56e0\u6b64\u5b9a\u4f4d\u4e0d\u5230\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u5220\u9664\u5931\u8d25 people . remove ( night ); System . out . println ( people ); // [{'Rachel', 2}, {'Kun', 1}] People rachel = new People ( \"Rachel\" , 2 ); people . add ( rachel ); // OK\uff0c\u540c\u6837\u7684\u5b9a\u4f4d\u65b9\u5f0f\uff0c\u65b0\u7684\u4f4d\u7f6e\u4e3a\u7a7a\uff0c\u76f4\u63a5\u63d2\u5165 System . out . println ( people ); // [{'Rachel', 2}, {'Rachel', 2}, {'Kun', 1}] People night2 = new People ( \"Night\" , 2 ); // OK, hash\u5b9a\u4f4d\u5230night\u7684\u4f4d\u7f6e // \u4f46\u662f\u7531\u4e8enight\u7684\u540d\u5b57\u5df2\u7ecf\u6539\u6210\u4e86Rachel\uff0c\u56e0\u6b64\u8ba4\u4e3a\u5b83\u548cnight2\u4e0d\u4e00\u6837\uff0c\u76f4\u63a5\u63d2\u5165\u5728\u94fe\u5c3e people . add ( night2 ); System . out . println ( people ); // [{'Rachel', 2}, {'Rachel', 2}, {'Night', 2}, {'Kun', 1}] \u5185\u5b58\u7ed3\u6784\uff1a \uff08\u4e5d\uff09LinkedHashSet \u00b6 \u5e95\u5c42\u662f LinkedHashMap \uff0c\u7531\u6570\u7ec4+\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\uff08\u867d\u7136\u6e90\u7801\u4e2d\u5b83\u7ee7\u627f\u7684\u662f HashSet \uff0c\u4f46\u662f\u6784\u9020\u5668\u3001\u6210\u5458\u65b9\u6cd5\u7b49\u4e2d\u8c03\u7528\u7684\u90fd\u662f LinkedHashMap \u7684\u6784\u9020\u5668\u3001\u6210\u5458\u65b9\u6cd5\u7b49\uff09\uff1b \u6bd4\u8d77 HashSet \uff0c\u6bcf\u4e2a\u8282\u70b9\u591a\u7ef4\u62a4\u4e86\u524d\u9a71\u548c\u540e\u7ee7\u4e24\u4e2a\u6307\u9488\uff0c\u4ece\u800c\u5b9e\u73b0\u6709\u5e8f\uff1b \u5143\u7d20\u4e0d\u53ef\u91cd\u590d\uff1b \uff08\u5341\uff09TreeSet \u00b6 \u5e95\u5c42\u662f TreeMap ; \u8bbe\u5b9a\u4e86\u6bd4\u8f83\u5668\u540e\u53ef\u4ee5\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\uff0c\u5426\u5219\u662f\u65e0\u5e8f\u7684\uff1b \u4e0d\u53ef\u91cd\u590d\uff1b \u6784\u9020\u65f6\u4e00\u5b9a\u8981\u5199\u6bd4\u8f83\u5668\uff0c\u6216\u8005\u4f20\u5165\u7684\u5bf9\u8c61\u672c\u8eab\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6bd4\u8f83\u5668 \uff08\u5982\uff1a String \uff09\uff0c\u56e0\u4e3a\u63d2\u5165\u5143\u7d20\u65f6\u9700\u8981\u5bf9\u5927\u5c0f\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u5e95\u5c42\u5c31\u4f1a\u81ea\u52a8\u4f7f\u7528\u5bf9\u8c61\u7684 Compatable \u63a5\u53e3\uff0c\u5982\u679c\u8be5\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0\u6bd4\u8f83\u63a5\u53e3\u5c31\u4f1a\u53d1\u751f\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0c\u8be6\u89c1 TreeMap \u6e90\u7801\u5206\u6790\u3002 \u6ce8\u610f\uff0c\u80fd\u5426\u6dfb\u52a0\u8fdb TreeSet \u53d6\u51b3\u4e8e\u4f60\u8bbe\u5b9a\u7684\u6bd4\u8f83\u5668\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 TreeSet < String > set = new TreeSet <> ( new Comparator < String > () { @Override public int compare ( String o1 , String o2 ) { return o1 . length () - o2 . length (); // \u6309\u957f\u5ea6\u6392\u5e8f } }); set . add ( \"Kun\" ); set . add ( \"Night\" ); set . add ( \"Rachel\" ); set . add ( \"Bob\" ); for ( String s : set ) { System . out . println ( s ); } /* \u8f93\u51fa\uff1a Kun Night Rachel */ \u6e90\u7801\u5982\u4e0b\u56fe\u6240\u793a\u3002\u65e0\u6cd5\u63d2\u5165 Bob \uff0c\u662f\u56e0\u4e3a\u5b83\u7684\u957f\u5ea6\u548c Kun \u4e00\u6837\uff0c\u6bd4\u8f83\u5668\u8fd4\u56de 0 0 \u65f6 key \u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u5bf9\u4e8e TreeSet \u6765\u8bf4\u76f8\u5f53\u4e8e\u76f4\u63a5\u8fd4\u56de\u4e86\uff0c\u56e0\u4e3a\u5b83\u7684 value \u53ea\u662f\u4e00\u4e2a\u5360\u4f4d\u7528\u7684\u7a7a Object \u3002 \u5176\u5b9e\u5b83\u7684 add() \u65b9\u6cd5\u5e95\u5c42\u8c03\u7528\u7684\u662f TreeMap \u7684 put() \u65b9\u6cd5\u3002\u5b8c\u6574\u6e90\u7801\u8be6\u89c1\u540e\u6587 TreeMap \u7684 put() \u65b9\u6cd5\u5206\u6790\u3002 \uff08\u5341\u4e00\uff09Map \u00b6 Map \u548c Collection \u5e76\u5217\uff0c\u5e76\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\uff0c\u533a\u522b\u662f Map \u4e2d\u4fdd\u5b58\u7684\u662f\u952e\u503c\u5bf9\uff1b Map \u7684 key \u548c value \u5c01\u88c5\u5728 Node \u7ed3\u70b9\uff1b key \u4e0d\u80fd\u91cd\u590d\uff0c value \u53ef\u4ee5\u91cd\u590d\uff0c key \u503c\u76f8\u540c\u7684\u5143\u7d20\u4f1a\u76f4\u63a5\u66ff\u6362\uff1b key \u548c value \u5747\u53ef\u4ee5\u4e3a\u7a7a\uff1b \u65e0\u5e8f\uff0c\u6307\u7684\u662f\u63d2\u5165\u548c\u53d6\u51fa\u7684\u987a\u5e8f\u4e0d\u4e00\u81f4\uff08\u6bcf\u6b21\u53d6\u51fa\u7684\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff09\u3002 1. \u5e38\u7528\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 map . put ( \"key\" , \"value\" ); map . remove ( key ); map . get ( key ); map . size (); map . containsKey ( key ); map . clear (); 2. \u904d\u5386\u65b9\u6cd5 \u00b6 (1) \u904d\u5386\u6240\u6709 key \uff0c\u5728\u53d6\u51fa\u5bf9\u5e94 value 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HashMap < String , String > map = new HashMap <> (); map . put ( \"\u6606\" , \"\u706f\u53f0\u5fa1\u53f2\" ); map . put ( \"\u591c\" , \"\u6ce2\u9053\u4f7f\" ); map . put ( \"\u96f7\u514b\" , \"\u957f\u67aa\u5c06\" ); map . put ( \"\u5b89\u5fb7\u7f57\u897f\" , \"\u72e9\u730e\u8005\" ); // \u65b9\u6cd5 1 Set < String > keySet = map . keySet (); for ( String key : keySet ) { System . out . println ( key + \" - \" + map . get ( key )); } // \u65b9\u6cd5 2 Iterator < String > iterator = keySet . iterator (); while ( iterator . hasNext ()) { String key = iterator . next (); System . out . println ( key + \" - \" + map . get ( key )); } (2) \u904d\u5386\u6240\u6709 value 1 2 3 4 5 6 7 8 9 10 11 12 // \u65b9\u6cd5 1 Collection < String > values = map . values (); for ( String value : values ) { System . out . println ( value ); } // \u65b9\u6cd5 2 Iterator < String > it = values . iterator (); while ( it . hasNext ()) { String value = it . next (); System . out . println ( value ); } (3) \u904d\u5386 EntrySet 1 2 3 4 5 6 7 8 9 10 11 12 // \u65b9\u6cd5 1 Set < Map . Entry < String , String >> entries = map . entrySet (); for ( Map . Entry < String , String > e : entries ) { System . out . println ( e . getKey () + \" - \" + e . getValue ()); } // \u65b9\u6cd5 2 Iterator < Map . Entry < String , String >> it3 = entries . iterator (); while ( it3 . hasNext ()) { Map . Entry < String , String > entry = it3 . next (); System . out . println ( entry . getKey () + \" - \" + entry . getValue ()); } \uff08\u5341\u4e8c\uff09HashMap \u00b6 \u5e95\u5c42\u662f \u6570\u7ec4+\u94fe\u8868+\u7ea2\u9ed1\u6811 \u5b9e\u73b0\u7684\uff1b \u6ca1\u6709\u5b9e\u73b0 sychronized \uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168\u3002 \uff08 ConcurrentHashMap \u80fd\u591f\u5904\u7406\u5e76\u53d1\u95ee\u9898\uff0c\u662f\u7ebf\u7a0b\u540c\u6b65\u7684\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff09 1. \u5bb9\u5668\u5185\u5143\u7d20\u7684\u6570\u636e\u7ed3\u6784 \u00b6 \u7ed3\u70b9\uff1a \u8868\u4e2d\u7ed3\u70b9\u7531 Node \u4fdd\u5b58\uff08\u5b83\u5b9e\u73b0\u4e86 Entry \u63a5\u53e3\uff09\uff0c\u5305\u542b\u6709\u952e\u503c\u5bf9\u3001hash\u503c\u3001\u94fe\u8868\u7684 next \u6307\u9488\u3002 \u8282\u70b9\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\u3002 2. \u904d\u5386 HashMap \u00b6 \u6709\u4e00\u4e2a EntrySet \u96c6\u5408\uff0c\u4fdd\u5b58\u4e86\u6307\u5411\u5f53\u524d Entry \u8282\u70b9\u7684\u5f15\u7528\uff08 Entry \u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5b9e\u9645\u8fd0\u884c\u7c7b\u578b\u662f Node \uff09\uff0c\u91cc\u9762\u5305\u542b\u4e86\u6307\u5411 Entry \u7ed3\u70b9\u7684\u8fed\u4ee3\u5668\uff0c\u7528\u4e8e\u904d\u5386\u3002 \u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a KeySet \u548c Values \u5bb9\u5668\uff0c KeySet \u4fdd\u5b58\u4e86\u6307\u5411 Entry().key \u7684\u5f15\u7528\uff0c Values \u4fdd\u5b58\u4e86\u6307\u5411 Entry().value \u7684\u5f15\u7528\u3002 \u4ee5 KeySet \u4e3a\u4f8b\uff0c Values \u7c7b\u4f3c\uff1a 3. HashMap \u5185\u90e8\u7ed3\u6784\u56fe \u00b6 4. \u6dfb\u52a0\u5143\u7d20\u6e90\u7801 \u00b6 put() hash() \uff08\u5bf9 Key \u8fdb\u884c\u7684 hash \u5e76\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de\u7684 hashCode \uff09 \u6838\u5fc3\u4ee3\u7801\u5728 putVal() \u4e2d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 /** * Implements Map.put and related methods. * * @param hash hash for key * @param key the key * @param value the value to put * @param onlyIfAbsent if true, don't change existing value * @param evict if false, the table is in creation mode. * @return previous value, or null if none */ final V putVal ( int hash , K key , V value , boolean onlyIfAbsent , boolean evict ) { Node < K , V >[] tab ; Node < K , V > p ; int n , i ; if (( tab = table ) == null || ( n = tab . length ) == 0 ) // table\u662fHashMap\u4e2d\u7684\u4e00\u4e2aNode[]\u5c5e\u6027 n = ( tab = resize ()). length ; // \u521d\u59cb\u5316\u5bb9\u91cf\u4e3a16\uff0c\u4e34\u754c\u503c\u4e3a12\uff08\u56e0\u5b50\u4e3a0.75\uff09 if (( p = tab [ i = ( n - 1 ) & hash ] ) == null ) // (n - 1) & hash \u80fd\u4f7f\u4e0b\u6807\u503c\u4e0d\u8d85\u8fc7\u6570\u7ec4\u957f\u5ea6 tab [ i ] = newNode ( hash , key , value , null ); // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u653e\u653e\u5165\u6570\u7ec4\u4e2d else { Node < K , V > e ; K k ; // p \u5728\u524d\u9762\u4e00\u4e2a if \u4e2d\u6307\u5411\u4e86\u5f53\u524d\u53d1\u751f\u51b2\u7a81\u7684\u6570\u7ec4\u9879 // \u5982\u679c\u4ed6\u4eec\u7684hash\u503c\u548ckey\u503c\uff08\u5bf9\u8c61or\u57fa\u672c\u6570\u636e\u503c\uff09\u90fd\u4e00\u6837\uff0c\u5c31\u6267\u884c e = p; // \u56e0\u6b64\uff0c\u5bf9\u8c61\u9700\u8981\u76f8\u540c\u7684hash\u503c\u4e14\u91cd\u5199equals()\u65b9\u6cd5\u624d\u53ef\u8fdb\u5165\u8be5\u53e5, String \u5c31\u662f\u8fd9\u6837\u5b9e\u73b0\u7684 if ( p . hash == hash && (( k = p . key ) == key || ( key != null && key . equals ( k )))) e = p ; else if ( p instanceof TreeNode ) // \u5224\u65ad\u662f\u4e0d\u662f\u7ea2\u9ed1\u6811 e = (( TreeNode < K , V > ) p ). putTreeVal ( this , tab , hash , key , value ); // \u63d2\u5165\u7ea2\u9ed1\u6811 else { // \u662f\u94fe\u8868 for ( int binCount = 0 ; ; ++ binCount ) { if (( e = p . next ) == null ) { // \u5982\u679c\u540e\u9762\u8282\u70b9\u4e3a\u7a7a\uff0c\u5c31\u65b0\u5efa Node \u5e76\u63d2\u5165\u5230\u6700\u540e p . next = newNode ( hash , key , value , null ); if ( binCount >= TREEIFY_THRESHOLD - 1 ) // \u662f\u5426\u5df2\u7ecf\u8fbe\u52308\u4e2a\u8282\u70b9 // \u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811 // treeifyBin()\u4e2d\u8fd8\u8981\u6c42\u8868\u957f>=64\u624d\u80fd\u8f6c // \u5426\u5219\uff0c\u5c31\u7ed9\u8868\u6269\u5bb9(oldSize << 1)\uff0c\u5e76\u5bf9\u539f\u6765\u7684\u6570\u636e\u91cd\u65b0hash\u66f4\u6539\u5728\u8868\u4e2d\u7684\u4f4d\u7f6e treeifyBin ( tab , hash ); break ; } // \u548c\u524d\u9762\u7684\u6bd4\u8f83\u903b\u8f91\u4e00\u6837\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u76f8\u540c\u7684\u8282\u70b9\uff0c\u5c31\u76f4\u63a5\u8df3\u51fa if ( e . hash == hash && (( k = e . key ) == key || ( key != null && key . equals ( k )))) break ; p = e ; } } if ( e != null ) { // \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u4e00\u6837\u7684\u8282\u70b9e V oldValue = e . value ; if ( ! onlyIfAbsent || oldValue == null ) // onlyIfAbsent\u4f20\u5165\u4e3afalse e . value = value ; // \u66ff\u6362\u503c afterNodeAccess ( e ); return oldValue ; // \u8fd4\u56de\u51b2\u7a81\u8282\u70b9\u7684\u503c } } ++ modCount ; // \u8d85\u8fc7\u4e34\u754c\u503c\u5c31\u6269\u5bb9 // \u5e76\u4e14\u53ea\u8981\u52a0\u5165\u4e00\u4e2aNode\u5c31\u4f1asize++\uff0c\u4e0d\u7ba1Node\u52a0\u5728\u94fe\u5c3e\u8fd8\u662f\u8868\u9879\u4e2d\uff0c\u8d85\u8fc7\u95e8\u9650\u90fd\u4f1a\u6269\u5bb9 if ( ++ size > threshold ) resize (); afterNodeInsertion ( evict ); // \u8be5\u65b9\u6cd5\u5728HashMap\u4e2d\u4e3a\u7a7a\uff0c\u662f\u4e3a\u4e86\u8ba9\u5b83\u7684\u5b50\u7c7b\u53bb\u5b9e\u73b0\u5b83 return null ; } 5. \u5220\u9664\u5143\u7d20\u6e90\u7801 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 /** * Implements Map.remove and related methods. * * @param hash hash for key * @param key the key * @param value the value to match if matchValue, else ignored * @param matchValue if true only remove if value is equal * @param movable if false do not move other nodes while removing * @return the node, or null if none */ final Node < K , V > removeNode ( int hash , Object key , Object value , boolean matchValue , boolean movable ) { Node < K , V >[] tab ; Node < K , V > p ; int n , index ; // \u540c\u6837\u7684\uff0c\u67e5\u8be2\u88ab\u5220\u9664\u5143\u7d20\u65f6\uff0c\u8981\u6bd4\u8f83hash\u503c\u548cequals\u4e24\u4e2a\u65b9\u9762\uff0c\u5168\u90e8\u76f8\u540c\u624d\u80fd\u5220 // \u6240\u4ee5\uff0c\u5982\u679c\u63d2\u5165\u7684\u5143\u7d20\u503c\u4e2d\u9014\u88ab\u4fee\u6539\u4e86\uff0c\u6709\u53ef\u80fd\u5220\u9664\u4e0d\u6210\u529f if (( tab = table ) != null && ( n = tab . length ) > 0 && ( p = tab [ index = ( n - 1 ) & hash ] ) != null ) { // \u901a\u8fc7\u4f20\u5165\u7684hash\u503c\u786e\u5b9a\u5143\u7d20\u4f4d\u7f6e Node < K , V > node = null , e ; K k ; V v ; if ( p . hash == hash && (( k = p . key ) == key || ( key != null && key . equals ( k )))) node = p ; else if (( e = p . next ) != null ) { if ( p instanceof TreeNode ) node = (( TreeNode < K , V > ) p ). getTreeNode ( hash , key ); else { do { // \u904d\u5386\u94fe\u8868 if ( e . hash == hash && (( k = e . key ) == key || ( key != null && key . equals ( k )))) { node = e ; // node\u8bb0\u5f55\u5f53\u524d\u8981\u5220\u7684\u8282\u70b9 break ; // break\u7684\u65f6\u5019p\u6307\u5411node\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9 } p = e ; } while (( e = e . next ) != null ); } } // matchValue\u4f20\u5165\u4e3afalse if ( node != null && ( ! matchValue || ( v = node . value ) == value || ( value != null && value . equals ( v )))) { if ( node instanceof TreeNode ) // \u6811\u4e0a\u7684\u8282\u70b9 (( TreeNode < K , V > ) node ). removeTreeNode ( this , tab , movable ); else if ( node == p ) // \u8282\u70b9\u5728\u8868\u4e2d\uff0c\u4e5f\u5c31\u662f\u94fe\u9996 tab [ index ] = node . next ; // \u88ab\u540e\u4e00\u4e2a\u8282\u70b9\u8986\u76d6 else // \u8282\u70b9\u5728\u94fe\u8868\u4e0a p . next = node . next ; // p\u662fnode\u7684\u524d\u9a71\u8282\u70b9\uff0cp.next=node.next\u76f8\u5f53\u4e8e\u5220\u6389\u4e86node ++ modCount ; -- size ; afterNodeRemoval ( node ); // \u8be5\u65b9\u6cd5\u4e3a\u7a7a\uff0c\u4e3a\u5b50\u7c7b\u7559\u4e0b\u7684\u540e\u7eed\u64cd\u4f5c return node ; } } return null ; } 6. \u603b\u7ed3 \u00b6 \uff08\u5341\u4e09\uff09LinkedHashMap \u00b6 1. \u6e90\u7801\u5206\u6790 \u00b6 \u8282\u70b9\uff1a \u8868\u4e2d\u5b58\u653e\u4e86 head \u548c tail \u6307\u9488\u6765\u6307\u5411\u8d77\u59cb\u548c\u7ec8\u6b62\u8282\u70b9\uff1b \u8868\u5185\u7ed3\u70b9\u7531 Entry \u4fdd\u5b58\uff0c\u5b83\u7ee7\u627f\u81ea HashMap \u7684 Node \uff0c\u53ea\u662f\u591a\u4e86\u524d\u9a71\u548c\u540e\u7ee7\u4e24\u4e2a\u6307\u9488\u3002 \u6dfb\u52a0\u5143\u7d20\uff1a \u8d70\u7684\u662f\u7236\u7c7b\u7684 add() \uff0c\u56e0\u6b64\u6700\u7ec8\u8c03\u7528\u7684\u8fd8\u662f HashMap \u7684 putVal() \u65b9\u6cd5\u3002 \uff08\u5341\u56db\uff09TreeMap \u00b6 \u6784\u9020\u65f6\u4e00\u5b9a\u8981\u5199\u6bd4\u8f83\u5668\uff0c\u6216\u8005\u4f20\u5165\u7684\u5bf9\u8c61\u672c\u8eab\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6bd4\u8f83\u5668 \uff08\u5982\uff1a String \uff09\uff0c\u56e0\u4e3a\u63d2\u5165\u5143\u7d20\u65f6\u9700\u8981\u5bf9\u5927\u5c0f\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u5e95\u5c42\u5c31\u4f1a\u81ea\u52a8\u4f7f\u7528\u5bf9\u8c61\u7684 Compatable \u63a5\u53e3\uff0c\u5982\u679c\u8be5\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0\u6bd4\u8f83\u63a5\u53e3\u5c31\u4f1a\u53d1\u751f\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0c\u8be6\u89c1\u4e0b\u65b9\u6e90\u7801\u5206\u6790\u3002 1. put()\u6e90\u7801\u5206\u6790 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 /** * Associates the specified value with the specified key in this map. * If the map previously contained a mapping for the key, the old * value is replaced. * * @param key key with which the specified value is to be associated * @param value value to be associated with the specified key * * @return the previous value associated with {@code key}, or * {@code null} if there was no mapping for {@code key}. * (A {@code null} return can also indicate that the map * previously associated {@code null} with {@code key}.) * @throws ClassCastException if the specified key cannot be compared * with the keys currently in the map * @throws NullPointerException if the specified key is null * and this map uses natural ordering, or its comparator * does not permit null keys */ public V put ( K key , V value ) { Entry < K , V > t = root ; if ( t == null ) { compare ( key , key ); // compare\u4e2d\u6709\u5224\u7a7a\u64cd\u4f5c\uff0c\u5982\u679c\u4e3a\u7a7a\u4f1a\u629b\u5f02\u5e38 root = new Entry <> ( key , value , null ); size = 1 ; modCount ++ ; return null ; } int cmp ; Entry < K , V > parent ; // split comparator and comparable paths Comparator <? super K > cpr = comparator ; if ( cpr != null ) { do { parent = t ; cmp = cpr . compare ( key , t . key ); // \u4f20\u5165\u7684\u6bd4\u8f83\u5668 if ( cmp < 0 ) t = t . left ; else if ( cmp > 0 ) t = t . right ; else return t . setValue ( value ); // \u6bd4\u8f83\u7ed3\u679c\u76f8\u7b49\u65f6\u4e0d\u4f1a\u6539\u53d8key\u503c\uff0c\u76f4\u63a5\u66ff\u6362value\u503c } while ( t != null ); } else { if ( key == null ) throw new NullPointerException (); @SuppressWarnings ( \"unchecked\" ) Comparable <? super K > k = ( Comparable <? super K > ) key ; // \u7528key\u81ea\u5e26\u7684\u6bd4\u8f83\u5668\uff0c\u6240\u4ee5\u5982\u679ckey\u6ca1\u6709\u5b9e\u73b0\u6bd4\u8f83\u5668\u63a5\u53e3\u7684\u8bdd\uff0c\u5f3a\u8f6c\u5c31\u4f1a\u5931\u8d25\uff0c\u62a5\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38 do { parent = t ; cmp = k . compareTo ( t . key ); if ( cmp < 0 ) t = t . left ; else if ( cmp > 0 ) t = t . right ; else return t . setValue ( value ); } while ( t != null ); } Entry < K , V > e = new Entry <> ( key , value , parent ); if ( cmp < 0 ) parent . left = e ; else parent . right = e ; fixAfterInsertion ( e ); size ++ ; modCount ++ ; return null ; } 2. \u4f8b\u9898 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 TreeMap < String , String > map = new TreeMap <> ( new Comparator < String > () { @Override public int compare ( String o1 , String o2 ) { return o1 . length () - o2 . length (); } }); map . put ( \"Kun\" , \"15\" ); map . put ( \"Night\" , \"15\" ); map . put ( \"Rachel\" , \"14\" ); map . put ( \"Bob\" , \"20\" ); Set < Map . Entry < String , String >> entries = map . entrySet (); for ( Map . Entry < String , String > entry : entries ) { System . out . println ( entry . getKey () + \" - \" + entry . getValue ()); } /* \u8f93\u51fa\uff1a Kun - 20 Night - 15 Rachel - 14 */ \u6839\u636e\u6e90\u7801\u53ef\u77e5\uff0c\u4f20\u5165\u7684\u6bd4\u8f83\u5668\u5224\u65ad Bub \u548c Kun \u957f\u5ea6\u76f8\u540c\uff0c\u56e0\u6b64\u5c06 Kun \u7684 value \u6539\u4e3a\u4e86 20 \uff0c\u800c\u540e\u8fd4\u56de\u3002 \uff08\u5341\u4e94\uff09Hashtable \u00b6 \u5b58\u653e\u952e\u503c\u5bf9\uff0c\u90fd\u4e0d\u80fd\u4e3a null \uff1b \u7ee7\u627f Dictionary \uff0c\u5b9e\u73b0 Map \u63a5\u53e3\uff1b \u4f7f\u7528\u65b9\u6cd5\u4e0e HashMap \u57fa\u672c\u4e00\u81f4\uff1b \u6709 synchronized \u5173\u952e\u5b57\uff0c\u7ebf\u7a0b\u5b89\u5168\uff1b key \u503c\u76f8\u540c\u7684\u5143\u7d20\u4f1a\u76f4\u63a5\u66ff\u6362\uff1b \u9ed8\u8ba4\u521d\u59cb\u5316 table \u5927\u5c0f\u4e3a 11 11 \uff0c\u95e8\u9650\u503c\u4e3a 0.75 0.75 \uff1b \u5230\u8fbe\u95e8\u9650\u503c\u65f6\uff0c\u4ee5\u539f\u6765\u7684\u5927\u5c0f 2 2 \u500d +1 +1 \u7684\u65b9\u5f0f\u6269\u5bb9\u3002 1. \u6269\u5bb9\u673a\u5236\u6e90\u7801 \u00b6 \uff08\u5341\u516d\uff09Properties \u00b6 \u7ee7\u627f\u81ea Hashtable \uff0c\u5e76\u5b9e\u73b0\u4e86 map \u63a5\u53e3\uff1b \u952e\u503c\u5bf9\u7684\u65b9\u5f0f\u4fdd\u5b58\u6570\u636e\uff0c\u65e0\u5e8f\uff0c\u4e0d\u80fd\u6709\u7a7a\u503c\uff0c\u4e0e Hashtable \u7c7b\u4f3c\uff1b \u82e5\u6709\u76f8\u540c\u7684 key \u503c\uff0c\u76f4\u63a5\u66ff\u6362\uff1b \u53ef\u4ee5\u7528\u4e8e\u4ece xxx.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6570\u636e\u5230 Properties \u7c7b\u5bf9\u8c61\u4e2d\u3002 \u5e38\u7528\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // \u589e properties . put ( key , value ); // \u5220 properties . remove ( key ); // \u6539 properties . put ( \u76f8\u540ckey , value ); // \u67e5 properties . get ( key ); properties . getProperty ( key ); \u7528\u6cd5\u8be6\u89c1 \u7b2c\u5341\u56db\u7ae0 IO\u6d41 -\uff08\u4e09\uff09\u8282\u70b9\u6d41\u548c\u5904\u7406\u6d41 - 6. Properties \uff08\u5341\u4e03\uff09\u5bb9\u5668\u7684\u8fb9\u904d\u5386\u8fb9\u5220\u9664 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 Vector < Integer > vec = new Vector <> (); vec . add ( 1 ); vec . add ( 2 ); vec . add ( 3 ); vec . add ( 4 ); vec . add ( 5 ); vec . add ( 6 ); // \u9519\u8bef\u5199\u6cd5\uff1a for ( Integer num : vec ){ if ( num > 2 ) vec . remove ( num ); // \u4f1a\u62a5\u9519ConcurrentModificationException\u5f02\u5e38 } // \u6b63\u786e\u5199\u6cd51\uff1a Iterator it = vec . iterator (); while ( it . hasNext ()){ Integer num = it . next (); if ( num > 2 ) it . remove (); // \u4f7f\u7528\u8fed\u4ee3\u5668\u7684remove()\u65b9\u6cd5 } // \u6b63\u786e\u5199\u6cd52\uff1a for ( int i = 0 ; i < vec . size (); i ++ ){ Integer num = vec . get ( i ); if ( num > 2 ){ vec . remove ( num ); // \u5220\u9664\u540e\uff0c\u5bb9\u5668\u540e\u9762\u7684\u5143\u7d20\u4f1a\u81ea\u52a8\u524d\u79fb i -- ; // \u56e0\u6b64\u6307\u9488\u9700\u8981\u5f80\u524d\u4e00\u4f4d } } \u5341\u3001\u6cdb\u578b \u00b6 \uff08\u4e00\uff09\u6cdb\u578b\u4f18\u70b9 \u00b6 \u76f4\u63a5\u63d2\u5165\u96c6\u5408\u5bf9\u5143\u7d20\u7c7b\u578b\u6ca1\u6709\u7ea6\u675f\uff0c\u5411\u4e0b\u8f6c\u578b\u65f6\u4e0d\u5b89\u5168\uff1b \u904d\u5386\u65f6\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u5411\u4e0b\u8f6c\u578b\uff0c\u6548\u7387\u4f4e\u3002 \uff08\u4e8c\uff09\u4f7f\u7528\u7ec6\u8282 \u00b6 \u6cdb\u578b\u4e0d\u80fd\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1b \u4f20\u5165\u7684\u5b9e\u9645\u7c7b\u578b\u53ef\u4ee5\u662f\u6cdb\u578b\u7684\u5b50\u7c7b\u7c7b\u578b\uff1b \u7b80\u5199\uff1a List<String> list = new ArrayList<>(); \u5982\u679c\u521b\u5efa\u5bf9\u8c61/\u5bb9\u5668\u65f6\u4e0d\u6307\u5b9a\u6cdb\u578b\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a Object \u7c7b\u578b\uff1b \u4e0d\u80fd\u76f4\u63a5\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u7f16\u8bd1\u65f6\u65e0\u6cd5\u786e\u5b9a\u7c7b\u578b\uff1b static \u548c\u6cdb\u578b\u4e0d\u5171\u5b58\uff0c\u56e0\u4e3a\u9759\u6001\u5c5e\u6027/\u65b9\u6cd5\u5728\u7c7b\u52a0\u8f7d\u65f6\u786e\u5b9a\uff0c\u800c\u6cdb\u578b\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff1b \u5b9e\u73b0\u6cdb\u578b\u65f6\u4e0d\u6307\u5b9a\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a Object \u7c7b\u578b\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u8fd9\u4e48\u5199\uff1b \u6cdb\u578b\u4e0d\u80fd\u7ee7\u627f\uff1a List<Object> list= new ArrayList<String>(); \u9519\u8bef\u5199\u6cd5\u3002 \uff08\u4e09\uff09 \u4f7f\u7528\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // \u6cdb\u578b\u7c7b class Animal < T , R > { public void run ( R r ){ // \u4e0d\u662f\u6cdb\u578b\u65b9\u6cd5\uff0c\u662f\u4f7f\u7528\u4e86\u6cdb\u578b // ... } } Animal < String , Integer > animal = new Animal <> (); // \u6cdb\u578b\u63a5\u53e3 interface USB < E , R > { E charge ( R r ); } class Computer inmplements USB < Integer , String > { } // \u6cdb\u578b\u65b9\u6cd5 class Person { public < T , E > void eat ( T t , E e ){ } } Person p = new Person (); p . eat ( \"\u4e09\" , 100 ); // \u7f16\u8bd1\u5668\u81ea\u52a8\u5224\u65ad\u7c7b\u578b ? \u7b26\u53f7 1 2 3 4 5 6 7 8 9 10 11 public void method ( List <?> ){ // \u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b } public void method ( List <? extend AA > ){ // \u53ea\u80fd\u662fAA\u6216AA\u7684\u5b50\u7c7b } public void method ( List <? super AA > ){ // \u53ea\u80fd\u662fAA\u6216AA\u7684\u7236\u7c7b } \u5341\u4e00\u3001 Java \u7ed8\u56fe \u00b6 \uff08\u4e00\uff09\u57fa\u672c\u8bed\u6cd5 \u00b6 \u6837\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public class MyFrame extends JFrame { private MyPanel mp ; public MyFrame () { mp = new MyPanel (); this . add ( mp ); this . setSize ( 400 , 300 ); this . setVisible ( true ); // \u70b9\u5173\u95ed\u6309\u94ae\u65f6\uff0c\u7a0b\u5e8f\u540c\u65f6\u9000\u51fa(\u4e0d\u52a0\u8fd9\u884c\u4ee3\u7801\uff0c\u5173\u95ed\u7ed8\u56fe\u7a97\u53e3\u540e\u7a0b\u5e8f\u8fd8\u5728\u8fd0\u884c) this . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ); } public static void main ( String [] args ) { new MyFrame (); } } class MyPanel extends JPanel { @Override public void paint ( Graphics g ) { super . paint ( g ); g . drawOval ( 10 , 10 , 100 , 100 ); // (10,10)\u662f\u5176\u5916\u63a5\u77e9\u5f62\u5de6\u4e0a\u89d2\u70b9\u7684\u4f4d\u7f6e } } paint()\u65b9\u6cd5\u88ab\u8c03\u7528\u7684\u65f6\u673a\uff1a \u9996\u6b21\u521b\u5efa\u65f6\uff1b \u7a97\u53e3\u5927\u5c0f\u53d8\u5316\u65f6\uff1b \u7a97\u53e3\u6700\u5c0f\u5316\u540e\u53c8\u91cd\u65b0\u6253\u5f00\u65f6\uff1b repaint() \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\u3002 \u5176\u4ed6\u56fe\u5f62\u7ed8\u5236\uff1a 1 2 3 4 5 6 7 8 // \u7ed8\u5236\u56fe\u7247 Image image = Toolkit . getDefaultToolkit (). getImage ( MyPanel . class . getResource ( \"/kun.png\" )); // MyPanel\u8868\u793a\u4ece\u8be5\u7c7b\u6240\u5728\u7684\u9879\u76ee\u6839\u90e8\u5f00\u59cb\u67e5\u627e\u6587\u4ef6 g . drawImage ( image , 150 , 150 , 50 , 50 , this ); // \u7ed8\u5236\u6587\u5b57 g . setColor ( Color . red ); g . setFont ( new Font ( \"\u96b6\u4e66\" , Font . BOLD , 38 )); g . drawString ( \"Hello World\" , 100 , 100 ); // \u6ce8\u610f\uff0c(100,100)\u6307\u7684\u662f\u5b57\u4f53\u5de6\u4e0b\u89d2\u4f4d\u7f6e \uff08\u4e8c\uff09\u952e\u76d8\u4e8b\u4ef6\u76d1\u542c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 public class MoveBall extends JFrame { public MoveBall () { Ball ball = new Ball ( 10 , 10 ); this . add ( ball ); this . setSize ( 400 , 300 ); this . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ); this . addKeyListener ( ball ); // \u522b\u5fd8\u4e86\u6dfb\u52a0\u76d1\u542c\u5668 this . setVisible ( true ); } public static void main ( String [] args ) { new MoveBall (); } } class Ball extends JPanel implements KeyListener { // \u5b9e\u73b0\u6309\u952e\u76d1\u542c\u63a5\u53e3 int x ; int y ; public Ball ( int x , int y ) { this . x = x ; this . y = y ; } @Override public void paint ( Graphics g ) { super . paint ( g ); g . fillOval ( x , y , 50 , 50 ); } @Override public void keyTyped ( KeyEvent e ) { } @Override public void keyPressed ( KeyEvent e ) { System . out . println ( e . getKeyCode () + \"\u952e\u88ab\u6309\u4e0b...\" ); switch ( e . getKeyCode ()) { case KeyEvent . VK_UP : System . out . println ( \"\u5411\u4e0a\" ); y -- ; break ; case KeyEvent . VK_DOWN : System . out . println ( \"\u5411\u4e0b\" ); y ++ ; break ; case KeyEvent . VK_LEFT : System . out . println ( \"\u5411\u5de6\" ); x -- ; break ; case KeyEvent . VK_RIGHT : System . out . println ( \"\u5411\u53f3\" ); x ++ ; break ; } this . repaint (); } @Override public void keyReleased ( KeyEvent e ) { } } \u5341\u4e8c\u3001\u7ebf\u7a0b \u00b6 \uff08\u4e00\uff09\u5e76\u53d1\u4e0e\u5e76\u884c \u00b6 \u5e76\u53d1\uff1a \u540c\u4e00\u65f6\u95f4\u6bb5\u5185\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff0c\u5b83\u4eec\u4e0d\u65ad\u5207\u6362\u8fdb\u884c\uff08\u5355\u6838\u6216\u591a\u6838 CPU \u6267\u884c\u591a\u4efb\u52a1\uff09\uff1b \u5e76\u884c\uff1a \u540c\u4e00\u65f6\u523b\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u591a\u6838 CPU \u6267\u884c\u591a\u4efb\u52a1\uff09\u3002 \u83b7\u53d6\u5f53\u524d\u7535\u8111\u7684 CPU \u6570\u91cf\uff1a 1 2 Runtime runtime = Runtime . getRuntime (); int num = runtime . availableProcessors (); // CPU\u6570\u91cf \u83b7\u53d6\u7ebf\u7a0b\u540d\uff1a 1 Thread . currentThread (). getName (); \u5de5\u5177\uff1a jconsole \u5de5\u5177\uff0c\u53ef\u89c6\u5316\u7ebf\u7a0b\u6267\u884c\u60c5\u51b5\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u4e3b\u7ebf\u7a0b\u5373\u4f7f\u8fd0\u884c\u7ed3\u675f\u4e86\uff0c\u82e5\u8fd8\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u8fd0\u884c\uff0c\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u7ed3\u675f\u3002 \uff08\u4e8c\uff09 run() \u65b9\u6cd5 \u00b6 \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528run()\u65b9\u6cd5\uff0c\u800c\u5b9e\u4f7f\u7528start()\u542f\u52a8\uff1f \u56e0\u4e3a\u76f4\u63a5\u8c03\u7528 run() \u65b9\u6cd5\uff0c\u76f8\u5f53\u4e8e\u542f\u52a8\u7684\u662f main \u65b9\u6cd5\u7684 run() \uff0c\u800c\u4e0d\u662f\u5bf9\u5e94\u5b50\u7ebf\u7a0b\u7684\u3002 \u6e90\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public synchronized void start () { /** * This method is not invoked for the main method thread or \"system\" * group threads created/set up by the VM. Any new functionality added * to this method in the future may have to also be added to the VM. * * A zero status value corresponds to state \"NEW\". */ if ( threadStatus != 0 ) throw new IllegalThreadStateException (); /* Notify the group that this thread is about to be started * so that it can be added to the group's list of threads * and the group's unstarted count can be decremented. */ group . add ( this ); boolean started = false ; try { start0 (); // \u6838\u5fc3\u4ee3\u7801\u5728start0()\uff0c\u5b83\u662f\u4e00\u4e2a\u672c\u5730native\u65b9\u6cd5\uff0c\u7531JVM\u8c03\u7528 started = true ; } finally { try { if ( ! started ) { group . threadStartFailed ( this ); } } catch ( Throwable ignore ) { /* do nothing. If start0 threw a Throwable then it will be passed up the call stack */ } } } start0() \u662f\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7684\u5173\u952e\uff0c\u5e95\u5c42\u662f C/C++ \u5b9e\u73b0\u7684\uff0c\u7531 JVM \u8c03\u7528\u3002 \uff08\u4e09\uff09\u7ebf\u7a0b\u5b9e\u73b0\u7684\u65b9\u5f0f \u00b6 \u65b9\u5f0f\u4e00\u3001\u7ee7\u627f Thread \u00b6 1 2 3 4 5 6 class MyThread extends Thread { @Override public void run () { // ... } } \u65b9\u5f0f\u4e8c\u3001\u5b9e\u73b0 Runnable \u63a5\u53e3 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public class Hi { public static void main ( String [] args ) { SayHi hi = new SayHi (); Thread thread = new Thread ( hi ); // \u4f7f\u7528\u4e86\u4ee3\u7406\u6a21\u5f0f thread . start (); } } class SayHi implements Runnable { private int num = 0 ; @Override public void run () { while ( true ) { System . out . println ( \"\u54aa\u5514~ \" + num ++ + Thread . currentThread (). getName ()); try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } if ( num == 80 ) break ; } } } \u533a\u522b\uff1a \u4e24\u79cd\u65b9\u6cd5\u5728\u529f\u80fd\u4e0a\u5b8c\u5168\u4e00\u6837\uff0c\u4f46\u662f \u5b9e\u73b0 Runnable \u63a5\u53e3\u7684\u65b9\u5f0f\u80fd\u591f\u590d\u7528\u529f\u80fd\uff0c\u8ba9\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90 \uff0c\u5e76\u4e14\u907f\u514d\u4e86\u5355\u7ee7\u627f\u7684\u9650\u5236\u3002 \u95ee\u9898\uff1a \u591a\u4e2a\u7ebf\u7a0b\u5171\u540c\u6267\u884c\u64cd\u4f5c\u67d0\u4e2a\u8d44\u6e90\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u7ebf\u7a0b\u7684\u540c\u6b65\u6216\u4e92\u65a5\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6cd5\u8be6\u89c1\u7b2c\u5341\u4e09\u7ae0 sychrnized \u3002 \uff08\u56db\uff09 \u4ee5 Runnable \u4e3a\u4f8b\u7684\u4ee3\u7406\u6a21\u5f0f \u00b6 \u6838\u5fc3\u5c31\u662f\uff1a\u4ee3\u7406\u7c7b\u65e2\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u53c8\u901a\u8fc7\u6784\u9020\u5668\u4f20\u5165\u4e86\u63a5\u53e3\uff0c\u5728\u5176\u65b9\u6cd5\u4e2d\u5b9e\u9645\u8c03\u7528\u7684\u662f\u522b\u4eba\u7684\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 public class Index { public static void main ( String [] args ) { MyCat myCat = new MyCat (); MyThread myThread = new MyThread ( myCat ); myThread . start (); } } /** * \u5b50\u7ebf\u7a0bMyCat\uff0c\u5b9e\u73b0\u4e86MyRunnable\u63a5\u53e3 */ class MyCat implements MyRunnable { @Override public void run () { System . out . println ( \"meo\u2014\u2014 meo\u2014\u2014\" ); } } /** * \u63a5\u53e3 */ interface MyRunnable { void run (); } /** * \u65e2\u5b9e\u73b0\u4e86MyRunnable\u63a5\u53e3\uff0c\u53c8\u901a\u8fc7\u6784\u9020\u5668\u4f20\u5165\u4e86MyRunnable\u5bf9\u8c61 * \u867d\u7136\u4f7f\u7528\u7684\u662fMyThread\u7684start\u65b9\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u8c03\u7528\u7684\u662fMyRunnable\u7684run()\u65b9\u6cd5 * \uff08\u6ce8\u610f\uff0c\u5b9e\u9645\u7ebf\u7a0b\u7684start()\u6e90\u7801\u4e0d\u662f\u8fd9\u6837\u5199\u7684\uff0c\u8fd9\u91cc\u53ea\u662f\u4fbf\u4e8e\u5c55\u793a\u4ee3\u7406\u6a21\u5f0f\uff09 */ class MyThread implements MyRunnable { private MyRunnable runnable = null ; @Override public void run () { if ( runnable != null ) runnable . run (); } public MyThread ( MyRunnable runnable ) { this . runnable = runnable ; } public void start (){ start0 (); } public void start0 (){ run (); } } \uff08\u4e94\uff09\u7ebf\u7a0b\u7ec8\u6b62 \u00b6 \u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf flag \u63a7\u5236 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 public class Index { public static void main ( String [] args ) throws InterruptedException { ThreadA threadA = new ThreadA (); threadA . start (); // \u7b49\u5f85\u4e94\u79d2\u5173\u95ed\u7ebf\u7a0bA Thread . sleep ( 5000 ); threadA . setFlag ( false ); } } class ThreadA extends Thread { private boolean flag = true ; private int num = 0 ; @Override public void run () { super . run (); while ( flag ) { num ++ ; System . out . println ( Thread . currentThread (). getName () + \", num = \" + num ); try { Thread . sleep ( 50 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } } } public void setFlag ( boolean flag ) { this . flag = flag ; } } \uff08\u516d\uff09\u7ebf\u7a0b\u5e38\u7528\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 Thread . currentThread (). setName () // \u8bbe\u7f6e\u7ebf\u7a0b\u540d\u79f0 Thread . currentThread (). getName () // \u8bbe\u83b7\u53d6\u7ebf\u7a0b\u540d\u79f0 thread . start () // \u5f00\u59cb\u6267\u884c\u7ebf\u7a0b thread . interrupt () // \u4e2d\u65ad\u7ebf\u7a0b\uff0c\u4e00\u822c\u7528\u4e8e\u5524\u9192\u6b63\u5728\u4f11\u7720\u7684\u7ebf\u7a0b Thread . sleep () // \u4f7f\u5f53\u524d\u7ebf\u7a0b\u4f11\u7720 // Thread\u67093\u4e2a\u4f18\u5148\u7ea7\u5e38\u91cf\uff0c\u503c\u5206\u522b\u4e3a1\u30015\u300110 thread . setPriority ( Thread . MIN_PRIORITY ) // \u66f4\u6539\u7ebf\u7a0b\u4f18\u5148\u7ea7\u4e3a1 thread . getPriority () // \u83b7\u53d6\u7ebf\u7a0b\u4f18\u5148\u7ea7 Thread . yield () // \u7ebf\u7a0b\u7684\u793c\u8ba9\uff0c\u8ba9\u5176\u4ed6\u7ebf\u7a0b\u5148\u884c\uff0c\u4f46\u662f\u4e0d\u4e00\u5b9a\u6210\u529f threa . join () // \u7ebf\u7a0b\u7684\u63d2\u961f join()\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class TheadJoin { public static void main ( String [] args ) throws InterruptedException { Thread1 thread1 = new Thread1 (); thread1 . start (); for ( int i = 0 ; i < 20 ; i ++ ) { Thread . sleep ( 500 ); System . out . println ( \"\u4e3b\u7ebf\u7a0b\" + Thread . currentThread (). getName () + \"\u5403\u4e86\" + i + \"\u4e2a\u5305\u5b50\" ); if ( i == 5 ) { System . out . println ( \"==============\u4e3b\u7ebf\u7a0b\u8ba9\u5b50\u7ebf\u7a0b\u5148\u5403\" ); thread1 . join (); // \u4e3b\u7ebf\u7a0b\u4e2d\u65ad\uff0c\u76f4\u5230\u5b50\u7ebf\u7a0b1\u8fd0\u884c\u5b8c\u518d\u7ee7\u7eed System . out . println ( \"==============\u4e3b\u7ebf\u7a0b\u63a5\u7740\u5403\" ); } } } } class Thread1 extends Thread { @Override public void run () { super . run (); for ( int i = 0 ; i < 20 ; i ++ ) { try { Thread . sleep ( 500 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } System . out . println ( \"\u7ebf\u7a0b\" + Thread . currentThread (). getName () + \"\u5403\u4e86\" + i + \"\u4e2a\u5305\u5b50\" ); } } } \uff08\u4e03\uff09\u7528\u6237\u7ebf\u7a0b\u4e0e\u5b88\u62a4\u7ebf\u7a0b \u00b6 \u7528\u6237\u7ebf\u7a0b\uff1a \u53c8\u540d\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u5f53\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\u6216\u88ab\u901a\u77e5\u7684\u65f6\u5019\u7ed3\u675f\u7ebf\u7a0b\u3002 \u5b88\u62a4\u7ebf\u7a0b\uff1a \u4e3a\u5de5\u4f5c\u7ebf\u7a0b\u670d\u52a1\uff0c\u6240\u6709\u7528\u6237\u7ebf\u7a0b\u7ed3\u675f\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u968f\u4e4b\u7ed3\u675f\u3002 \u6700\u5178\u578b\u7684\u5b88\u62a4\u7ebf\u7a0b\u5982\uff1a\u5783\u573e\u56de\u6536\u673a\u5236\u3002 \u5236\u4f5c\u5b88\u62a4\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class Index { public static void main ( String [] args ) throws InterruptedException { DaemonThread daemonThread = new DaemonThread (); daemonThread . setDaemon ( true ); // \u8bbe\u7f6edaemonThread\u4e3a\u5b88\u62a4\u7ebf\u7a0b daemonThread . start (); for ( int i = 0 ; i < 5 ; i ++ ) { System . out . println ( \"MainThread , i = \" + ( i + 1 )); Thread . sleep ( 500 ); } } } /** * \u5b88\u62a4\u7ebf\u7a0b */ class DaemonThread extends Thread { @Override public void run () { super . run (); for ( int i = 0 ; i < 10 ; i ++ ) { System . out . println ( Thread . currentThread (). getName () + \",i=\" + ( i + 1 )); try { Thread . sleep ( 500 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } } } } \uff08\u516b\uff09\u7ebf\u7a0b\u72b6\u6001 \u00b6 \u5b98\u65b9\u6587\u6863\u4e2d\u5206\u4e3a\u516d\u79cd\u72b6\u6001\uff0c\u4e0d\u8fc7 Runnable \u72b6\u6001\u53c8\u53ef\u4ee5\u5212\u5206\u4e3a Ready \u548c Running \u72b6\u6001\u3002 \u67e5\u770b\u7ebf\u7a0b\u72b6\u6001\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 public class Index { public static void main ( String [] args ) throws InterruptedException { ThreadB threadB = new ThreadB (); System . out . println ( threadB . getState ()); threadB . start (); while ( threadB . getState () != Thread . State . TERMINATED ) { System . out . println ( threadB . getState ()); Thread . sleep ( 500 ); } System . out . println ( threadB . getState ()); } } class ThreadB extends Thread { private int num = 0 ; @Override public void run () { super . run (); for ( int i = 0 ; i < 5 ; i ++ ) { num ++ ; System . out . println ( Thread . currentThread (). getName () + \", num = \" + num ); try { Thread . sleep ( 500 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } } } } /** \u8f93\u51fa\uff1a NEW RUNNABLE Thread-0, num = 1 TIMED_WAITING Thread-0, num = 2 TIMED_WAITING Thread-0, num = 3 TIMED_WAITING Thread-0, num = 4 TIMED_WAITING Thread-0, num = 5 TIMED_WAITING TERMINATED */ \u5341\u4e09\u3001synchronized \u00b6 \uff08\u4e00\uff09\u7ebf\u7a0b\u540c\u6b65 \u00b6 \u4fdd\u8bc1\u6570\u636e\u5728\u540c\u4e00\u65f6\u523b\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\uff1b \u5373\uff0c\u5f53\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u5bf9\u5185\u5b58\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u53ef\u4ee5\u5bf9\u5185\u5b58\u8fdb\u884c\u64cd\u4f5c\uff0c\u76f4\u5230\u8be5\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u3002 \uff08\u4e8c\uff09\u7528\u6cd5 \u00b6 \u4e3a\u5bf9\u8c61\u52a0\u9501\uff08\u975e\u9759\u6001\uff09 1 2 3 4 5 6 7 8 9 // \u540c\u6b65\u4ee3\u7801\u5757 synchronized ( \u5bf9\u8c61 ){ // ... } // \u540c\u6b65\u65b9\u6cd5 public synchronized void method ( String name ){ // ... } \u5bf9\u7c7b\u52a0\u9501\uff08\u9759\u6001\uff09 1 2 3 4 5 6 7 8 9 // \u540c\u6b65\u4ee3\u7801\u5757 synchronized ( \u7c7b\u540d . class ) { // ... } // \u540c\u6b65\u65b9\u6cd5 public synchronized static void method (){ // .... } \u4f18\u5148\u9009\u62e9\u540c\u6b65\u4ee3\u7801\u5757\uff1b \u591a\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u7684\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u9501\u5bf9\u8c61 \uff0c\u53cd\u4f8b\uff1a 1 2 3 4 5 6 7 class MyThread extends Thread { public void method (){ synchronized ( this ) { // \u9519\u8bef\uff0c\u8be5\u7c7b\u4f1a\u4ea7\u751f\u591a\u4e2a\u5bf9\u8c61\uff0cthis\u8868\u793a\u7684\u4e0d\u662f\u540c\u4e00\u4e2a\u9501 // ... } } } \uff08\u4e09\uff09\u9501\u5206\u7c7b \u00b6 1. \u4e92\u65a5\u9501 \u00b6 \u4f7f\u7528 synchronized \u6807\u8bb0\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u8be5\u5bf9\u8c61\uff1b \u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u6267\u884c\u6548\u7387\u964d\u4f4e\uff1b \u662f\u975e\u516c\u5e73\u9501\u3002 \uff08\u56db\uff09\u6b7b\u9501 \u00b6 \u4ea7\u751f\u6761\u4ef6\uff1a \u4e92\u65a5\uff1a\u6240\u7ade\u4e89\u7684\u8d44\u6e90\u5fc5\u987b\u4e92\u65a5\uff0c\u4e0d\u80fd\u5171\u4eab\uff1b \u8bf7\u6c42\u4e0e\u4fdd\u6301\uff1a\u4fdd\u6301\u5f53\u524d\u5df2\u6709\u8d44\u6e90\uff0c\u8fd8\u80fd\u7533\u8bf7\u65b0\u7684\u8d44\u6e90\uff1b \u4e0d\u5265\u593a\uff1a\u5df2\u83b7\u5f97\u7684\u8d44\u6e90\u4e0d\u80fd\u88ab\u62a2\u5360\uff1b \u5faa\u73af\u7b49\u5f85\uff1a\u81f3\u5c11\u4e24\u4e2a\u8fdb\u7a0b\u5f62\u6210\u5faa\u73af\u7b49\u5f85\u3002 \u6a21\u62df\u6b7b\u9501\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 public class DeadLock { public static void main ( String [] args ) { MyDeadLock myDeadLock1 = new MyDeadLock ( true ); MyDeadLock myDeadLock2 = new MyDeadLock ( false ); myDeadLock1 . start (); myDeadLock2 . start (); } } class MyDeadLock extends Thread { // \u6ce8\u610f\uff0c\u8d44\u6e90\u4e00\u5b9a\u8981\u662f\u5171\u4eab\u7684 private static Object o1 = new Object (); private static Object o2 = new Object (); private boolean flag = true ; public MyDeadLock ( boolean flag ) { this . flag = flag ; } @Override public void run () { super . run (); if ( flag ) { synchronized ( o1 ) { System . out . println ( \"=============== 1\" ); synchronized ( o2 ) { System . out . println ( \"=============== 2\" ); } } } else { synchronized ( o2 ) { System . out . println ( \"=============== 3\" ); synchronized ( o1 ) { System . out . println ( \"=============== 4\" ); } } } } } /* \u8f93\u51fa\uff1a =============== 1 =============== 3 */ \uff08\u4e94\uff09\u91ca\u653e\u9501 \u00b6 \u91ca\u653e\u9501\u7684\u60c5\u51b5\uff1a \u6b63\u5e38\u6267\u884c\u5b8c\u6bd5\u540c\u6b65\u4ee3\u7801\u5757\uff1b \u6267\u884c\u8fc7\u7a0b\u4e2d\u9047\u5230 break \u6216 return \uff1b \u51fa\u73b0\u672a\u5904\u7406\u7684 Error \u6216 Exception \uff1b \u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u6267\u884c\u4e86 wait() \u65b9\u6cd5\uff0c\u6216\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\u4e86 join() \u3002 \u4e0d\u4f1a\u91ca\u653e\u9501\u7684\u60c5\u51b5\uff1a \u8c03\u7528 Thread.sleep() \u6216 Thread.yield() \uff1b \uff08\u516d\uff09\u5b9e\u4f8b \u00b6 1. \u4f8b\u4e00 \u00b6 \u4f7f\u7528\u4e92\u65a5\u9501\u89e3\u51b3\u95ee\u9898\uff0c\u4e09\u4e2a\u5356\u7968\u7a97\u53e3\u4e00\u8d77\u5356100\u5f20\u7968\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 public class Tickets { public static void main ( String [] args ) { TicketThread ticketThread = new TicketThread (); // \u53ea\u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u9501\u53ef\u4ee5\u52a0\u5728\u5b83\u8eab\u4e0a Thread thread1 = new Thread ( ticketThread ); Thread thread2 = new Thread ( ticketThread ); Thread thread3 = new Thread ( ticketThread ); thread1 . start (); thread2 . start (); thread3 . start (); } } class TicketThread implements Runnable { private static int num = 100 ; public synchronized boolean sale () { // \u4e3a\u5356\u7968\u529f\u80fd\u52a0\u9501 if ( num <= 0 ) { System . out . println ( \"\u5356\u5b8c\u4e86...\" ); return true ; } try { Thread . sleep ( 50 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } System . out . println ( Thread . currentThread (). getName () + \",\u5269\u4f59\u7968\u6570\uff1a\" + -- num ); return false ; } @Override public void run () { while ( true ) { boolean flag = sale (); if ( flag ) break ; } } } 2. \u4f8b\u4e8c \u00b6 \u7ebf\u7a0b A \u6253\u5370 100 100 \u4ee5\u5185\u7684\u968f\u673a\u6574\u6570\uff0c\u76f4\u5230\u7ebf\u7a0b B \u63a5\u6536\u5230\u8f93\u5165\u5b57\u7b26 Q \uff0c\u7ed3\u675f\u6253\u5370\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 public class Index { public static void main ( String [] args ) { MyThreadB myThreadB = new MyThreadB (); myThreadB . start (); } } class MyThreadA extends Thread { private boolean flag = true ; @Override public void run () { super . run (); while ( flag ) { Random random = new Random (); int num = random . nextInt ( 100 ); System . out . println ( num ); try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } } System . out . println ( \"======================= A Quit!\" ); } public void setFlag ( boolean flag ) { this . flag = flag ; } } class MyThreadB extends Thread { private MyThreadA myThreadA ; @Override public void run () { super . run (); myThreadA = new MyThreadA (); myThreadA . start (); getKey (); } public void getKey () { while ( true ) { Scanner scanner = new Scanner ( System . in ); String str = scanner . next (); char ch = str . toUpperCase (). charAt ( 0 ); if ( ch == 'Q' ) { myThreadA . setFlag ( false ); System . out . println ( \"======================= B Quit!\" ); break ; } } } } \u5341\u56db\u3001IO\u6d41 \u00b6 \uff08\u4e00\uff09\u6587\u4ef6 \u00b6 1 2 // \u83b7\u53d6\u5f53\u524d\u7c7b\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84 String path = < \u7c7b\u540d > . class . getResource ( \"/\" ). getPath (); 1. \u6587\u4ef6\u6d41 \u00b6 \u8f93\u5165\u6d41\uff1a \u4ece\u6570\u636e\u6e90\u5230\u7a0b\u5e8f \u8f93\u51fa\u6d41\uff1a \u4ece\u6210\u5e8f\u5230\u8f93\u5165\u6e90 2. \u6587\u4ef6\u64cd\u4f5c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // \u521b\u5efa\u6587\u4ef6 File file1 = new File ( \"e:/\u80cc\u666f/text.txt\" ); // \u521b\u5efaFile\u5bf9\u8c61 file1 . createNewFile (); // \u901a\u8fc7\u5bf9\u8c61\u521b\u5efa\u6587\u4ef6 File file2 = new File ( \"e:/\u80cc\u666f/\" , \"text.txt\" ); file2 . createNewFile (); File dir = new File ( \"e:/\u80cc\u666f/\" ); File file3 = new File ( dir , \"text.text\" ); file3 . createNewFile (); // \u64cd\u4f5c\u6587\u4ef6 file . getName (); // \u6587\u4ef6\u540d file . getAbsolutePath (); // \u6587\u4ef6\u7edd\u5bf9\u8def\u5f84 file . getParent (); // \u6587\u4ef6\u7236\u7ea7\u76ee\u5f55 file . length (); // \u6587\u4ef6\u5927\u5c0f\uff08\u5b57\u8282\uff09 file . exists (); // \u6587\u4ef6\u662f\u5426\u5b58\u5728s file . isFile (); // \u662f\u5426\u4e3a\u6587\u4ef6 file . delete (); // \u5220\u9664\u6587\u4ef6/\u76ee\u5f55\uff0c\u8fd4\u56de\u662f\u5426\u5220\u9664\u6210\u529f\uff08\u76ee\u5f55\u53ea\u80fd\u5220\u6700\u540e\u4e00\u7ea7\uff09 // \u64cd\u4f5c\u76ee\u5f55 file . isDirectory (); // \u662f\u5426\u4e3a\u76ee\u5f55 dir . mkdir (); // \u521b\u5efa\u5355\u7ea7\u76ee\u5f55 dir . mkdirs (); // \u521b\u5efa\u591a\u7ea7\u76ee\u5f55 \uff08\u4e8c\uff09IO\u6d41\u5206\u7c7b \u00b6 \uff08\u62bd\u8c61\u57fa\u7c7b\uff09 \u5b57\u8282\u6d41 \u5b57\u7b26\u6d41 \u8f93\u5165\u6d41 InputStream Reader \u8f93\u51fa\u6d41 OutputStream Writer \u5b57\u8282\u6d41 \u9002\u7528\u4e8e\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u80fd\u591f\u8fdb\u884c\u65e0\u635f\u4f20\u8f93\uff1b \u5b57\u7b26\u6d41 \u9002\u7528\u4e8e\u6587\u672c\u4f20\u8f93\uff0c\u6548\u7387\u9ad8\u3002 \uff08\u4f20\u8f93\u4e00\u4e2a\u5b57\u7b26\u76f8\u5f53\u4e8e\u591a\u5c11\u5b57\u8282\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6587\u4ef6\u7684\u7f16\u7801\u65b9\u5f0f\uff09 1. InputStream\u4e0eOutputStream \u00b6 \u62bd\u8c61\u7c7b\uff0c\u662f\u6240\u6709\u5b57\u8282\u8f93\u5165\u8f93\u51fa\u6d41\u7684\u8d85\u7c7b \u5e38\u7528\u5b50\u7c7b\uff1a FileInputStream / FileOutputSteam \uff1a\u6587\u4ef6\u8f93\u5165/\u8f93\u51fa\u6d41 BufferInputStream / BufferOutputSteam \uff1a\u7f13\u51b2\u5b57\u8282\u8f93\u5165/\u8f93\u51fa\u6d41 ObjectInputStream / ObjectOutputSteam \uff1a\u5bf9\u8c61\u5b57\u8282\u8f93\u5165/\u8f93\u51fa\u6d41 \uff081\uff09FileInputStream \u00b6 \u5355\u4e2a\u5b57\u8282\u8bfb\u53d6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 String file = \"e:/\u80cc\u666f/text.txt\" ; InputStream inputStream = null ; try { inputStream = new FileInputStream ( file ); int read = 0 ; // \u6309\u5b57\u8282\u8bfb\u53d6\uff0c\u8fd4\u56deint\u7c7b\u578b\u7684\u5b57\u8282\u7801\uff0c-1\u8868\u793a\u6587\u4ef6\u7ed3\u675f while (( read = inputStream . read ()) != - 1 ) { System . out . print (( char ) read ); // \u8f6c\u6210char\u663e\u793a } } catch ( Exception e ) { e . printStackTrace (); } finally { try { inputStream . close (); // \u5173\u95ed\u8f93\u5165\u6d41\uff0c\u9700\u8981try-catc\u5305\u88f9 } catch ( IOException e ) { throw new RuntimeException ( e ); } } \u4e00\u6b21\u6027\u8bfb\u53d6\u591a\u4e2a\u5b57\u8282\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 String path = \"e:/\u80cc\u666f/text.txt\" ; FileInputStream fileInputStream = null ; try { fileInputStream = new FileInputStream ( path ); byte [] buf = new byte [ 8 ] ; int len = 0 ; // \u4f20\u5165byte\u6570\u7ec4\uff0c\u8fd4\u56de\u8bfb\u53d6\u5230\u7684\u957f\u5ea6\uff0c\u8fd4\u56de-1\u8868\u793a\u6587\u4ef6\u7ed3\u675f while (( len = fileInputStream . read ( buf )) != - 1 ) { // \u4f7f\u7528byte\u6570\u7ec4\u8f6cString\uff0c\u6ce8\u610f\u8981\u4f20\u5165\u957f\u5ea6\uff0c\u6587\u4ef6\u672b\u7684\u5185\u5bb9\u53ef\u80fd\u4e0d\u8db38\u4e2a System . out . print ( new String ( buf , 0 , len )); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileInputStream . close (); // \u5173\u95ed\u6587\u4ef6\u8f93\u5165\u6d41 } catch ( IOException e ) { e . printStackTrace (); } } \uff082\uff09FileOutputStream \u00b6 \u5355\u4e2a\u5b57\u8282\u5199\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 String path = \"e:/\u80cc\u666f/output.txt\" ; FileOutputStream fileOutputStream = null ; try { // \u4ee5\u8986\u76d6\u7684\u65b9\u5f0f\u5199\u5165\u6587\u4ef6 fileOutputStream = new FileOutputStream ( path ); String words = \"Hello,FileOutputStream!\" ; for ( int i = 0 ; i < words . length (); i ++ ) { fileOutputStream . write ( words . charAt ( i )); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileOutputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } } \u591a\u4e2a\u5b57\u8282\u5199\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 String path = \"e:/\u80cc\u666f/output.txt\" ; FileOutputStream fileOutputStream = null ; try { // true\u8868\u793a\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u5199\u5165\u6587\u4ef6 fileOutputStream = new FileOutputStream ( path , true ); String words = \"Hello,FileOutputStream!\\n\" ; fileOutputStream . write ( words . getBytes ()); // String\u8f6c\u4e3a\u5b57\u8282\u7801\u5199\u5165 fileOutputStream . write ( words . getBytes (), 0 , 5 ); //\u5199\u5165\u524d5\u4e2a\u5b57\u8282 } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileOutputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } } \uff083\uff09\u6587\u4ef6\u590d\u5236 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 String srcPath = \"e:/\u80cc\u666f/text.txt\" ; String decPath = \"e:/\u80cc\u666f/text2.txt\" ; FileInputStream fileInputStream = null ; FileOutputStream fileOutputStream = null ; try { fileInputStream = new FileInputStream ( srcPath ); fileOutputStream = new FileOutputStream ( decPath ); byte [] buf = new byte [ 1024 ] ; int len = 0 ; while (( len = fileInputStream . read ( buf )) != - 1 ) { fileOutputStream . write ( buf , 0 , len ); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileInputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } try { fileOutputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } } 2. Reader\u4e0eWriter \u00b6 \u62bd\u8c61\u7c7b\uff0c\u662f\u6240\u6709\u5b57\u7b26\u8f93\u5165\u8f93\u51fa\u6d41\u7684\u8d85\u7c7b \u5e38\u7528\u5b50\u7c7b\uff1a FileReader / FileWriter \uff1a\u6587\u4ef6\u8f93\u5165/\u8f93\u51fa\u6d41 BufferReader / BufferWriter \uff1a\u7f13\u51b2\u5b57\u7b26\u8f93\u5165/\u8f93\u51fa\u6d41 StringReader / StringWriter \uff1a\u5b57\u7b26\u4e32\u8f93\u5165/\u8f93\u51fa\u6d41 \uff081\uff09FileReader \u00b6 \u5355\u4e2a\u5b57\u7b26\u8bfb\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 String path = \"e:/\u80cc\u666f/text.txt\" ; FileReader fileReader = null ; try { fileReader = new FileReader ( path ); int read = 0 ; while (( read = fileReader . read ()) != - 1 ) { System . out . print (( char ) read ); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileReader . close (); } catch ( IOException e ) { e . printStackTrace (); } } \u591a\u4e2a\u5b57\u7b26\u8bfb\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 String path = \"e:/\u80cc\u666f/text.txt\" ; FileReader fileReader = null ; try { fileReader = new FileReader ( path ); char [] ch = new char [ 8 ] ; // \u4f7f\u7528char\u6570\u7ec4\u63a5\u6536 int len = 0 ; while (( len = fileReader . read ( ch )) != - 1 ) { // \u6587\u4ef6\u672b\u5c3e\u4e0d\u4e00\u5b9a\u957f\u5ea6\u4e3a8\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u6309\u7167\u8bfb\u53d6\u7684\u957f\u5ea6len\u8f93\u51fa\u4e3aString System . out . print ( new String ( ch , 0 , len )); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileReader . close (); } catch ( IOException e ) { e . printStackTrace (); } } \uff082\uff09FileWriter \u00b6 \u5355\u4e2a\u5b57\u8282\u5199\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 String path = \"e:/\u80cc\u666f/output.txt\" ; FileWriter fileWriter = null ; try { fileWriter = new FileWriter ( path , true ); String str = \"\\nHello,FileWriter\" ; for ( int i = 0 ; i < str . length (); i ++ ) { fileWriter . write ( str . charAt ( i )); } } catch ( IOException e ) { e . printStackTrace (); } finally { try { fileWriter . close (); } catch ( IOException e ) { e . printStackTrace (); } } \u591a\u4e2a\u5b57\u8282\u5199\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 String path = \"e:/\u80cc\u666f/output.txt\" ; FileWriter fileWriter = null ; try { fileWriter = new FileWriter ( path , true ); String str = \"\\nHello,FileWriter\" ; fileWriter . write ( str ); fileWriter . write ( str , 0 , 6 ); } catch ( IOException e ) { e . printStackTrace (); } finally { try { fileWriter . close (); } catch ( IOException e ) { e . printStackTrace (); } } Writer\u7684write()\u5e95\u5c42\u662f\u7531OutputStream\u5b9e\u73b0\u7684\uff1a \uff083\uff09\u6587\u4ef6\u590d\u5236 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 String srcPath = \"e:/\u80cc\u666f/text.txt\" ; String decPath = \"e:/\u80cc\u666f/text2.txt\" ; FileWriter fileWriter = null ; FileReader fileReader = null ; try { fileReader = new FileReader ( srcPath ); fileWriter = new FileWriter ( decPath ); char [] ch = new char [ 1024 ] ; int len = 0 ; while (( len = fileReader . read ( ch )) != - 1 ) { fileWriter . write ( ch , 0 , len ); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileReader . close (); } catch ( IOException e ) { e . printStackTrace (); } try { fileWriter . close (); } catch ( IOException e ) { e . printStackTrace (); } } \uff08\u4e09\uff09\u8282\u70b9\u6d41\u548c\u5904\u7406\u6d41 \u00b6 \u8282\u70b9\u6d41\uff1a \u4ece\u7279\u5b9a\u6570\u636e\u6e90\u8bfb\u5199\u6570\u636e\uff0c\u662f\u5e95\u5c42\u6d41\uff1b \u5904\u7406\u6d41\uff08\u5305\u88c5\u6d41\uff09\uff1a \u901a\u8fc7\u88c5\u9970\u5668\u6a21\u5f0f\u5bf9\u8282\u70b9\u6d41\u8fdb\u884c\u4e86\u5305\u88c5\uff0c\u5e76\u5bf9\u5176\u529f\u80fd\u8fdb\u884c\u4e86\u6269\u5c55\uff1b\u5b83\u53ef\u4ee5\u6d88\u9664\u4e0d\u540c\u8282\u70b9\u6d41\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4e0d\u4f1a\u4e0e\u6570\u636e\u6e90\u76f4\u63a5\u76f8\u8fde\u3002 \u5305\u88c5\u6d41\u7684\u88c5\u9970\u5668\u6a21\u5f0f\uff1a BufferedReader \u7ee7\u627f\u81ea Reader \uff0c\u540c\u65f6\u5b83\u53c8\u5c01\u88c5\u4e86\u4e00\u4e2a Reader \u5bf9\u8c61\uff0c\u5bf9 Reader \u7684\u529f\u80fd\u8fdb\u884c\u4e86\u6269\u5c55\u3002 BufferedWriter \u3001 BufferedInputStream \u3001 BufferedOutputStream \u7684\u7ed3\u6784\u540c\u7406\u3002 1 2 3 4 5 6 7 8 9 public class BufferedReader extends Reader { private Reader in ; // ... } public class BufferedWriter extends Writer { private Writer out ; // ... } \u88c5\u9970\u5668\u6a21\u5f0f\u7684\u7c7b\u56fe\u548c\u4ee3\u7406\u6a21\u5f0f\u4e00\u6837\uff0c\u533a\u522b\u5728\u4e8e\u4ee3\u7406\u6a21\u5f0f\u662f\u8ba9\u522b\u7684\u7c7b\u4ee3\u4e3a\u6267\u884c\u81ea\u5df1\u7684\u529f\u80fd\uff0c\u800c\u88c5\u9970\u5668\u6a21\u5f0f\u662f\u5bf9\u539f\u6709\u529f\u80fd\u8fdb\u884c\u4e86\u6269\u5c55\u3002 1. BufferedReader\u4e0eBufferedWriter \u00b6 \uff081\uff09BufferedReader \u00b6 1 2 3 4 5 6 7 String path = \"e:/\u80cc\u666f/text.txt\" ; BufferedReader reader = new BufferedReader ( new FileReader ( path )); String line = \"\" ; while (( line = reader . readLine ()) != null ) { // \u6309\u884c\u8bfb\u53d6\u6548\u7387\u9ad8 System . out . println ( line ); } reader . close (); // \u5e95\u5c42\u5b9e\u73b0\u4e86\u5bf9Reader\u5bf9\u8c61\u7684close \uff082\uff09BufferedWriter \u00b6 1 2 3 4 5 6 7 8 String path = \"e:/\u80cc\u666f/output.txt\" ; BufferedWriter writer = new BufferedWriter ( new FileWriter ( path , true )); String str = \"Hello, BufferedWriter!\" ; writer . write ( str ); writer . newLine (); // \u6362\u884c writer . write ( str , 0 , 6 ); writer . flush (); writer . close (); \uff083\uff09\u6587\u4ef6\u590d\u5236 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 String srcPath = \"e:/\u80cc\u666f/text.txt\" ; String decPath = \"e:/\u80cc\u666f/text2.txt\" ; BufferedReader reader = new BufferedReader ( new FileReader ( srcPath )); BufferedWriter writer = new BufferedWriter ( new FileWriter ( decPath )); String line = \"\" ; while (( line = reader . readLine ()) != null ) { writer . write ( line ); writer . newLine (); } reader . close (); writer . close (); 2. ObjectInputStream\u4e0eObjectOutputStream \u00b6 \u7528\u4e8e\u5c06\u5bf9\u8c61\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u5305\u62ec\u5bf9\u8c61\u7684\u6570\u636e\u4e0e\u7c7b\u578b\u3002 \u5e8f\u5217\u5316\uff1a \u4fdd\u5b58\u6570\u636e\u7684\u503c\u548c\u7c7b\u578b\uff0c\u53ef\u7528\u63a5\u53e3\uff1a Serializable \u548c Externalization \u3002 \u53cd\u5e8f\u5217\u5316\uff1a \u6062\u590d\u6570\u636e\u7684\u503c\u548c\u7c7b\u578b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 // \u5b9e\u73b0\u4e86Serializable\u7684\u7c7b public class Person implements Serializable { private String name = \"Kun\" ; private int age = 15 ; private String job = \"\u706f\u53f0\u5fa1\u53f2\" ; // \u7c7b\u4e2d\u7684\u5bf9\u8c61\u4e5f\u5fc5\u987b\u88ab\u5e8f\u5217\u5316 public static String nation ; // static\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316 private transient String color ; // transient\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316 // \u5e8f\u5217\u5316\u7248\u672c\u53f7\uff0c\u4fee\u6539\u7c7b\u7684\u5185\u5bb9\u540e\u4e0d\u4f1a\u8ba4\u4e3a\u662f\u4e00\u4e2a\u65b0\u7c7b\uff0c\u800c\u662f\u539f\u6765\u7c7b\u7684\u5347\u7ea7\u7248 private static final long serialVersionUID = 1L ; public Person ( String name , int age , String job , String color ) { this . name = name ; this . age = age ; this . job = job ; this . color = color ; } public String getName () { return name ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", job='\" + job + '\\'' + \", nation'\" + nation + '\\'' + \", color='\" + color + '\\'' + '}' ; } } \uff081\uff09ObjectInputStream \u00b6 1 2 3 4 5 6 7 String path = \"e:/\u80cc\u666f/object.txt\" ; ObjectOutputStream output = new ObjectOutputStream ( new FileOutputStream ( path )); output . writeUTF ( \"\u4fe1\u606f\uff1a\" ); Person . nation = \"\u97e9\u56fd\" ; output . writeObject ( new Person ( \"\u6606\" , 15 , \"\u706f\u53f0\u5fa1\u53f2\" , \"blue\" )); output . flush (); output . close (); \uff082\uff09ObjectInputStream \u00b6 1 2 3 4 5 6 7 8 9 10 String path = \"e:/\u80cc\u666f/object.txt\" ; ObjectInputStream input = new ObjectInputStream ( new FileInputStream ( path )); String msg = input . readUTF (); Object person = input . readObject (); System . out . println ( person ); input . close (); /* \u8f93\u51fa\uff1a Person{name='\u6606', age=15, job='\u706f\u53f0\u5fa1\u53f2', nation'null', color='null'} */ \u6ce8\u610f\uff0c \u53cd\u5e8f\u5217\u5316\u7684\u987a\u5e8f \u4e00\u5b9a\u8981\u548c \u5e8f\u5217\u5316\u7684\u987a\u5e8f \u4fdd\u6301\u4e00\u81f4\u3002 \uff083\uff09\u7ec6\u8282\u8bf4\u660e \u00b6 \u8bfb\u5199\u987a\u5e8f\u8981\u4e00\u81f4\uff1b \u88ab\u5e8f\u5217\u5316\u6216\u53cd\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u8981\u5b9e\u73b0 Serializable \u63a5\u53e3\uff1b \u5e8f\u5217\u5316\u7c7b\u4e2d\u6dfb\u52a0 SerialVersionUUID \u80fd\u63d0\u9ad8\u7248\u672c\u517c\u5bb9\u6027\uff1b static \u548c transient \u6210\u5458\u662f\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316\u7684\uff1b \u5e8f\u5217\u5316\u7c7b\u4e2d\u7684\u5c5e\u6027\u90fd\u8981\u5b9e\u73b0\u5e8f\u5217\u5316\u63a5\u53e3\uff1b \u5e8f\u5217\u5316\u6709\u53ef\u7ee7\u627f\u6027\u3002 3. \u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41Input\u4e0eOutput \u00b6 | \u7f16\u8bd1\u7c7b\u578b | \u8fd0\u884c\u7c7b\u578b | \u4ee3\u8868 ---|---|---|--- System.in | InputStream \u7c7b\u578b| BufferedInputStream \u7c7b\u578b|\u952e\u76d8\u8f93\u5165 System.out | PrintStream \u7c7b\u578b| PrintStream \u7c7b\u578b|\u663e\u793a\u5668\u8f93\u51fa 4. \u8f6c\u6362\u6d41InputStreamReader\u4e0eOutputStreamWriter \u00b6 InputStreamReader\uff1a Reader \u7684\u5b50\u7c7b\uff0c\u53ef\u4ee5\u5c06 InputStream \u5305\u88c5\u6210 Reader \uff0c\u5373\u5b57\u8282\u6d41\u8f6c\u5b57\u7b26\u6d41\u3002 OutputStreamWriter\uff1a Writer \u7684\u5b50\u7c7b\uff0c\u53ef\u4ee5\u5c06 OutputStream \u5305\u88c5\u6210 Writer \uff0c\u5373\u5b57\u8282\u6d41\u8f6c\u5b57\u7b26\u6d41\u3002 \u5b83\u4eec\u5747\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u683c\u5f0f\uff08\u5982\uff1a utf-8 \u3001 gbk \u3001 gb2312 \u3001 ISO8895-1 \uff09\uff0c\u9002\u7528\u4e8e\u5904\u7406\u4e0d\u540c\u7f16\u7801\u7684\u7eaf\u6587\u672c\u6570\u636e\u3002 \uff081\uff09InputStreamReader \u00b6 1 2 3 4 5 6 7 8 String path = \"e:/\u80cc\u666f/test_utf_8.txt\" ; InputStreamReader isReader = new InputStreamReader ( new FileInputStream ( path ), \"utf-8\" ); BufferedReader reader = new BufferedReader ( isReader ); String line = \"\" ; while (( line = reader . readLine ()) != null ) { System . out . println ( line ); } reader . close (); \uff082\uff09OutputStreamWriter \u00b6 1 2 3 4 5 6 7 String path = \"e:/\u80cc\u666f/test_utf_8.txt\" ; OutputStreamWriter osWriter = new OutputStreamWriter ( new FileOutputStream ( path ), \"utf-8\" ); BufferedWriter writer = new BufferedWriter ( osWriter ); String msg = \"Hello, \u8f6c\u6362\u6d41!\" ; writer . write ( msg ); // writer.flush(); writer . close (); 5. \u6253\u5370\u6d41PrintStream\u4e0ePrintWriter \u00b6 \u6253\u5370\u6d41\u53ea\u6709\u8f93\u51fa\u6d41\uff0c\u6ca1\u6709\u8f93\u5165\u6d41\u3002 \uff081\uff09PrintStream \u00b6 1 2 3 4 PrintStream out = System . out ; out . print ( \"Hello\uff0cworld!\" ); out . write ( \"\u545c\u545c\" . getBytes ()); // print\u7684\u5e95\u5c42\u662fwrite\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528write out . close (); \u8bbe\u7f6e\u8f93\u51fa\u4f4d\u7f6e\uff1a 1 2 System . setOut ( new PrintStream ( \"e:/\u80cc\u666f/out.txt\" )); System . out . println ( \"Hello,PrintStream!\" ); \uff082\uff09PrintWriter \u00b6 1 2 3 PrintWriter printWriter = new PrintWriter ( System . out ); printWriter . write ( \"Hello,PrintWriter!\" ); printWriter . close (); \u6539\u53d8\u8f93\u51fa\u4f4d\u7f6e\uff1a 1 2 3 PrintWriter printWriter = new PrintWriter ( new FileWriter ( \"e:/\u80cc\u666f/out.txt\" )); printWriter . write ( \"Hello,PrintWriter!\" ); printWriter . close (); 6. Properties \u00b6 1 2 3 4 5 6 7 BufferedReader reader = new BufferedReader ( new FileReader ( \"e:/\u80cc\u666f/mysql.properties\" )); String line = \"\" ; while (( line = reader . readLine ()) != null ) { String [] split = line . split ( \"=\" ); // \u6309=\u5212\u5206 System . out . println ( split [ 0 ] + \"\u7684\u503c\u662f\uff1a\" + split [ 1 ] ); } reader . close (); \u5176\u4ed6\u5e38\u7528\u65b9\u6cd5\uff1a 1 2 3 4 5 load list getProperty setProperty store \u4f8b\u4e00\uff1a \u8bfb\u53d6 properties 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Properties properties = new Properties (); properties . load ( new FileReader ( \"e:/\u80cc\u666f/mysql.properties\" )); properties . list ( System . out ); System . out . println ( \"======================\" ); System . out . println ( \"\u59d3\u540d\uff1a\" + properties . getProperty ( \"name\" )); System . out . println ( \"\u5e74\u9f84\uff1a\" + properties . getProperty ( \"age\" )); /* \u8f93\u51fa\uff1a -- listing properties -- nation=Korea name=kun job=\u706f\u53f0\u4f7f age=15 ====================== \u59d3\u540d\uff1akun \u5e74\u9f84\uff1a15 */ \u4f8b\u4e8c\uff1a \u4fee\u6539/\u6dfb\u52a0\u65b0\u952e\u503c\u5bf9 1 2 3 4 5 6 7 8 Properties properties = new Properties (); // key\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u65b0\u5c5e\u6027\uff0c\u5426\u5219\u4fee\u6539 properties . setProperty ( \"name\" , \"\u98d2\u5f25\u4e9a\u00b7\u4f0a\u6c90\u6d1b\u00b7\u5df4\u745f\u5170\" ); properties . setProperty ( \"age\" , \"17\" ); properties . setProperty ( \"\u888d\u7ea7\" , \"\u9ed1\u888d\" ); properties . store ( new FileOutputStream ( \"e:/\u80cc\u666f/mysql2.properties\" ), \"comment messages\" ); \uff08\u56db\uff09\u4e60\u9898 \u00b6 1. \u4f8b\u4e00 \u00b6 \u521b\u5efa\u76ee\u5f55 mytemp \u76ee\u5f55 mytemp \u4e0b\u521b\u5efa\u6587\u4ef6 hello.txt \u6587\u4ef6 hello.txt \u4e2d\u5199\u5165 Hello,world! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 String path = \"e:/\u80cc\u666f/mytemp/\" ; File dir = new File ( path ); if ( dir . exists ()) { System . out . println ( \"mytemp\u6587\u4ef6\u5939\u5df2\u5b58\u5728\" ); } else { if ( dir . mkdir ()) { System . out . println ( \"\u76ee\u5f55\u521b\u5efa\u6210\u529f\" ); } else { throw new RuntimeException ( \"\u76ee\u5f55\u521b\u5efa\u5931\u8d25\" ); } } String filePath = path + \"hello.txt\" ; File file = new File ( filePath ); if ( file . exists ()) { System . out . println ( \"\u6587\u4ef6\u5df2\u5b58\u5728\" ); } else { if ( file . createNewFile ()) { System . out . println ( \"\u6587\u4ef6\u521b\u5efa\u6210\u529f\" ); } else { throw new RuntimeException ( \"\u6587\u4ef6\u521b\u5efa\u5931\u8d25\" ); } } FileWriter fileWriter = new FileWriter ( filePath ); String str = \"Hello,world!\" ; fileWriter . write ( str ); fileWriter . close (); 2. \u4f8b\u4e8c \u00b6 \u8bfb\u53d6\u6587\u4ef6\uff0c\u5e76\u5728\u6bcf\u4e00\u884c\u524d\u52a0\u4e0a\u7f16\u53f7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public class Index { public static void main ( String [] args ) throws Exception { String path = \"e:/\u80cc\u666f/test.txt\" ; String srcPath = \"e:/\u80cc\u666f/test2.txt\" ; BufferedReader reader = new BufferedReader ( new FileReader ( path )); BufferedWriter writer = new BufferedWriter ( new FileWriter ( srcPath )); String line = \"\" ; int i = 1 ; while (( line = reader . readLine ()) != null ) { System . out . println ( i + \" \" + line ); writer . write ( i + \" \" + line ); writer . newLine (); ++ i ; } reader . close (); writer . close (); } } 3. \u4f8b\u4e09 \u00b6 dog.properties \u4e2d\u521b\u5efa\u540d\u5b57\u3001\u5e74\u9f84\u3001\u989c\u8272\u4e09\u4e2a\u5c5e\u6027 \u4f7f\u7528 Properties \u8bfb\u53d6\uff0c\u5e76\u6253\u5370\uff1b \u5c06\u8bfb\u53d6\u5230\u7684\u5185\u5bb9\u4fdd\u5b58\u5230 Dog \u5bf9\u8c61\u4e2d\uff0c\u5e76\u5e8f\u5217\u5316\u4fdd\u5b58\uff1b \u53cd\u5e8f\u5217\u5316\u8f93\u51fa\u4fdd\u5b58\u7684\u5185\u5bb9\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 public class Index { public static void main ( String [] args ) throws Exception { String scrPath = \"e:/\u80cc\u666f/dog.properties\" ; Properties properties = new Properties (); properties . load ( new FileReader ( scrPath )); String name = properties . getProperty ( \"name\" ); int age = Integer . parseInt ( properties . getProperty ( \"age\" )); String color = properties . getProperty ( \"color\" ); Dog dog = new Dog ( name , age , color ); System . out . println ( dog ); // \u5e8f\u5217\u5316\u4fdd\u5b58 String decPath = \"e:/\u80cc\u666f/dog.dat\" ; ObjectOutputStream ooStream = new ObjectOutputStream ( new FileOutputStream ( decPath )); ooStream . writeObject ( dog ); ooStream . close (); // \u53cd\u5e8f\u5217\u5316\u8f93\u51fa ObjectInputStream oiStream = new ObjectInputStream ( new FileInputStream ( decPath )); Object dog2 = oiStream . readObject (); System . out . println ( dog2 ); oiStream . close (); } } class Dog implements Serializable { private String name ; private int age ; private String color ; public Dog ( String name , int age , String color ) { this . name = name ; this . age = age ; this . color = color ; } @Override public String toString () { return \"Dog{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", color='\" + color + '\\'' + '}' ; } }","title":"Java\u8fdb\u9636"},{"location":"Java%E8%BF%9B%E9%98%B6/#_1","text":"javac \u7f16\u8bd1\u5de5\u5177 javap \u53cd\u7f16\u8bd1\u5de5\u5177(\u4ece class \u6587\u4ef6\u5f97\u5230 java \u6587\u4ef6)\uff1a","title":"\u4e00\u3001\u5de5\u5177"},{"location":"Java%E8%BF%9B%E9%98%B6/#_2","text":"\u5f53\u7236\u7c7b\u65b9\u6cd5\u4e0d\u786e\u5b9a\u5177\u4f53\u5b9e\u73b0\u5185\u5bb9\u65f6\uff0c\u53ef\u4ee5\u5b9a\u4e49\u5176\u4e3a\u62bd\u8c61\u65b9\u6cd5\u3002 1 2 3 public abstract class Animal { public abstract void eat (); } \u6ce8\u610f\uff1a \u5305\u542b\u62bd\u8c61\u65b9\u6cd5\u7684\u7c7b\uff0c\u5fc5\u987b\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff1b \u62bd\u8c61\u65b9\u6cd5\u6ca1\u6709\u65b9\u6cd5\u4f53\uff1b \u62bd\u8c61\u7c7b\u53ef\u4ee5\u6ca1\u6709\u62bd\u8c61\u65b9\u6cd5\uff1b abstract \u53ea\u80fd\u4fee\u9970\u7c7b\u548c\u65b9\u6cd5\uff1b \u7ee7\u627f\u4e86\u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\uff0c\u5fc5\u987b\u5b9e\u73b0\u5176\u7236\u7c7b\u7684\u6240\u6709\u62bd\u8c61\u65b9\u6cd5\uff0c\u9664\u975e\u5b83\u81ea\u5df1\u4e5f\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff1b \u62bd\u8c61\u65b9\u6cd5\u4e0d\u80fd\u4f7f\u7528 private \u3001 final \u3001 static \uff0c\u56e0\u4e3a\u52a0\u4e86\u8fd9\u4e09\u4e2a\u5173\u952e\u5b57\u7684\u65b9\u6cd5\u65e0\u6cd5\u88ab\u91cd\u5199\u3002 \u5e94\u7528\uff1a\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f","title":"\u4e8c\u3001\u62bd\u8c61"},{"location":"Java%E8%BF%9B%E9%98%B6/#_3","text":"","title":"\u4e09\u3001\u63a5\u53e3"},{"location":"Java%E8%BF%9B%E9%98%B6/#_4","text":"\u5b9e\u73b0\u63a5\u53e3\u662f\u5bf9 java \u5355\u7ee7\u627f\u673a\u5236\u7684\u8865\u5145\uff0c\u7ee7\u627f\u662f\u6ee1\u8db3 is-a \u7684\u5173\u7cfb\uff0c\u5b9e\u73b0\u63a5\u53e3\u662f\u6ee1\u8db3 like-a \u7684\u5173\u7cfb\u3002 Jdk7 \u4e4b\u524d\uff0c\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u6ca1\u6709\u65b9\u6cd5\u4f53\uff1b Jdk8 \u4e4b\u540e\uff0c\u63a5\u53e3\u4e2d\u53ef\u4ee5\u6709\u9759\u6001\u65b9\u6cd5\u3001\u9ed8\u8ba4\u65b9\u6cd5\uff08 default \u4fee\u9970\uff09\uff1b \u63a5\u53e3\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u53ef\u4ee5\u4e0d\u52a0 abstract \u5173\u952e\u5b57\uff1b \u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff1b \u63a5\u53e3\u4e0d\u80fd\u7ee7\u627f\u7c7b\uff0c\u53ea\u80fd \u7ee7\u627f \u5176\u4ed6\u63a5\u53e3\uff0c\u6ce8\u610f\u662f extends \u5173\u952e\u5b57\uff1b 1 2 3 interface A {} interface B {} interface C extends A , B {} \u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u662f public \u7684\uff1b \u63a5\u53e3\u672c\u8eab\u53ea\u80fd\u662f public \u6216\u9ed8\u8ba4\u7684\uff1b \u63a5\u53e3\u4e2d\u7684\u5c5e\u6027\u5b9e\u9645\u4e0a\u9690\u85cf\u4e86 static final \u4fee\u9970\u7b26\uff0c\u56e0\u6b64\u5fc5\u987b\u521d\u59cb\u5316\uff1b 1 2 3 interface A { int n = 10 ; // \u7b49\u4ef7\u4e8epublic static final n = 10; } \u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u62bd\u8c61\u7c7b\uff0c\u53ef\u4ee5\u4e0d\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\uff1b \u63a5\u53e3\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5b9e\u73b0\u4ee3\u7801\u7684\u63a5\u53e3 \u3002","title":"\uff08\u4e00\uff09\u57fa\u672c\u6982\u5ff5"},{"location":"Java%E8%BF%9B%E9%98%B6/#_5","text":"","title":"\uff08\u4e8c\uff09\u63a5\u53e3\u7684\u591a\u6001\u7279\u6027"},{"location":"Java%E8%BF%9B%E9%98%B6/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 interface Usb { public void start (); public void end (); } class Camera implements Usb { @Override public void start (){ System . out . println ( \"\u76f8\u673a\u5f00\u59cb\u5de5\u4f5c\" ); } @Override public void stop (){ System . out . println ( \"\u76f8\u673a\u505c\u6b62\u5de5\u4f5c\" ); } } class Phone implements Usb { @Override public void start (){ System . out . println ( \"\u624b\u673a\u5f00\u59cb\u5de5\u4f5c\" ); } @Override public void stop (){ System . out . println ( \"\u624b\u673a\u505c\u6b62\u5de5\u4f5c\" ); } } class Computer { public void work ( Usb usb ) { // \u4f20\u5165\u63a5\u53e3 usb . start (); usb . stop (); } }","title":"1. \u591a\u6001\u53c2\u6570"},{"location":"Java%E8%BF%9B%E9%98%B6/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 interface Usb {} class Camera implements Usb {} class Phone implements Usb { public void call (){ System . out . println ( \"\u6253\u7535\u8bdd...\" ) } } public class Index { public static void main ( String [] args ) { Usb [] usbs = new Usb [ 2 ] ; usbs [ 0 ] = new Phone (); usbs [ 1 ] = new Camera (); for ( Usb i : usbs ){ if ( i instanceof Phone ){ (( Phone ) i ). call (); // \u5411\u4e0b\u8f6c\u578b } } } }","title":"2. \u591a\u6001\u6570\u7ec4"},{"location":"Java%E8%BF%9B%E9%98%B6/#3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 interface IA { void hi (); } interface IB extends IA { } class C implements IB { @Override public void hi () { } } public class Index { public static void main ( String [] args ) { IA a = new C (); a . hi (); } }","title":"3. \u63a5\u53e3\u7684\u591a\u6001\u4f20\u9012\u73b0\u8c61"},{"location":"Java%E8%BF%9B%E9%98%B6/#_6","text":"\u7ee7\u627f\u4e0e\u63a5\u53e3\u540c\u65f6\u4f7f\u7528\u65f6\uff0c\u76f8\u540c\u7684\u5c5e\u6027\u5fc5\u987b\u660e\u786e\u5176\u542b\u4e49 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 interface A { int x = 10 ; } class B { int x = 20 ; } class C extends B implements A { public void printX (){ // System.out.println(x); // x is ambiguous System . out . println ( A . x ); System . out . println ( super . x ); } }","title":"\uff08\u4e09\uff09\u7ee7\u627f\u4e0e\u63a5\u53e3"},{"location":"Java%E8%BF%9B%E9%98%B6/#_7","text":"\u7c7b\u7684\u4e94\u5927\u6210\u5458\uff1a\u5c5e\u6027\u3001\u65b9\u6cd5\u3001\u6784\u9020\u5668\u3001\u521d\u59cb\u5316\u5757\u3001\u5185\u90e8\u7c7b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class OuterOther { // \u5916\u90e8\u5176\u4ed6\u7c7b } class Outer { // \u5916\u90e8\u7c7b int n = 10 ; // \u5c5e\u6027 Outer () { // \u6784\u9020\u5668 } { // \u521d\u59cb\u5316\u5757 } int getN (){ // \u65b9\u6cd5 return n ; } class Inner { // \u5185\u90e8\u7c7b } }","title":"\u56db\u3001\u5185\u90e8\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class OuterOther { // 5. \u65e0\u6cd5\u8bbf\u95eeInner } class Outer { private int n = 10 ; private void m1 () {} public void m2 () { final class Inner { // 3. \u4f5c\u7528\u57df\u4ec5\u5728m2()\u4e2d int n = 20 ; // 6. \u53d8\u91cfn\u91cd\u540d public void f1 (){ // 1. \u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458 m1 (); System . out . println ( n ); // 6. \u5c31\u8fd1\u539f\u5219\uff0c\u8f93\u51fa20 System . out . println ( this . n ); // \u5185\u90e8\u7c7b\u7684n System . out . println ( Outer . this . n ); // 6. \u5916\u90e8\u7c7b\u7684n\uff0cthis\u4e3a\u8c03\u7528m2()\u7684\u5bf9\u8c61 } } } { class Inner { // \u4f5c\u7528\u57df\u4ec5\u5728\u521d\u59cb\u5316\u5757\u4e2d public void f1 (){ m1 (); } } } Inner inner = new Inner (); // 4. \u5916\u90e8\u7c7b\u901a\u8fc7\u521b\u5efa\u5b9e\u4f8b\u8bbf\u95ee } \u80fd\u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u5c5e\u6027\uff1b \u4e0d\u80fd\u6dfb\u52a0\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c final \u3001 abstract \u7b49\u53ef\u4ee5\u6dfb\u52a0\uff1b \u4f5c\u7528\u57df\u4ec5\u5728\u65b9\u6cd5/\u4ee3\u7801\u5757\u4e2d\uff1b \u5916\u90e8\u7c7b\u901a\u8fc7\u521b\u5efa\u5185\u90e8\u7c7b\u7684\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\uff1b \u5916\u90e8\u5176\u5b83\u7c7b\uff0c\u4e0d\u80fd\u8bbf\u95ee\u5c40\u90e8\u5185\u90e8\u7c7b\uff08\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff09\uff1b \u5916\u90e8\u7c7b\u548c\u5c40\u90e8\u5185\u90e8\u7c7b\u7684\u6210\u5458\u91cd\u540d\u65f6\uff0c\u9075\u5faa\u5c31\u8fd1\u539f\u5219\uff0c\u82e5\u60f3\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u7c7b\u540d.this.\u6210\u5458 \u53bb\u8bbf\u95ee\uff1b","title":"\uff08\u4e00\uff09\u5c40\u90e8\u5185\u90e8\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 class Outer { private int n = 10 ; public void method () { // \u7f16\u8bd1\u7c7b\u578b\uff1aIA // \u8fd0\u884c\u7c7b\u578b\uff1a\u533f\u540d\u5185\u90e8\u7c7b\uff08\u5e95\u5c42\u4f1a\u5206\u914d\u4e00\u4e2a\u7c7b\u540dOuter$1\uff09 IA tiger = new IA () { @Override public void cry () { System . out . println ( \"\u864e\u5578...\" ); } }; tiger . cry (); // \u7f16\u8bd1\u7c7b\u578b\uff1aFather // \u8fd0\u884c\u7c7b\u578b\uff1a\u533f\u540d\u5185\u90e8\u7c7b\uff08\u5e95\u5c42\u4f1a\u5206\u914d\u4e00\u4e2a\u7c7b\u540dOuter$2\uff09 Father father = new Father ( \"Jack\" ){ @Override public void test (){ System . out . println ( \"\u533f\u540d\u5185\u90e8\u7c7b\u91cd\u5199test()\" ); } } father . test (); } } interface IA { public void cry (); } class Father { Father ( String name ){ } public void test (){ } } \u80fd\u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u7684\uff1b \u4e0d\u80fd\u6dfb\u52a0\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c final \u53ef\u4ee5\u6dfb\u52a0\uff1b \u4f5c\u7528\u57df\u4ec5\u5728\u65b9\u6cd5/\u4ee3\u7801\u5757\u4e2d\uff1b \u672c\u8d28\u662f\u7c7b\uff0c\u540c\u65f6\u8fd8\u662f\u4e00\u4e2a\u5bf9\u8c61\uff1b 1 2 3 4 5 6 7 // \u63a5\u4e0a\u4f8b\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u65b9\u6cd5 new Father ( \"Jack\" ){ @Override public void test (){ System . out . println ( \"\u533f\u540d\u5185\u90e8\u7c7b\u91cd\u5199test()\" ); } }. test (); jdk \u5e95\u5c42\u4f1a\u7ed9\u533f\u540d\u5185\u90e8\u7c7b\u5206\u914d\u540d\u5b57\uff1a\u5916\u90e8\u7c7b\u540d$\u7f16\u53f7\uff1b \u533f\u540d\u5185\u90e8\u7c7b\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\uff08\u6ce8\u610f\uff0c\u4e0d\u662f\u8bf4\u533f\u540d\u5185\u90e8\u7c7b\u7684\u5bf9\u8c61\uff09\uff1b \u5916\u90e8\u5176\u5b83\u7c7b\uff0c\u4e0d\u80fd\u8bbf\u95ee\u533f\u540d\u5185\u90e8\u7c7b\uff08\u56e0\u4e3a\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff09\uff1b \u5916\u90e8\u7c7b\u548c\u533f\u540d\u5185\u90e8\u7c7b\u7684\u6210\u5458\u91cd\u540d\u65f6\uff0c\u9075\u5faa\u5c31\u8fd1\u539f\u5219\uff0c\u82e5\u60f3\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u7c7b\u540d.this.\u6210\u5458 \u53bb\u8bbf\u95ee\uff1b \u4e0d\u80fd\u91cd\u5199\u6784\u9020\u5668\u3002","title":"\uff08\u4e8c\uff09\u533f\u540d\u5185\u90e8\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_10","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Outer { private int n = 10 ; private class Inner { void fun (){ System . out . println ( n ); } }; public void printInnerFun (){ Inner inner = new Inner (); inner . fun (); } } \u80fd\u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u7684\uff1b \u672c\u8d28\u662f\u7c7b\uff0c\u540c\u65f6\u4e5f\u662f\u5c5e\u6027\uff1b\u56e0\u6b64\uff0c \u53ef\u4ee5\u52a0\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\u4f53 \uff1b \u5916\u90e8\u7c7b\u8bbf\u95ee\u6210\u5458\u5185\u90e8\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u8c61\uff1b \u5916\u90e8\u5176\u4ed6\u7c7b\u8bbf\u95ee\u6210\u5458\u5185\u90e8\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // 1. \u901a\u8fc7\u5916\u90e8\u7c7b\u521b\u5efa\u5bf9\u8c61 Outer outer = new Outer (); Outer . Inner inner = outer . new Inner (); // 2. \u5728\u5916\u90e8\u7c7b\u4e2d\u7f16\u5199\u65b9\u6cd5\uff0c\u8fd4\u56de\u5185\u90e8\u7c7b\u5bf9\u8c61 class Outer { // ... public Inner getInner (){ return new Inner (); } // ... } \u5916\u90e8\u7c7b\u548c\u6210\u5458\u5185\u90e8\u7c7b\u7684\u6210\u5458\u91cd\u540d\u65f6\uff0c\u9075\u5faa\u5c31\u8fd1\u539f\u5219\uff0c\u82e5\u60f3\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u7c7b\u540d.this.\u6210\u5458 \u53bb\u8bbf\u95ee\u3002","title":"\uff08\u4e09\uff09\u6210\u5458\u5185\u90e8\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_11","text":"\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6240\u6709\u9759\u6001\u6210\u5458\uff0c\u5305\u62ec\u79c1\u6709\u7684\uff1b \u672c\u8d28\u662f\u7c7b\uff0c\u540c\u65f6\u4e5f\u662f\u9759\u6001\u5c5e\u6027\uff1b\u56e0\u6b64\uff0c \u53ef\u4ee5\u52a0\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7c7b\u4f53 \uff1b \u5916\u90e8\u7c7b\u8bbf\u95ee\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5bf9\u8c61\uff1b \u5916\u90e8\u5176\u4ed6\u7c7b\u8bbf\u95ee\u9759\u6001\u5185\u90e8\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 1. \u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8bbf\u95ee Outer . Inner inner = new Outer . Inner (); // 2. \u5728\u5916\u90e8\u7c7b\u4e2d\u7f16\u5199\u65b9\u6cd5\uff0c\u8fd4\u56de\u5185\u90e8\u7c7b\u5bf9\u8c61 class Outer { // ... public Inner getInner (){ return new Inner (); } public static Inner getInner_ (){ return new Inner (); } // ... } \u5916\u90e8\u7c7b\u548c\u6210\u5458\u5185\u90e8\u7c7b\u7684\u6210\u5458\u91cd\u540d\u65f6\uff0c\u9075\u5faa\u5c31\u8fd1\u539f\u5219\uff0c\u82e5\u60f3\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458\uff0c\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u7c7b\u540d.\u6210\u5458 \u53bb\u8bbf\u95ee\u3002","title":"\uff08\u56db\uff09\u9759\u6001\u5185\u90e8\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_12","text":"\u4e00\u7ec4\u6709\u9650\u5e38\u91cf\u7684\u96c6\u5408 \u4e0d\u80fd\u4fee\u6539","title":"\u4e94\u3001\u679a\u4e3e"},{"location":"Java%E8%BF%9B%E9%98%B6/#_13","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 class Season { private String name ; private String detail ; // \u56fa\u5b9a\u51e0\u4e2apublic static\u5bf9\u8c61 // \u52a0\u5165final\u4fee\u9970\u7b26\u4f18\u5316 public static final Season SPRING = new Season ( \"\u6625\u5929\" , \"\u82b1\" ); public static final Season SUMMER = new Season ( \"\u590f\u5929\" , \"\u897f\u74dc\" ); public static final Season AUTUMN = new Season ( \"\u79cb\u5929\" , \"\u67ab\u53f6\" ); public static final Season WINTER = new Season ( \"\u51ac\u5929\" , \"\u96ea\" ); // \u79c1\u6709\u5316\u6784\u9020\u5668\uff0c\u907f\u514d\u591a\u4f59\u7684\u5bf9\u8c61\u4ea7\u751f private Season ( String name , String detail ){ this . name = name ; this . detail = detail ; } // \u53bb\u9664set\u65b9\u6cd5\uff0c\u907f\u514d\u4fee\u6539\u5c5e\u6027 public String getName () { return name ; } public String getDetail () { return detail ; } }","title":"\uff08\u4e00\uff09\u81ea\u5b9a\u4e49\u679a\u4e3e"},{"location":"Java%E8%BF%9B%E9%98%B6/#enum","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 enum Season { // \u5fc5\u987b\u5199\u5728\u6700\u524d\u9762\uff0c\u4e14\u5fc5\u987b\u7528\u9017\u53f7\u9694\u5f00 SPRING ( \"\u6625\u5929\" , \"\u6e29\u6696\" ), SUMMER ( \"\u590f\u5929\" , \"\u897f\u74dc\" ), AUTUMN ( \"\u79cb\u5929\" , \"\u51c9\u723d\" ), WINTER ( \"\u51ac\u5929\" , \"\u96ea\" ); private String name ; private String detail ; // \u79c1\u6709\u5316\u6784\u9020\u5668\uff0c\u907f\u514d\u591a\u4f59\u7684\u5bf9\u8c61\u4ea7\u751f private Season ( String name , String detail ){ this . name = name ; this . detail = detail ; } // \u53bb\u9664set\u65b9\u6cd5\uff0c\u907f\u514d\u4fee\u6539\u5c5e\u6027 public String getName () { return name ; } public String getDetail () { return detail ; } } \u5982\u679c\u662f\u65e0\u53c2\u6784\u9020\u53ef\u4ee5\u7b80\u5199\u4e3a\uff1a 1 2 3 4 // \u65e0\u53c2\u6784\u9020\u7684\u56db\u4e2aSeason\u5bf9\u8c61 enum Season { SPRING , SUMMER , AUTUMN , WINTER ; } \u4f8b\u9898\uff1a 1 2 3 4 5 6 enum Gender { BOY , GIRL ; } // enum \u7c7b\u7684 toString() \u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u679a\u4e3e\u9879\u7684 name System . out . println ( Gender . BOY ); // \u8f93\u51faBOY","title":"\uff08\u4e8c\uff09enum\u5173\u952e\u5b57\u5b9e\u73b0"},{"location":"Java%E8%BF%9B%E9%98%B6/#_14","text":"1 2 3 4 5 6 7 8 Season autumn = Season . AUTUMN ; Season summer = Season . SUMMER ; System . out . println ( autumn . ordinal ()); // \u8f93\u51fa2\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb System . out . println ( autumn . name ()); // \u8f93\u51faAUTUMN Season [] values = autumn . values (); //\u8fd4\u56de\u6240\u6709\u679a\u4e3e\u9879 Season autumn2 = Season . valueOf ( \"AUTUMN\" ); // \u6309\u540d\u79f0\u8fd4\u56de\u5bf9\u5e94\u679a\u4e3e\u9879\uff0cautumn2\u548cautumn\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 System . out . println ( summer . compareTo ( autumn )); // \u8f93\u51fa-1\uff0c\u662f\u4e24\u4e2a\u7684\u5e8f\u53f7\u76f8\u51cf\u7684\u7ed3\u679c \u6ce8\u610f\uff1a enum \u6709\u9690\u5f0f\u7ee7\u627f Enum \u7c7b\uff0c\u56e0\u6b64\u4e0d\u80fd\u7ee7\u627f\u5176\u4ed6\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9e\u73b0\u63a5\u53e3\u3002","title":"\uff08\u4e09\uff09\u5e38\u7528\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#annotation","text":"\u53c8\u79f0\u4e3a\u5143\u6570\u636e( Metadata )","title":"\u516d\u3001\u6ce8\u89e3\uff08Annotation\uff09"},{"location":"Java%E8%BF%9B%E9%98%B6/#override","text":"\u7528\u4e8e\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5 1 2 3 4 @Target ( ElementType . METHOD ) // \u9650\u5236\u6ce8\u89e3\u4f7f\u7528\u5728\u54ea\u4e9b\u5143\u7d20\u4e0a @Retention ( RetentionPolicy . SOURCE ) // \u9650\u5236\u6ce8\u89e3\u53ea\u4fdd\u7559\u5728\u6e90\u6587\u4ef6\uff0c\u5176\u4ed6\u9009\u9879\u6709:CLASS\u3001RUNTIME public @interface Override { // @interface\u8868\u793a\u662f\u6ce8\u89e3\uff0c\u4e0d\u662f\u63a5\u53e3 } Target \u548c Retention \u662f\u4fee\u9970\u6ce8\u89e3\u7684\u6ce8\u89e3\uff0c\u79f0\u4e3a\u5143\u6ce8\u89e3\u3002","title":"\uff08\u4e00\uff09@Override"},{"location":"Java%E8%BF%9B%E9%98%B6/#deprecated","text":"\u8868\u793a\u67d0\u4e2a\u5143\u7d20\uff08\u7c7b\u3001\u65b9\u6cd5\u7b49\uff09\u5df2\u8fc7\u65f6\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528 \u53ef\u4ee5\u7528\u4e8e\u7248\u672c\u5347\u7ea7\u65f6\u7684\u8fc7\u6e21 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 @Documented // \u8868\u793a\u8be5\u6ce8\u89e3\u5e94\u5f53\u88abjavadoc\u5de5\u5177\u8bb0\u5f55 @Retention ( RetentionPolicy . RUNTIME ) @Target ( value = { CONSTRUCTOR , FIELD , LOCAL_VARIABLE , METHOD , PACKAGE , MODULE , PARAMETER , TYPE }) public @interface Deprecated { /** * Returns the version in which the annotated element became deprecated. * The version string is in the same format and namespace as the value of * the {@code @since} javadoc tag. The default value is the empty * string. * * @return the version string * @since 9 */ String since () default \"\" ; /** * Indicates whether the annotated element is subject to removal in a * future version. The default value is {@code false}. * * @return whether the element is subject to removal * @since 9 */ boolean forRemoval () default false ; }","title":"\uff08\u4e8c\uff09@Deprecated"},{"location":"Java%E8%BF%9B%E9%98%B6/#suppresswarning","text":"\u6291\u5236\uff08\u4e0d\u663e\u793a\uff09\u7f16\u8bd1\u5668\u8b66\u544a \u5e38\u7528\u8b66\u544a\u7c7b\u578b\uff1a unchecked \u672a\u68c0\u67e5\u7684\u8b66\u544a rawtypes \u6ca1\u6709\u6307\u5b9a\u6cdb\u578b\u7684\u8b66\u544a unused \u6ca1\u6709\u4f7f\u7528\u67d0\u4e2a\u53d8\u91cf\u7684\u8b66\u544a all \u6240\u6709\u8b66\u544a \u70b9\u51fb\u5de6\u4fa7\u9ec4\u8272\u63d0\u9192\uff0c\u5373\u53ef\u5feb\u901f\u6dfb\u52a0 SupressWarning 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 @Target ({ TYPE , FIELD , METHOD , PARAMETER , CONSTRUCTOR , LOCAL_VARIABLE , MODULE }) @Retention ( RetentionPolicy . SOURCE ) public @interface SuppressWarnings { /** * The set of warnings that are to be suppressed by the compiler in the * annotated element. Duplicate names are permitted. The second and * successive occurrences of a name are ignored. The presence of * unrecognized warning names is <i>not</i> an error: Compilers must * ignore any warning names they do not recognize. They are, however, * free to emit a warning if an annotation contains an unrecognized * warning name. * * <p> The string {@code \"unchecked\"} is used to suppress * unchecked warnings. Compiler vendors should document the * additional warning names they support in conjunction with this * annotation type. They are encouraged to cooperate to ensure * that the same names work across multiple compilers. * @return the set of warnings to be suppressed */ String [] value (); }","title":"\uff08\u4e09\uff09@SuppressWarning"},{"location":"Java%E8%BF%9B%E9%98%B6/#_15","text":"","title":"\uff08\u56db\uff09\u5143\u6ce8\u89e3"},{"location":"Java%E8%BF%9B%E9%98%B6/#1-retention","text":"\u7528\u4e8e\u6307\u5b9a\u6ce8\u89e3\u53ef\u4ee5\u4fdd\u7559\u7684\u65f6\u957f \u53c2\u6570\uff1a 1) RetentionPolicy.SOURCE \uff1a\u6ce8\u89e3\u53ea\u4fdd\u7559\u5728\u6e90\u6587\u4ef6\u4e2d 2) RetentionPolicy.CLASS \uff1a\u6ce8\u89e3\u4fdd\u7559\u5230\u7f16\u8bd1\u540e\uff0c\u8bb0\u5f55\u5728 class \u6587\u4ef6\u4e2d 3) RetentionPolicy.RUNTIME \uff1a\u6ce8\u89e3\u4fdd\u7559\u5230\u8fd0\u884c\u65f6\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u8be5\u6ce8\u89e3","title":"1. Retention"},{"location":"Java%E8%BF%9B%E9%98%B6/#2-target","text":"\u6307\u5b9a\u80fd\u591f\u4fee\u9970\u7684\u7a0b\u5e8f\u5143\u7d20\uff1a\u7c7b\u3001\u65b9\u6cd5\u3001\u5c40\u90e8\u53d8\u91cf\u3001\u5c5e\u6027\u3001\u6784\u9020\u5668\u3001\u53c2\u6570\u3001\u5305\u3001\u6a21\u5757\u7b49","title":"2. Target"},{"location":"Java%E8%BF%9B%E9%98%B6/#3-documented","text":"\u6307\u5b9a\u5f53\u524d\u6ce8\u89e3\u80fd\u88ab javadoc \u63d0\u53d6\u6210\u6587\u6863","title":"3. Documented"},{"location":"Java%E8%BF%9B%E9%98%B6/#4-inherited","text":"\u88ab\u4fee\u9970\u7684\u6ce8\u89e3\u5c06\u5177\u6709\u7ee7\u627f\u6027\uff0c\u82e5\u67d0\u4e2a\u7c7b\u7684\u6ce8\u89e3\u88ab Inherited \u4fee\u9970\uff0c\u5219\u5b83\u7684\u5b50\u7c7b\u81ea\u52a8\u5177\u6709\u8be5\u6ce8\u89e3","title":"4. Inherited"},{"location":"Java%E8%BF%9B%E9%98%B6/#_16","text":"","title":"\u4e03\u3001\u5f02\u5e38"},{"location":"Java%E8%BF%9B%E9%98%B6/#try-catch","text":"1 2 3 4 5 6 7 8 9 10 11 12 try { // \u53ef\u80fd\u51fa\u9519\u7684\u4ee3\u7801\u5757 } catch ( NullPointerException e ) { // \u5f02\u5e38\u53d1\u751f\u65f6\u4f1a\u76f4\u63a5\u8fdb\u5165catch\u5757\uff0c\u4e0d\u6267\u884c\u5f02\u5e38\u540e\u9762\u7684\u4ee3\u7801\uff1b\u82e5\u6ca1\u6709\u5f02\u5e38\u5219\u4e0d\u4f1a\u8fdb\u5165 System . out . println ( e . getMessage ()); } catch ( ArithmeticException e ) { System . out . println ( e . getMessage ()); } catch ( Exception e ) { // \u5b50\u7c7b\u5f02\u5e38\u8981\u5199\u5728\u7236\u7c7b\u5f02\u5e38\u524d\u9762 e . printStackTrace (); System . out . println ( e . getMessage ()); } finally { // \u4e0d\u7ba1\u6709\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u5fc5\u5b9a\u6267\u884c\u7684\u4ee3\u7801 } catch \u4e5f\u53ef\u4ee5\u4e0d\u5199\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 try { int n1 = 10 ; int n2 = 0 ; System . out . println ( n1 / n2 ); } finally { System . out . println ( \"finally\" ); } System . out . println ( \"\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\" ); /* \u8f93\u51fa\uff1a finally */ \u867d\u7136 finally \u6267\u884c\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u6355\u83b7\u5f02\u5e38\uff0c\u4e0d\u4f1a\u8f93\u51fa\u540e\u9762\u7684\u5185\u5bb9\u3002","title":"\uff08\u4e00\uff09try-catch"},{"location":"Java%E8%BF%9B%E9%98%B6/#_17","text":"\u5f02\u5e38\\left\\{ \\begin{aligned} Error \\\\ Exception \\end{aligned} \\right. \u5f02\u5e38\\left\\{ \\begin{aligned} Error \\\\ Exception \\end{aligned} \\right.","title":"\uff08\u4e8c\uff09\u5f02\u5e38\u5206\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#1-error","text":"Java \u865a\u62df\u673a\u65e0\u6cd5\u89e3\u51b3\u7684\u4e25\u91cd\u9519\u8bef\uff0c\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\uff1a JVM \u7cfb\u7edf\u5185\u90e8\u9519\u8bef\u3001\u8d44\u6e90\u8017\u5c3d\u7b49\u3002 Error\\left\\{ \\begin{aligned} StackOverFlow \\\\ OutOfMemory \\end{aligned} \\right. Error\\left\\{ \\begin{aligned} StackOverFlow \\\\ OutOfMemory \\end{aligned} \\right.","title":"1. Error"},{"location":"Java%E8%BF%9B%E9%98%B6/#2-exception","text":"\u5176\u4ed6\u7f16\u7a0b\u9519\u8bef\uff0c\u6216\u5076\u7136\u7684\u5916\u5728\u56e0\u7d20\u5bfc\u81f4\u7684\u4e00\u822c\u6027\u95ee\u9898\uff1a\u7a7a\u6307\u9488\u8bbf\u95ee\u3001\u8bfb\u53d6\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u3001\u7f51\u7edc\u4e2d\u65ad\u7b49\u3002 Exception \\left\\{ \\begin{aligned} 1) \u8fd0\u884c\u65f6\u5f02\u5e38\uff08\u9ed8\u8ba4throws\u629b\u7ed9\u7236\u7c7b\uff0c\u76f4\u5230JVM\uff09 \\\\ 2) \u7f16\u8bd1\u65f6\u5f02\u5e38\uff08\u5fc5\u987b\u7528try-catch\u6216throws\u5904\u7406\uff09 \\end{aligned} \\right. Exception \\left\\{ \\begin{aligned} 1) \u8fd0\u884c\u65f6\u5f02\u5e38\uff08\u9ed8\u8ba4throws\u629b\u7ed9\u7236\u7c7b\uff0c\u76f4\u5230JVM\uff09 \\\\ 2) \u7f16\u8bd1\u65f6\u5f02\u5e38\uff08\u5fc5\u987b\u7528try-catch\u6216throws\u5904\u7406\uff09 \\end{aligned} \\right. 1) \u8fd0\u884c\u65f6\u5f02\u5e38\\left\\{ \\begin{aligned} NullPointerException \uff08\u7a7a\u6307\u9488\u5f02\u5e38\uff09 \\\\ ClassCastException \uff08\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff09 \\\\ NumberFormatException \uff08\u6570\u5b57\u683c\u5f0f\u5f02\u5e38\uff09 \\\\ ArrayIndexOutOfBoundsException \uff08\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\uff09 \\\\ ArithmeticException\uff08\u7b97\u672f\u8fd0\u7b97\u5f02\u5e38\uff09 \\end{aligned} \\right. 1) \u8fd0\u884c\u65f6\u5f02\u5e38\\left\\{ \\begin{aligned} NullPointerException \uff08\u7a7a\u6307\u9488\u5f02\u5e38\uff09 \\\\ ClassCastException \uff08\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff09 \\\\ NumberFormatException \uff08\u6570\u5b57\u683c\u5f0f\u5f02\u5e38\uff09 \\\\ ArrayIndexOutOfBoundsException \uff08\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\uff09 \\\\ ArithmeticException\uff08\u7b97\u672f\u8fd0\u7b97\u5f02\u5e38\uff09 \\end{aligned} \\right. 2) \u7f16\u8bd1\u65f6\u5f02\u5e38 \\left\\{ \\begin{aligned} FileNotFoundException \uff08\u627e\u4e0d\u5230\u6587\u4ef6\u5f02\u5e38\uff09 \\\\ ClassNotFoundException \uff08\u627e\u4e0d\u5230\u7c7b\u5f02\u5e38\uff09 \\\\ IOException \uff08\u6587\u4ef6\u5f02\u5e38\uff09 \\\\ SQLException \uff08\u6570\u636e\u5e93\u5f02\u5e38\uff09 \\\\ EOFException \uff08\u64cd\u4f5c\u6587\u4ef6\u5230\u6587\u4ef6\u672b\u5c3e\uff09 \\\\ IllegalArgumentException \uff08\u53c2\u6570\u5f02\u5e38\uff09 \\end{aligned} \\right. 2) \u7f16\u8bd1\u65f6\u5f02\u5e38 \\left\\{ \\begin{aligned} FileNotFoundException \uff08\u627e\u4e0d\u5230\u6587\u4ef6\u5f02\u5e38\uff09 \\\\ ClassNotFoundException \uff08\u627e\u4e0d\u5230\u7c7b\u5f02\u5e38\uff09 \\\\ IOException \uff08\u6587\u4ef6\u5f02\u5e38\uff09 \\\\ SQLException \uff08\u6570\u636e\u5e93\u5f02\u5e38\uff09 \\\\ EOFException \uff08\u64cd\u4f5c\u6587\u4ef6\u5230\u6587\u4ef6\u672b\u5c3e\uff09 \\\\ IllegalArgumentException \uff08\u53c2\u6570\u5f02\u5e38\uff09 \\end{aligned} \\right.","title":"2. Exception"},{"location":"Java%E8%BF%9B%E9%98%B6/#_18","text":"","title":"\uff08\u4e09\uff09\u5f02\u5e38\u4f53\u7cfb\u56fe"},{"location":"Java%E8%BF%9B%E9%98%B6/#throws","text":"\u5c06\u9519\u8bef\u629b\u51fa\u7ed9\u8c03\u7528\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u76f4\u5230\u629b\u7ed9 JVM \uff08\u82e5\u7a0b\u5e8f\u5458\u6ca1\u6709\u663e\u793a\u5730\u5904\u7406\u5f02\u5e38\uff0c\u9ed8\u8ba4\u4f7f\u7528 throws \uff09 throws \u53ef\u4ee5\u629b\u51fa\u4e00\u7cfb\u5217\u5f02\u5e38 throws \u629b\u51fa\u7684\u5f02\u5e38\u53ef\u4ee5\u662f\u53d1\u751f\u5f02\u5e38\u7684\u7236\u7c7b \u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\u65f6\uff0c\u629b\u51fa\u7684\u5f02\u5e38\u5fc5\u987b\u662f \u7236\u7c7b\u5f02\u5e38 \u6216 \u7236\u7c7b\u5f02\u5e38\u7684\u5b50\u7c7b \uff1b try-catch \u548c throws \u4e8c\u9009\u4e00\uff0c\u6709\u4e86 try-catch \u53ef\u4ee5\u4e0d\u5fc5\u5199 throws ; \u6ce8\u610f\uff0c\u5b50\u7c7b\u629b\u51fa\u7684\u7f16\u8bd1\u65f6\u5f02\u5e38\uff0c\u7236\u7c7b\u4e00\u5b9a\u8981\u5904\u7406\u6216\u7ee7\u7eed\u629b\u51fa\uff0c\u800c\u8fd0\u884c\u5f02\u5e38\u4e0d\u7528\uff0c\u56e0\u4e3a\u6709\u9ed8\u8ba4\u5904\u7406\u673a\u5236\u3002 \u533a\u522b \u5b9a\u4e49 \u4f4d\u7f6e \u540e\u9762\u8ddf\u7684\u4e1c\u897f throws \u5f02\u5e38\u5904\u7406\u7684\u65b9\u5f0f \u65b9\u6cd5\u7b7e\u540d\u540e \u5f02\u5e38\u7c7b\u578b throw \u751f\u6210\u5f02\u5e38\u5bf9\u8c61 \u65b9\u6cd5\u4f53\u4e2d \u5f02\u5e38\u5bf9\u8c61","title":"\uff08\u56db\uff09throws"},{"location":"Java%E8%BF%9B%E9%98%B6/#_19","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Index { public static void main ( String [] args ) { int age = 150 ; if ( ! ( age >= 0 && age <= 120 )){ throw new AgeException ( \"\u5e74\u9f84\u9700\u8981\u57280\u5230120\u5c81\u4e4b\u95f4\uff01\" ); } System . out . println ( \"\u5e74\u9f84\u6b63\u786e\uff01\" ); } } class AgeException extends RuntimeException { AgeException ( String message ){ super ( message ); } } \u629b\u51fa\u6548\u679c\uff1a \u6ce8\u610f\uff0c\u81ea\u5b9a\u4e49\u5f02\u5e38\u4e00\u822c\u90fd\u7ee7\u627f RuntimeException \uff0c\u5982\u679c\u7ee7\u627f\u7f16\u8bd1\u65f6\u5f02\u5e38\u8fd8\u8981\u624b\u52a8\u629b\u51fa\uff0c\u6bd4\u8f83\u9ebb\u70e6\u3002","title":"\uff08\u4e94\uff09\u81ea\u5b9a\u4e49\u5f02\u5e38"},{"location":"Java%E8%BF%9B%E9%98%B6/#_20","text":"\u4f8b\u4e00\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 try { String [] arr = new String [ 3 ] ; // 1 if ( arr [ 1 ] . equals ( \"hello\" )) { // 2 System . out . println ( arr [ 1 ] ); } else { arr [ 3 ] = \"world\" ; } return 1 ; } catch ( ArrayIndexOutOfBoundsException e ){ return 2 ; } catch ( NullPointerException e ){ // 3 return 3 ; // 4 } finally { // 5 return 4 ; // 6 } // \u8fd4\u56de4 \u4f8b\u4e8c\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 int i = 1 ; try { i ++ ; String [] arr = new String [ 3 ] ; if ( arr [ 1 ] . equals ( \"hello\" )) { System . out . println ( arr [ 1 ] ); } else { arr [ 3 ] = \"world\" ; } return i ; } catch ( ArrayIndexOutOfBoundsException e ) { return i ; } catch ( NullPointerException e ) { return ++ i ; // \u4e34\u65f6\u4fdd\u5b58i\u7684\u503c\uff1aint tmp = i; } finally { ++ i ; System . out . println ( \"i = \" + i ); // i = 4 } // \u8f93\u51fai = 4\uff0c\u8fd4\u56de3 \u4f8b\u4e09\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 public static void main ( String [] args ) { try { func (); System . out . println ( \"A\" ); } catch ( Exception e ){ System . out . println ( \"C\" ); } System . out . println ( \"D\" ); } public static void func (){ try { throw new RuntimeException (); } finally { System . out . println ( \"B\" ); } } /* \u8f93\u51fa\uff1a B C D */ \u4e60\u9898\uff1a \u8ba9\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u5982\u679c\u8f93\u5165\u7684\u4e0d\u662f\u6574\u6570\uff0c\u5c31\u4e00\u76f4\u91cd\u65b0\u8f93\u5165\u3002\u8981\u6c42\u7528\u5f02\u5e38\u5b9e\u73b0\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main ( String [] args ) { Scanner scanner = new Scanner ( System . in ); int num = 0 ; while ( true ) { try { String str = scanner . next (); num = Integer . parseInt ( str ); break ; } catch ( NumberFormatException e ) { System . out . println ( \"\u4f60\u8f93\u5165\u7684\u4e0d\u662f\u6574\u6570\" ); } } System . out . println ( \"\u4f60\u8f93\u5165\u7684\u662f\uff1a\" + num ); } \u5982\u679c\u8f93\u5165\u6b63\u786e\uff0c\u5219\u76f4\u63a5 break \uff0c\u5426\u5219\u4f1a\u88ab catch \uff0c\u7ee7\u7eed\u8fdb\u5165\u5faa\u73af\u3002","title":"\uff08\u516d\uff09\u5f02\u5e38\u4f8b\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#_21","text":"","title":"\u516b\u3001\u5e38\u7528\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_22","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b \u5305\u88c5\u7c7b boolean Boolean char Character byte Byte short Short int Integer long Long float Float double Double Boolean\u548cCharacter\u7c7b\u7ed3\u6784\u56fe\uff1a \u5176\u4f59\u5305\u88c5\u7c7b\u7ed3\u6784\u56fe\u5982\u4e0b\uff1a","title":"\uff08\u4e00\uff09\u5305\u88c5\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 int n = 100 ; // \u624b\u52a8\u88c5\u7bb1 Integer integer = new Integer ( n ); Integer integer2 = Integer . valueOf ( n ); // \u624b\u52a8\u62c6\u7bb1 int n2 = integer . intValue (); // jdk5\u4ee5\u540e // \u81ea\u52a8\u88c5\u7bb1 Integer integer3 = n ; // \u5e95\u5c42\u4f7f\u7528\u4e86Integer.valueOf(n); // \u81ea\u52a8\u62c6\u7bb1 int n3 = integer ; // \u5e95\u5c42\u4f7f\u7528\u4e86integer.intValue()","title":"1. \u88c5\u7bb1\u4e0e\u62c6\u7bb1"},{"location":"Java%E8%BF%9B%E9%98%B6/#2-string","text":"\u5305\u88c5\u7c7b\u8f6cString\uff1a String str = n + \"\"; String str = n.toSting(); String str = String.valueOf(n); String\u8f6c\u5305\u88c5\u7c7b\uff1a Integer n = Integer.parseInt(str); Integer n = new Integer(str);","title":"2. \u5305\u88c5\u7c7b\u4e0eString\u76f8\u4e92\u8f6c\u6362"},{"location":"Java%E8%BF%9B%E9%98%B6/#3_1","text":"\u4f8b1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 1 Object obj = true ? new Integer ( 1 ): new Double ( 2.0 ); System . out . println ( obj ); // \u8f93\u51fa 1.0 // \u56e0\u4e3a\u4e09\u5143\u8fd0\u7b97\u7b26\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u8981\u628a\u7c7b\u578b\u8f6c\u6362\u4e3a\u8303\u56f4\u5927\u7684 // 2 Object obj ; if ( true ){ obj = new Integer ( 1 ); } else { obj = new Double ( 2.0 ); } System . out . println ( obj ); // \u8f93\u51fa 1 \u4f8b2\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 1 Integer n1 = new Integer ( 1 ); Integer n2 = new Integer ( 1 ); System . out . println ( n1 == n2 ); // false // 2 Integer n3 = 1 ; Integer n4 = 1 ; System . out . println ( n3 == n4 ); // true // 3 Integer n5 = 128 ; Integer n6 = 128 ; System . out . println ( n5 == n6 ); // false \u67e5\u770b\u6e90\u7801\u53ef\u77e5\uff0c\u81ea\u52a8\u88c5\u7bb1\u8c03\u7528\u4e86 valueOf() \u65b9\u6cd5\uff1a [-128,127] [-128,127] \u8303\u56f4\u5185\u7684\u6570\uff0c\u8fd4\u56de\u7684\u662f cache \u6570\u7ec4\u4e2d\u7684\u503c\uff0c\u56e0\u6b64\u5730\u5740\u4e00\u6837\uff1b\u8303\u56f4\u5916\u7684\u6570\u662f\u76f4\u63a5 new \u7684 Integer \u5bf9\u8c61\u3002 \u4f8b3\uff1a 1 2 3 4 5 6 7 Integer n1 = 127 ; int n2 = 127 ; System . out . println ( n1 == n2 ); // true int n3 = 127 ; Integer n4 = 127 ; System . out . println ( n3 == n4 ); // true \u4e3b\u8981\u6709\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5224\u65ad\u7684\u5c31\u662f\u503c\u662f\u5426\u76f8\u7b49\u3002","title":"3. \u4f8b\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#string","text":"","title":"\uff08\u4e8c\uff09String\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_2","text":"\u5b9e\u73b0\u4e86 Serializabele \u63a5\u53e3\u53ef\u4ee5\u4e32\u884c\u5316\uff0c\u53ef\u7528\u4e8e\u7f51\u7edc\u4f20\u8f93\uff1b \u5b9e\u73b0\u4e86 Comparable \u63a5\u53e3\u53ef\u4ee5\u76f8\u4e92\u6bd4\u8f83\uff1b String name = \"Kun\"; \u4e2d\u7684 \"Kun\" \u662f\u5e38\u91cf\uff0c\u4fdd\u5b58\u5728\u5e38\u91cf\u6c60\u4e2d\uff0c\u518d\u7531 name \u6307\u5411\uff1b String \u7c7b\u4e2d\u6709\u4e00\u4e2a\u5c5e\u6027\u7528\u4e8e\u5b58\u653e\u5b57\u7b26\u4e32\uff1a private final char value[] \uff0c value[] \u662f\u4e00\u4e2a final \u7c7b\u578b\uff0c\u8bf4\u660e\u5b83\u7684\u5730\u5740\u4e0d\u53ef\u4ee5\u4fee\u6539\uff1b \u5bf9\u5b57\u7b26\u4e32\u505a\u5927\u91cf\u4fee\u6539\u65f6\uff0c\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 String \u3002","title":"1. \u7279\u70b9"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_1","text":"String str = \"Hello\"+\"World\"; \u65f6\uff0c\u4f1a\u76f4\u63a5\u4ece\u5e38\u91cf\u6c60\u4e2d\u83b7\u53d6\u5e76\u8fde\u63a5\uff1b String str = str1 + str2; \u65f6\uff0c\u5728 JDK8 \u4e2d\uff0c\u4f1a\u521b\u5efa StringBuilder \u5bf9\u8c61\u5e76\u4f7f\u7528append\u8fdb\u884c\u8fde\u63a5\uff0c\u8fde\u63a5\u7ed3\u675f\u540e\u518d\u901a\u8fc7 toStrnig() \u65b9\u6cd5\u8fd4\u56deString\uff0c\u56e0\u6b64\u6548\u7387\u6781\u4f4e\uff1b\u800c JDK9 \u4e2d\uff0c\u76f4\u63a5\u901a\u8fc7 makeConcatWithConstants \u65b9\u6cd5\u8fde\u63a5\u5b57\u7b26\u4e32\uff0c\u5bf9\u5176\u8fdb\u884c\u4e86\u4e00\u5b9a\u4f18\u5316\u3002","title":"2. \u5b57\u7b26\u4e32\u8fde\u63a5\u7684\u6548\u7387\u95ee\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#3-string","text":"String str = \"Hello\" str \u76f4\u63a5\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u7684\u5730\u5740\u3002 String str = new String(\"Hello\") \u5806\u4e2d\u5f00\u8f9f\u7a7a\u95f4\uff0c str \u6307\u5411\u5806\uff0c\u5bf9\u8c61\u5185\u7684 value \u5c5e\u6027\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u7684\u5730\u5740\u3002","title":"3. String\u7684\u5185\u5b58\u5e03\u5c40"},{"location":"Java%E8%BF%9B%E9%98%B6/#4","text":"\u4f8b1\uff1a 1 2 3 4 String a = \"abc\" ; String b = \"abc\" ; System . out . println ( a . equals ( b )); // true System . out . println ( a == b ); // true \u4f8b2\uff1a 1 2 3 4 5 6 7 String a = \"hello\" ; String b = new String ( \"hello\" ); System . out . println ( a . equals ( b )); // true System . out . println ( a == b ); // false System . out . println ( a == b . intern ()); // true System . out . println ( b == b . intern ()); // false intern() \u65b9\u6cd5\uff1a\u8fd4\u56de\u5e38\u91cf\u6c60\u4e2d\u8be5\u5b57\u7b26\u4e32\u7684\u5730\u5740\uff1b\u82e5\u6ca1\u6709\uff0c\u5c31\u5c06\u5176\u6dfb\u52a0\u5230\u6c60\u4e2d\uff0c\u518d\u8fd4\u56de\u5730\u5740\u3002\u4ee5\u4e0a\u9762\u7684\u56fe\u4e3a\u4f8b\uff0c str \u7684\u5730\u5740\u662f ox33 \uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u662f 0x99 \u3002 \u4f8b3\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 String a = \"hello\" ; String b = \"hi\" ; // \u4ea7\u751f\u4e862\u4e2a\u5bf9\u8c61 // \uff08\u8fd9\u91cc\u628a\u5f15\u7528\u6307\u5411\u7684\u7a7a\u95f4\u7b97\u6210\u4e00\u4e2a\u5bf9\u8c61\uff09 String c = \"Hello\" + \"World\" ; // \u4ea7\u751f\u4e861\u4e2a\u5bf9\u8c61 // \u7f16\u8bd1\u5668\u4f1a\u4f18\u5316\u4e3a\"HelloWord\" String d = \"Hello\" ; String e = \"World\" ; String f = d + e ; // \u4ea7\u751f\u4e864\u4e2a\u5bf9\u8c61 // 1. d \u548c e \u5404\u5360\u4e00\u4e2a\u5bf9\u8c61 // 2. \u521b\u5efa\u4e86\u4e00\u4e2aStringBuilder\u5bf9\u8c61builder // 3. \u8be5\u5bf9\u8c61\u901a\u8fc7\u4e24\u6b21\u6267\u884cappend()\u65b9\u6cd5\uff0c\u8fde\u63a5\u5b57\u7b26\u4e32HelloWorld // 4. f = builder.toString();\u521b\u5efa\u4e86\u4e00\u4e2aString\u5bf9\u8c61 \u4f8b4\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public class Index { String str = new String ( \"hello\" ); char [] ch = new char [] { 'j' , 'a' , 'v' , 'a' }; // \u53ea\u6709\u8fd9\u79cd\u5199\u6cd5\u624d\u80fd\u76f4\u63a5\u8f93\u51fachar[] public static void main ( String [] args ) { Index index = new Index (); index . change ( index . str , index . ch ); System . out . print ( index . str + \" \" ); System . out . println ( index . ch ); } public void change ( String str , char [] ch ) { str = \"java\" ; ch [ 0 ] = 'h' ; } } // \u8f93\u51fa\uff1ahello hava \u4f8b4\u8fc7\u7a0b\u5206\u6790\u5982\u4e0b\uff1a \u6ca1\u6709\u6267\u884c change() \u65b9\u6cd5\u524d\uff0c main \u65b9\u6cd5\u4e2d\u7684 index \u5f15\u7528\u6307\u5411\u5806\u4e2d\u7684\u5bf9\u8c61\u3002 \u5bf9\u8c61\u4e2d\u6709 str \u548c ch \u4e24\u4e2a\u5f15\u7528\uff0c str \u6307\u5411\u5806\u4e2d\u7684 String \u5bf9\u8c61\uff0c ch \u6307\u5411\u5806\u4e2d\u7684 char[] \u5bf9\u8c61\u3002 String \u5bf9\u8c61\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u7684 hello \u5e38\u91cf\uff0c\u800c char[] \u5bf9\u8c61\u4e2d\u76f4\u63a5\u4fdd\u5b58\u4e86\u5b57\u7b26\u503c\u3002 \u6267\u884c\u4e86 change \u65b9\u6cd5\u540e\uff0c\u6808\u4e2d\u65b0\u589e\u6808\u5e27\uff0c\u4f20\u5165\u7684 str \u548c ch \u5f15\u7528\u88ab\u62f7\u8d1d\u5230\u65b9\u6cd5\u4e2d\u6210\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002 \u5c40\u90e8\u53d8\u91cf str \u76f4\u63a5\u6307\u5411\u5e38\u91cf\u6c60\u4e2d\u7684 java \u5e38\u91cf\uff0c\u5c40\u90e8\u53d8\u91cf ch \u4fee\u6539\u4e86\u5806\u4e2d\u7684\u5b57\u7b26\u3002 \u56de\u5230 main \u65b9\u6cd5\u540e\uff0c\u5806\u4e2d\u7684 str \u4f9d\u65e7\u6307\u5411 hello \uff0c ch \u6240\u6307\u5411\u7684\u5b57\u7b26\u6570\u7ec4\u5185\u5bb9\u5df2\u7ecf\u88ab\u6539\u53d8\u3002 \uff08\u6ce8\u610f\uff0c final char[] \u8868\u793a\u5f15\u7528\u4fdd\u5b58\u7684\u5730\u5740\u4e0d\u53ef\u4fee\u6539\uff0c\u800c\u4e0d\u662f\u5185\u5bb9\uff09","title":"4. \u4f8b\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#stringbuffer","text":"","title":"\uff08\u4e09\uff09StringBuffer\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_3","text":"\u7236\u7c7b\u4e2d\u6709\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u53d8\u91cf char[] value \uff0c\u4fdd\u5b58\u5728\u5806\u4e2d\u800c\u4e0d\u662f\u5e38\u91cf\u6c60\u4e2d\uff1b StringBuffer \u7c7b\u662f final \u7684\uff0c\u4e0d\u80fd\u88ab\u7ee7\u627f\uff1b \u53ef\u4ee5\u5feb\u901f\u4fee\u6539\u5185\u5bb9\uff0c\u4e0d\u5fc5\u6bcf\u6b21\u66f4\u65b0\u5730\u5740\uff0c\u53ea\u6709\u7a7a\u95f4\u4e0d\u591f\u65f6\u624d\u9700\u8981\u66f4\u65b0\u5730\u5740\uff0c\u6548\u7387\u9ad8\u3002","title":"1. \u7279\u70b9"},{"location":"Java%E8%BF%9B%E9%98%B6/#2-stringbuffer","text":"","title":"2. StringBuffer\u7684\u5185\u5b58\u5e03\u5c40"},{"location":"Java%E8%BF%9B%E9%98%B6/#3-stringbuffer","text":"\u6784\u9020\u5668\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a 1 2 3 4 5 StringBuffer sb1 = new StringBuffer (); // \u9ed8\u8ba4\u5f00\u8f9f\u4e00\u4e2a\u957f\u5ea6\u4e3a16\u7684char\u6570\u7ec4 StringBuffer sb2 = new StringBuffer ( 100 ); // \u5f00\u8f9f\u4e00\u4e2a\u957f\u5ea6\u4e3a[100]+16\u7684char\u6570\u7ec4 StringBuffer sb3 = new StringBuffer ( \"hello\" ); // \u5f00\u8f9f\u4e00\u4e2a\u957f\u5ea6\u4e3a[hello].length\u7684char\u6570\u7ec4 String \u548c StringBuffer \u76f8\u4e92\u8f6c\u6362\uff1a String \u8f6c StringBuffer \uff1a 1 2 3 4 5 6 7 String str = \"hello\" ; // \u65b9\u6cd51 StringBuffer sb = new StringBuffer ( str ); // \u5bf9str\u672c\u8eab\u6ca1\u6709\u5f71\u54cd // \u65b9\u6cd52 StringBuffer sb2 = new StringBuffer (); sb2 = sb2 . append ( str ); StringBuffer \u8f6c String \uff1a 1 2 3 4 5 6 StringBuffer sb = new StringBuffer ( \"Hello World\" ); // \u65b9\u6cd51 String str = sb . toString (); // \u65b9\u6cd52 String str2 = new String ( sb ); \u589e\u5220\u6539\u67e5\u63d2\uff1a 1 2 3 4 5 6 7 8 9 10 11 StringBuffer sb = new StringBuffer ( \"Hello World\" ); // \u589e sb . append ( \"!!!\" ); // Hello World!!! // \u63d2 sb . insert ( 2 , \"hi\" ); // Hehillo World!!! // \u5220 sb . delete ( 2 , 5 ); // Helo World!!! // \u6539 sb . replace ( 4 , 6 , \"hahaha\" ); // Helohahaharld!!! // \u67e5 sb . indexOf ( \"ha\" ); // 4","title":"3. StringBuffer\u5e38\u7528\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#4_1","text":"1 2 3 4 StringBuffer sb = new StringBuffer (); sb . append ( null ); // \u8fd9\u91cc\u8981\u770b\u6e90\u7801\uff01\u6e90\u7801\u4e2d\u628anull\u8f6c\u6362\u6210\u4e86{'n','u','l','l'}\u5b58\u50a8 StringBuffer sb2 = new StringBuffer ( null ); // \u5e95\u5c42\u8c03\u7528\u4e86super(str.length() + 16)\uff0c\u56e0\u6b64\u4f1a\u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38","title":"4. \u4f8b\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#stringbuilder","text":"\u4e0e StringBuffer \u7c7b\u4f3c\uff0c\u662f\u53ef\u53d8\u5b57\u7b26\u5e8f\u5217\uff1b StringBuilder \u662f final \u7684\uff0c\u4e0d\u80fd\u88ab\u7ee7\u627f\uff1b \u53ef\u7528\u7684\u65b9\u6cd5\u548c StringBuffer \u4e00\u6837\uff0c\u4f46\u662f\u5b83\u9002\u7528\u4e8e\u5355\u7ebf\u7a0b\uff0c\u6ca1\u6709 synchronized \u540c\u6b65\uff0c\u56e0\u6b64\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u3002","title":"\uff08\u56db\uff09StringBuilder\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_23","text":"","title":"\uff08\u4e94\uff09\u65e5\u671f\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#1-datesimpledateformat","text":"1 SimpleDateFormat simpleDateFormat = new SimpleDateFormat ( \"yyyy\u5e74MM\u6708dd\u65e5 hh:mm:ss E\" ); \u5c06 Date \u8f6c\u4e3a\u56fa\u5b9a\u683c\u5f0f\u7684 String 1 2 Date date = new Date (); String dateStr = simpleDateFormat . format ( date ); \u5c06\u683c\u5f0f\u5316 String \u8f6c\u6362\u56de Date 1 2 String str = \"1996\u5e7401\u670801\u65e5 10:20:35 \u661f\u671f\u4e94\" ; Date date = simpleDateFormat . parse ( str );","title":"1. Date\u4e0eSimpleDateFormat"},{"location":"Java%E8%BF%9B%E9%98%B6/#2-calendar","text":"Calendar \u662f\u62bd\u8c61\u7c7b \u53ef\u4ee5\u901a\u8fc7 getInstance() \u83b7\u5f97\u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Calendar c = new Calendar . getInstance (); // \u6ce8\u610f\uff0c\u7531\u4e8e\u8981\u548c\u5bf9\u8c61\u5173\u8054\u8d77\u6765\uff0c\u56e0\u6b64\u901a\u8fc7get\u7684\u65b9\u5f0f\u83b7\u53d6 System . out . println ( c . get ( Calendar . YEAR )); System . out . println ( c . get ( Calendar . MonTh ) + 1 ); // \u6708\u4efd\u9ed8\u8ba4\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u8981+1 System . out . println ( c . get ( Calendar . DAY_OF_MONTH )); System . out . println ( c . get ( Calendar . HOUR )); // \u9ed8\u8ba4\u662f12\u8fdb\u5236 System . out . println ( c . get ( Calendar . HOUR_OF_DAY )); // 24\u8fdb\u5236\u7684\u5c0f\u65f6 System . out . println ( c . get ( Calendar . MINUTE )); System . out . println ( c . get ( Calendar . SECOND )); // \u4fbf\u4e8e\u81ea\u7531\u7ec4\u5408 System . out . println ( c . get ( Calendar . YEAR ) + \"-\" + ( c . get ( Calendar . MonTh ) + 1 ) + \"-\" + c . get ( Calendar . DAY_OF_MONTH ) + \" \" + c . get ( Calendar . HOUR_OF_DAY ) + \":\" + c . get ( Calendar . MINUTE ) + \":\" + c . get ( Calendar . SECOND )); Date\u548cCalendar\u5b58\u5728\u7684\u95ee\u9898\uff1a \u65e5\u671f\u3001\u65f6\u95f4\u76f8\u5173\u7684\u7c7b\u5e94\u5f53\u662f\u4e0d\u53ef\u53d8\u7684\uff1b Date \u5e74\u4efd\u4ece1990\u5e74\u5f00\u59cb\uff0c\u6708\u4efd\u4ece0\u5f00\u59cb\u4e0d\u5408\u7406\uff1b \u683c\u5f0f\u5316\u53ea\u5bf9 Date \u53ef\u7528\uff0c Calendar \u65e0\u6cd5\u4f7f\u7528\uff1b \u7ebf\u7a0b\u4e0d\u5b89\u5168\u3002","title":"2. Calendar"},{"location":"Java%E8%BF%9B%E9%98%B6/#3-jdk8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // \u6784\u9020 LocalDateTime now = LocalDateTime . now (); // \u53ef\u4ee5\u83b7\u53d6\u5e74\u6708\u65e5\u65f6\u5206\u79d2 LocalDate now2 = LocalDate . now (); // \u53ef\u4ee5\u83b7\u53d6\u5e74\u6708\u65e5 LocalTime now3 = LocalTime . now (); // \u53ef\u4ee5\u83b7\u53d6\u65f6\u5206\u79d2 // \u65b9\u6cd5 System . out . println ( now ); System . out . println ( now . getYear ()); // 2022 System . out . println ( now . getMonth ()); // JUNE System . out . println ( now . getMonthValue ()); // 6 System . out . println ( now . getDayOfMonth ()); // 25 System . out . println ( now . getHour ()); // 17 System . out . println ( now . getMinute ()); // 6 System . out . println ( now . getSecond ()); // 46 // \u683c\u5f0f\u5316 DateTimeFormatter formatter = DateTimeFormatter . ofPattern ( \"yyyy\u5e74MM\u6708dd\u65e5 HH:mm:dd\" ); String dateStr = formatter . format ( now ); // \u65f6\u95f4\u6233 Instant nowX = Instant . now (); Date date = Date . from ( nowX ); // Instant\u8f6cDate Instant nowY = date . toInstant (); // Date\u8f6cInstant","title":"3. JDK8\u65b0\u589e\u7b2c\u4e09\u4ee3\u65e5\u671f"},{"location":"Java%E8%BF%9B%E9%98%B6/#_24","text":"","title":"\uff08\u516d\uff09\u4f8b\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_4","text":"\u5b9a\u4e49\u4e00\u4e2a Book \u7c7b\uff0c\u5305\u542b\u4e66\u540d\u3001\u4ef7\u683c\u4e24\u4e2a\u5c5e\u6027\uff0c\u4f7f\u7528\u63a5\u53e3\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002 \u63a5\u53e3\uff1a 1 2 3 public interface SortBook { double sortBook ( Book a , Book b ); } Book\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 public class Book { private String bookName ; private double price ; public Book ( String bookName , double price ) { this . bookName = bookName ; this . price = price ; } public static void sortBooks ( Book [] books , SortBook sb ) { for ( int i = 0 ; i < books . length - 1 ; i ++ ) { for ( int j = 0 ; j < books . length - i - 1 ; j ++ ) { if ( sb . sortBook ( books [ j ] , books [ j + 1 ] ) > 0 ) { Book tmp = books [ j ] ; books [ j ] = books [ j + 1 ] ; books [ j + 1 ] = tmp ; } } } } public static void printBooks ( Book [] books ) { for ( Book book : books ) { System . out . println ( book . getBookName () + \" , \" + book . getPrice ()); } System . out . println ( \"======================\" ); } public String getBookName () { return bookName ; } public double getPrice () { return price ; } } Main\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 public class Index { public static void main ( String [] args ) { Book [] books = new Book [ 5 ] ; books [ 0 ] = new Book ( \"\u6bcd\u732a\u7684\u4ea7\u540e\u62a4\u7406\" , 20.6 ); books [ 1 ] = new Book ( \"\u661f\u706b\u82f1\u8bed\" , 32.6 ); books [ 2 ] = new Book ( \"Android\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a\" , 70.5 ); books [ 3 ] = new Book ( \"\u8ba1\u7b97\u673a\u7f51\u7edc\" , 56.1 ); books [ 4 ] = new Book ( \"\u6df1\u7f51\" , 34.2 ); sortBooks ( books , new SortBook () { @Override public double sortBook ( Book a , Book b ) { return a . getPrice () - b . getPrice (); } }); printBooks ( books ); sortBooks ( books , new SortBook () { @Override public double sortBook ( Book a , Book b ) { return b . getPrice () - a . getPrice (); } }); printBooks ( books ); sortBooks ( books , new SortBook () { @Override public double sortBook ( Book a , Book b ) { return a . getBookName (). length () - b . getBookName (). length (); } }); printBooks ( books ); } } /* \u8f93\u51fa\uff1a \u6bcd\u732a\u7684\u4ea7\u540e\u62a4\u7406 , 20.6 \u661f\u706b\u82f1\u8bed , 32.6 \u6df1\u7f51 , 34.2 \u8ba1\u7b97\u673a\u7f51\u7edc , 56.1 Android\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a , 70.5 ====================== Android\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a , 70.5 \u8ba1\u7b97\u673a\u7f51\u7edc , 56.1 \u6df1\u7f51 , 34.2 \u661f\u706b\u82f1\u8bed , 32.6 \u6bcd\u732a\u7684\u4ea7\u540e\u62a4\u7406 , 20.6 ====================== \u6df1\u7f51 , 34.2 \u661f\u706b\u82f1\u8bed , 32.6 \u8ba1\u7b97\u673a\u7f51\u7edc , 56.1 \u6bcd\u732a\u7684\u4ea7\u540e\u62a4\u7406 , 20.6 Android\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u7cbe\u901a , 70.5 ====================== */","title":"1. \u4f8b\u4e00"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_2","text":"\u5bf9\u8f93\u5165\u4e09\u4e2a\u5b57\u4ee5\u4e0a\u7684\u540d\u5b57\u8f6c\u6362\u683c\u5f0f\uff0c\u5982 Han Shun Ping \u8f6c\u6362\u4e3a Ping,Han .S \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class Index { public static void main ( String [] args ) { method ( \"Han Shun Ping\" ); } public static void method ( String str ) { String [] splitStr = str . split ( \" \" ); if ( splitStr . length != 3 ) { throw new RuntimeException ( \"\u5b57\u7b26\u4e32\u683c\u5f0f\u4e0d\u6b63\u786e\uff01\" ); } String ans = String . format ( \"%s,%s .%c\" , splitStr [ 2 ] , splitStr [ 0 ] , splitStr [ 1 ] . charAt ( 0 )); System . out . println ( ans ); } } \u7f16\u7a0b\u6280\u5de7\uff1a \u5728\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u65f6\uff0c\u3010\u5199\u51fa\u6b63\u786e\u60c5\u51b5\u540e\u76f4\u63a5\u53d6\u53cd\u3011\u6bd4\u8d77\u60f3\u4e00\u7cfb\u5217\u3010\u4e0d\u6b63\u786e\u7684\u60c5\u51b5\u3011\u8981\u66f4\u52a0\u5b8c\u5584\u548c\u65b9\u4fbf\u3002 \u6b64\u5916\uff0c\u629b\u51fa\u5f02\u5e38\u4e5f\u662f\u9002\u7528\u7684\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 public class Index { public static void main ( String [] args ) { try { method (); System . out . println ( \"\u6210\u529f\uff01\" ); } catch ( Exception e ) { System . out . println ( e . getMessage ()); } } public static void method () { if ( ! ( \u6761\u4ef6 )) { throw new RuntimeException ( \"\u9519\u8bef\u4fe1\u606f\" ); } } }","title":"2. \u4f8b\u4e8c"},{"location":"Java%E8%BF%9B%E9%98%B6/#_25","text":"\uff08 ConcurrentHashMap \u80fd\u591f\u5904\u7406\u5e76\u53d1\u95ee\u9898\uff0c\u662f\u7ebf\u7a0b\u540c\u6b65\u7684\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff09","title":"\u4e5d\u3001\u96c6\u5408"},{"location":"Java%E8%BF%9B%E9%98%B6/#collection","text":"","title":"\uff08\u4e00\uff09Collection"},{"location":"Java%E8%BF%9B%E9%98%B6/#iterator","text":"\u7528\u4e8e\u904d\u5386\u96c6\u5408 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Collection < String > arr = new ArrayList <> (); arr . add ( \"\u5f20\u4e09\" ); arr . add ( \"\u674e\u56db\" ); arr . add ( \"Khun\" ); Iterator < String > iterator = arr . iterator (); while ( iterator . hasNext ()){ Object obj = iterator . next (); System . out . println ( obj ); } // \u5faa\u73af\u7ed3\u675f\u540e\uff0citerator\u6307\u5411\u6700\u540e\u7684\u5143\u7d20 // \u9700\u8981\u91cd\u7f6e\u8fed\u4ee3\u5668\uff0c\u624d\u53ef\u518d\u6b21\u4f7f\u7528 iterator = col . iterator ();","title":"\uff08\u4e8c\uff09Iterator"},{"location":"Java%E8%BF%9B%E9%98%B6/#list","text":"\u6709\u5e8f\u3001\u53ef\u91cd\u590d\uff1b \u6709\u7d22\u5f15\uff0c\u4f7f\u7528 list.get() \uff1b \u5e38\u7528\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // \u589e list . add ( \"hello\" ); list . add ( 1 , \"world\" ); list . addAll ( list2 ); list . addAll ( 1 , list2 ); // \u5220 list . remove ( 0 ); // \u6539 list . set ( 1 , \"hi\" ); // \u67e5 list . indexOf ( \"hello\" ); // \u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e list . lastIndexOf ( \"hello\" ); // \u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e List list3 = list . subList ( 0 , 2 ); // \u8fd4\u56de[0,2)\u7684\u5143\u7d20","title":"\uff08\u4e09\uff09List"},{"location":"Java%E8%BF%9B%E9%98%B6/#arraylist","text":"\u5e95\u5c42\u7531\u6570\u7ec4\u5b9e\u73b0\uff0c ArrayList \u4e2d\u7ef4\u62a4\u4e86\u4e00\u4e2a transient Object[] \u6570\u7ec4 elementData \uff08 transient \u8868\u793a\u5c5e\u6027\u4e0d\u4f1a\u88ab\u7cfb\u5217\u5316\uff09\uff1b \u53ef\u4ee5\u52a0\u5165null\uff1b \u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u6267\u884c\u6548\u7387\u9ad8; \u4f7f\u7528\u65e0\u53c2\u6784\u9020\u5668\u521b\u5efa ArrayList \u5bf9\u8c61\u65f6\uff0c\u9ed8\u8ba4\u5927\u5c0f\u4e3a 0 0 \uff0c\u9996\u6b21\u6269\u5bb9\u65f6\u5927\u5c0f\u6269\u4e3a 10 10 \uff0c\u6b64\u540e\u6269\u5bb9\u65f6\uff0c\u589e\u5927\u4e3a\u539f\u6765\u7684 1.5 1.5 \u500d\uff1b \u5982\u679c\u4f7f\u7528\u6307\u5b9a\u5927\u5c0f\u7684\u6784\u9020\u5668\u521b\u5efa ArrayList \u5bf9\u8c61\uff0c\u521d\u59cb\u5bb9\u91cf\u4e3a\u6307\u5b9a\u5927\u5c0f\uff0c\u4e4b\u540e\u6269\u5bb9\u65f6\uff0c\u6269\u5927\u4e3a\u539f\u6765\u7684 1.5 1.5 \u500d\u3002","title":"\uff08\u56db\uff09ArrayList"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_5","text":"","title":"1. \u6269\u5bb9\u5173\u952e\u6e90\u7801"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 List list = new ArrayList (); // \u6392\u5e8f Collections . reverse ( list ); // \u53cd\u8f6c\u987a\u5e8f Collections . shuffle ( list ); // \u6253\u4e71\u5143\u7d20\u968f\u673a\u6392\u5e8f Collections . sort ( list ); // \u6309\u5143\u7d20\u7684\u81ea\u7136\u987a\u5e8f\u6392\u5e8f Collections . sort ( list , new Comparator (){ // \u81ea\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f @Override public int compare ( Object o1 , Object o2 ){ return (( String ) o1 ). length - (( String ) o2 ). length ; } }); // \u4ea4\u6362\u4f4d\u7f6e\u4e3a0\u548c1\u7684\u5143\u7d20 Collections . swap ( list , 0 , 1 ); // \u6c42\u6700\u5927/\u6700\u5c0f Collections . max ( list ); // \u8fd4\u56de\u81ea\u7136\u987a\u5e8f\u6392\u5e8f\u7684\u6700\u5927\u503c Collections . max ( list , new Comparator (){ // \u81ea\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u4e2d\u7684\u6700\u5927\u503c @Override public int compare ( Object o1 , Object o2 ){ return (( String ) o1 ). length - (( String ) o2 ). length ; } }); Collections . max ( list , new Comparator (){ // \u8fd4\u56de\u81ea\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u4e2d\u7684\u6700\u5927\u503c @Override public int compare ( Object o1 , Object o2 ){ return (( String ) o1 ). length - (( String ) o2 ). length ; } }); Collections . max ( list , new Comparator (){ // \u8fd4\u56de\u81ea\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u6216\u8005\u628amax\u6539\u4e3amin\u6548\u679c\u4e5f\u4e00\u6837 @Override public int compare ( Object o1 , Object o2 ){ return (( String ) o2 ). length - (( String ) o1 ). length ; } }); // \u8fd4\u56de\u5143\u7d20\u51fa\u73b0\u6b21\u6570 Collections . frequency ( list , \"Kun\" ); // \u8d4b\u503clist2\u4e2d\u7684\u5143\u7d20\u5230list1 (\u8981\u6c42list1.size() \u2265 list2.size()) Collections . copy ( list1 , list2 ); // \u67e5\u627eNight\uff0c\u5e76\u5168\u90e8\u66ff\u6362\u4e3aKun Collection . replaceAll ( list , \"Night\" , \"Kun\" );","title":"2. \u5e38\u7528\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#vector","text":"\u5e95\u5c42\u4e5f\u662f\u7531\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\u5b9e\u73b0\uff1a protected Objected[] elementData \uff1b Vector \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u65b9\u6cd5\u90fd\u5e26\u6709 synchronized \uff1b \u6269\u5bb9\u673a\u5236\u548c ArrayList \u4e0d\u540c\uff1a\u4f7f\u7528\u65e0\u53c2\u6784\u9020\u5668\u521b\u5efa Vector \u5bf9\u8c61\u65f6\uff0c\u9ed8\u8ba4\u5927\u5c0f\u4e3a 10 \uff1b\u4f7f\u7528\u6709\u53c2\u6784\u9020\u5668\u521b\u5efa Vector \u65f6\uff0c\u5927\u5c0f\u4e3a\u6307\u5b9a\u5927\u5c0f\uff0c\u9700\u8981\u6269\u5bb9\u65f6\u589e\u5927\u5230\u539f\u6765\u7684 2 2 \u500d\uff1b","title":"\uff08\u4e94\uff09Vector"},{"location":"Java%E8%BF%9B%E9%98%B6/#linkedlist","text":"\u5e95\u5c42\u5b9e\u73b0\u4e86\u53cc\u5411\u94fe\u8868\uff0c\u589e\u5220\u6548\u7387\u8f83\u9ad8\uff0c\u6539\u67e5\u6548\u7387\u8f83\u4f4e\uff1b \u6dfb\u52a0\u5143\u7d20\u53ef\u4ee5\u91cd\u590d\uff0c\u5305\u62ec null \uff1b \u7ebf\u7a0b\u4e0d\u5b89\u5168\u3002","title":"\uff08\u516d\uff09LinkedList"},{"location":"Java%E8%BF%9B%E9%98%B6/#set","text":"\u6dfb\u52a0\u548c\u53d6\u51fa\u987a\u5e8f\u4e0d\u4e00\u81f4\uff0c\u65e0\u7d22\u5f15\uff08\u5373\u4e0d\u80fd\u7528\u666e\u901a for \u5faa\u73af\u904d\u5386\uff09\uff1b \u5143\u7d20\u4e0d\u53ef\u91cd\u590d\uff08\u5305\u62ec null \uff09\u3002","title":"\uff08\u4e03\uff09Set"},{"location":"Java%E8%BF%9B%E9%98%B6/#hashset","text":"\u5e95\u5c42\u662f HashMap \uff1b \u521d\u59cb\u5bb9\u91cf\u4e3a 16 16 \uff0c\u4e34\u754c\u503c\u4e3a 16*0.75=12 16*0.75=12 \uff0c\u5230\u8fbe\u4e34\u754c\u503c\u5c31\u4ee5 2 2 \u500d\u6269\u5bb9\u3002","title":"\uff08\u516b\uff09HashSet"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_6","text":"","title":"1. \u6784\u9020\u5668"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 // \u589e st . add (); // \u6dfb\u52a0\u6210\u529f\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse // add\u7684\u5143\u7d20\u4e0d\u53ef\u91cd\u590d st . add ( \"A\" ); // T st . add ( \"A\" ); // F st . add ( new Dog ( \"tom\" )); // T st . add ( new Dog ( \"tom\" )); // T st . add ( new String ( \"tom\" )); // T st . add ( new String ( \"tom\" )); // F\uff0c\u548cadd\u7684\u6e90\u7801\u6709\u5173","title":"2. \u5e38\u7528\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#3-add","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /** * Adds the specified element to this set if it is not already present. * More formally, adds the specified element {@code e} to this set if * this set contains no element {@code e2} such that * {@code Objects.equals(e, e2)}. * If this set already contains the element, the call leaves the set * unchanged and returns {@code false}. * * @param e element to be added to this set * @return {@code true} if this set did not already contain the specified * element */ public boolean add ( E e ) { // put()\u8fd4\u56de\u4e3a\u7a7a\u8868\u793a\u63d2\u5165\u6210\u529f\uff0c\u5426\u5219\u8fd4\u56de\u4e0d\u4e3a\u7a7a\u8868\u793a\u5df2\u7ecf\u6709\u8be5\u503c\uff0c\u63d2\u5165\u5931\u8d25 // map\u662f\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u50a8\u7684\uff0c\u800cset\u662f\u5355\u503c\u5b58\u50a8\uff0c\u4e0d\u9700\u8981value,\u56e0\u6b64\u7528\u4e00\u4e2a\u9759\u6001\u5e38\u91cfPRESENT\u5360\u4f4d return map . put ( e , PRESENT ) == null ; } put \u4e2d\u7684\u5185\u5bb9\u8be6\u89c1 HashMap \u6dfb\u52a0\u5143\u7d20\u539f\u7406\u3002","title":"3. add()\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#4_2","text":"","title":"4. \u603b\u7ed3"},{"location":"Java%E8%BF%9B%E9%98%B6/#5","text":"\u4f8b\u4e00\uff1a \u521b\u5efa\u5305\u542b name \u548c age \u5c5e\u6027\u7684\u7c7b\uff0c\u8981\u6c42 name \u548c age \u90fd\u76f8\u540c\u7684\u5bf9\u8c61\u63d2\u5165 HashSet \u65f6\u8ba4\u4e3a\u662f\u76f8\u540c\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public class Main { public static void main ( String [] args ) { HashSet < Person > set = new HashSet <> (); set . add ( new Person ( \"\u5f20\u4e09\" , 23 )); set . add ( new Person ( \"\u5f20\u4e09\" , 23 )); System . out . println ( \"set size = \" + set . size ()); // \u8f93\u51fa set size = 1 } } class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } // \u4e0b\u65b9\u4ee3\u7801\u53ef\u4ee5\u7531 idea \u4e2d\u7684 alt + insert \u81ea\u52a8\u751f\u6210 @Override public boolean equals ( Object o ) { if ( this == o ) return true ; if ( o == null || getClass () != o . getClass ()) return false ; Person person = ( Person ) o ; return age == person . age && Objects . equals ( name , person . name ); } @Override public int hashCode () { return Objects . hash ( name , age ); // name\u548cage\u5171\u540c\u51b3\u5b9a\u54c8\u5e0c\u503c } } \u4f8b\u4e8c\uff1a \u5df2\u7ecf\u91cd\u5199\u4e86 People \u7684 name \u548c id \u5c5e\u6027\u7684 hashCode() \u548c equals() \u65b9\u6cd5\uff0c\u5206\u6790\u4e0b\u9762\u7684\u8fc7\u7a0b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HashSet < People > people = new HashSet <> (); People kun = new People ( \"Kun\" , 1 ); People night = new People ( \"Night\" , 2 ); people . add ( kun ); // OK people . add ( night ); // OK night . setName ( \"Rachel\" ); // OK // \u8be6\u89c1\u540e\u6587hashMap\u7684remove\u6e90\u7801\u5206\u6790 // \u65b0\u4f20\u5165\u7684night\u7531\u4e8ehash\u503c\u53d8\u4e86\uff0c\u56e0\u6b64\u5b9a\u4f4d\u4e0d\u5230\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u5220\u9664\u5931\u8d25 people . remove ( night ); System . out . println ( people ); // [{'Rachel', 2}, {'Kun', 1}] People rachel = new People ( \"Rachel\" , 2 ); people . add ( rachel ); // OK\uff0c\u540c\u6837\u7684\u5b9a\u4f4d\u65b9\u5f0f\uff0c\u65b0\u7684\u4f4d\u7f6e\u4e3a\u7a7a\uff0c\u76f4\u63a5\u63d2\u5165 System . out . println ( people ); // [{'Rachel', 2}, {'Rachel', 2}, {'Kun', 1}] People night2 = new People ( \"Night\" , 2 ); // OK, hash\u5b9a\u4f4d\u5230night\u7684\u4f4d\u7f6e // \u4f46\u662f\u7531\u4e8enight\u7684\u540d\u5b57\u5df2\u7ecf\u6539\u6210\u4e86Rachel\uff0c\u56e0\u6b64\u8ba4\u4e3a\u5b83\u548cnight2\u4e0d\u4e00\u6837\uff0c\u76f4\u63a5\u63d2\u5165\u5728\u94fe\u5c3e people . add ( night2 ); System . out . println ( people ); // [{'Rachel', 2}, {'Rachel', 2}, {'Night', 2}, {'Kun', 1}] \u5185\u5b58\u7ed3\u6784\uff1a","title":"5. \u4f8b\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#linkedhashset","text":"\u5e95\u5c42\u662f LinkedHashMap \uff0c\u7531\u6570\u7ec4+\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\uff08\u867d\u7136\u6e90\u7801\u4e2d\u5b83\u7ee7\u627f\u7684\u662f HashSet \uff0c\u4f46\u662f\u6784\u9020\u5668\u3001\u6210\u5458\u65b9\u6cd5\u7b49\u4e2d\u8c03\u7528\u7684\u90fd\u662f LinkedHashMap \u7684\u6784\u9020\u5668\u3001\u6210\u5458\u65b9\u6cd5\u7b49\uff09\uff1b \u6bd4\u8d77 HashSet \uff0c\u6bcf\u4e2a\u8282\u70b9\u591a\u7ef4\u62a4\u4e86\u524d\u9a71\u548c\u540e\u7ee7\u4e24\u4e2a\u6307\u9488\uff0c\u4ece\u800c\u5b9e\u73b0\u6709\u5e8f\uff1b \u5143\u7d20\u4e0d\u53ef\u91cd\u590d\uff1b","title":"\uff08\u4e5d\uff09LinkedHashSet"},{"location":"Java%E8%BF%9B%E9%98%B6/#treeset","text":"\u5e95\u5c42\u662f TreeMap ; \u8bbe\u5b9a\u4e86\u6bd4\u8f83\u5668\u540e\u53ef\u4ee5\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\uff0c\u5426\u5219\u662f\u65e0\u5e8f\u7684\uff1b \u4e0d\u53ef\u91cd\u590d\uff1b \u6784\u9020\u65f6\u4e00\u5b9a\u8981\u5199\u6bd4\u8f83\u5668\uff0c\u6216\u8005\u4f20\u5165\u7684\u5bf9\u8c61\u672c\u8eab\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6bd4\u8f83\u5668 \uff08\u5982\uff1a String \uff09\uff0c\u56e0\u4e3a\u63d2\u5165\u5143\u7d20\u65f6\u9700\u8981\u5bf9\u5927\u5c0f\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u5e95\u5c42\u5c31\u4f1a\u81ea\u52a8\u4f7f\u7528\u5bf9\u8c61\u7684 Compatable \u63a5\u53e3\uff0c\u5982\u679c\u8be5\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0\u6bd4\u8f83\u63a5\u53e3\u5c31\u4f1a\u53d1\u751f\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0c\u8be6\u89c1 TreeMap \u6e90\u7801\u5206\u6790\u3002 \u6ce8\u610f\uff0c\u80fd\u5426\u6dfb\u52a0\u8fdb TreeSet \u53d6\u51b3\u4e8e\u4f60\u8bbe\u5b9a\u7684\u6bd4\u8f83\u5668\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 TreeSet < String > set = new TreeSet <> ( new Comparator < String > () { @Override public int compare ( String o1 , String o2 ) { return o1 . length () - o2 . length (); // \u6309\u957f\u5ea6\u6392\u5e8f } }); set . add ( \"Kun\" ); set . add ( \"Night\" ); set . add ( \"Rachel\" ); set . add ( \"Bob\" ); for ( String s : set ) { System . out . println ( s ); } /* \u8f93\u51fa\uff1a Kun Night Rachel */ \u6e90\u7801\u5982\u4e0b\u56fe\u6240\u793a\u3002\u65e0\u6cd5\u63d2\u5165 Bob \uff0c\u662f\u56e0\u4e3a\u5b83\u7684\u957f\u5ea6\u548c Kun \u4e00\u6837\uff0c\u6bd4\u8f83\u5668\u8fd4\u56de 0 0 \u65f6 key \u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u5bf9\u4e8e TreeSet \u6765\u8bf4\u76f8\u5f53\u4e8e\u76f4\u63a5\u8fd4\u56de\u4e86\uff0c\u56e0\u4e3a\u5b83\u7684 value \u53ea\u662f\u4e00\u4e2a\u5360\u4f4d\u7528\u7684\u7a7a Object \u3002 \u5176\u5b9e\u5b83\u7684 add() \u65b9\u6cd5\u5e95\u5c42\u8c03\u7528\u7684\u662f TreeMap \u7684 put() \u65b9\u6cd5\u3002\u5b8c\u6574\u6e90\u7801\u8be6\u89c1\u540e\u6587 TreeMap \u7684 put() \u65b9\u6cd5\u5206\u6790\u3002","title":"\uff08\u5341\uff09TreeSet"},{"location":"Java%E8%BF%9B%E9%98%B6/#map","text":"Map \u548c Collection \u5e76\u5217\uff0c\u5e76\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\uff0c\u533a\u522b\u662f Map \u4e2d\u4fdd\u5b58\u7684\u662f\u952e\u503c\u5bf9\uff1b Map \u7684 key \u548c value \u5c01\u88c5\u5728 Node \u7ed3\u70b9\uff1b key \u4e0d\u80fd\u91cd\u590d\uff0c value \u53ef\u4ee5\u91cd\u590d\uff0c key \u503c\u76f8\u540c\u7684\u5143\u7d20\u4f1a\u76f4\u63a5\u66ff\u6362\uff1b key \u548c value \u5747\u53ef\u4ee5\u4e3a\u7a7a\uff1b \u65e0\u5e8f\uff0c\u6307\u7684\u662f\u63d2\u5165\u548c\u53d6\u51fa\u7684\u987a\u5e8f\u4e0d\u4e00\u81f4\uff08\u6bcf\u6b21\u53d6\u51fa\u7684\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff09\u3002","title":"\uff08\u5341\u4e00\uff09Map"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_7","text":"1 2 3 4 5 6 map . put ( \"key\" , \"value\" ); map . remove ( key ); map . get ( key ); map . size (); map . containsKey ( key ); map . clear ();","title":"1. \u5e38\u7528\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_5","text":"(1) \u904d\u5386\u6240\u6709 key \uff0c\u5728\u53d6\u51fa\u5bf9\u5e94 value 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 HashMap < String , String > map = new HashMap <> (); map . put ( \"\u6606\" , \"\u706f\u53f0\u5fa1\u53f2\" ); map . put ( \"\u591c\" , \"\u6ce2\u9053\u4f7f\" ); map . put ( \"\u96f7\u514b\" , \"\u957f\u67aa\u5c06\" ); map . put ( \"\u5b89\u5fb7\u7f57\u897f\" , \"\u72e9\u730e\u8005\" ); // \u65b9\u6cd5 1 Set < String > keySet = map . keySet (); for ( String key : keySet ) { System . out . println ( key + \" - \" + map . get ( key )); } // \u65b9\u6cd5 2 Iterator < String > iterator = keySet . iterator (); while ( iterator . hasNext ()) { String key = iterator . next (); System . out . println ( key + \" - \" + map . get ( key )); } (2) \u904d\u5386\u6240\u6709 value 1 2 3 4 5 6 7 8 9 10 11 12 // \u65b9\u6cd5 1 Collection < String > values = map . values (); for ( String value : values ) { System . out . println ( value ); } // \u65b9\u6cd5 2 Iterator < String > it = values . iterator (); while ( it . hasNext ()) { String value = it . next (); System . out . println ( value ); } (3) \u904d\u5386 EntrySet 1 2 3 4 5 6 7 8 9 10 11 12 // \u65b9\u6cd5 1 Set < Map . Entry < String , String >> entries = map . entrySet (); for ( Map . Entry < String , String > e : entries ) { System . out . println ( e . getKey () + \" - \" + e . getValue ()); } // \u65b9\u6cd5 2 Iterator < Map . Entry < String , String >> it3 = entries . iterator (); while ( it3 . hasNext ()) { Map . Entry < String , String > entry = it3 . next (); System . out . println ( entry . getKey () + \" - \" + entry . getValue ()); }","title":"2. \u904d\u5386\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#hashmap","text":"\u5e95\u5c42\u662f \u6570\u7ec4+\u94fe\u8868+\u7ea2\u9ed1\u6811 \u5b9e\u73b0\u7684\uff1b \u6ca1\u6709\u5b9e\u73b0 sychronized \uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168\u3002 \uff08 ConcurrentHashMap \u80fd\u591f\u5904\u7406\u5e76\u53d1\u95ee\u9898\uff0c\u662f\u7ebf\u7a0b\u540c\u6b65\u7684\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\uff09","title":"\uff08\u5341\u4e8c\uff09HashMap"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_8","text":"\u7ed3\u70b9\uff1a \u8868\u4e2d\u7ed3\u70b9\u7531 Node \u4fdd\u5b58\uff08\u5b83\u5b9e\u73b0\u4e86 Entry \u63a5\u53e3\uff09\uff0c\u5305\u542b\u6709\u952e\u503c\u5bf9\u3001hash\u503c\u3001\u94fe\u8868\u7684 next \u6307\u9488\u3002 \u8282\u70b9\u4fdd\u5b58\u5728\u6570\u7ec4\u4e2d\u3002","title":"1. \u5bb9\u5668\u5185\u5143\u7d20\u7684\u6570\u636e\u7ed3\u6784"},{"location":"Java%E8%BF%9B%E9%98%B6/#2-hashmap","text":"\u6709\u4e00\u4e2a EntrySet \u96c6\u5408\uff0c\u4fdd\u5b58\u4e86\u6307\u5411\u5f53\u524d Entry \u8282\u70b9\u7684\u5f15\u7528\uff08 Entry \u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5b9e\u9645\u8fd0\u884c\u7c7b\u578b\u662f Node \uff09\uff0c\u91cc\u9762\u5305\u542b\u4e86\u6307\u5411 Entry \u7ed3\u70b9\u7684\u8fed\u4ee3\u5668\uff0c\u7528\u4e8e\u904d\u5386\u3002 \u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a KeySet \u548c Values \u5bb9\u5668\uff0c KeySet \u4fdd\u5b58\u4e86\u6307\u5411 Entry().key \u7684\u5f15\u7528\uff0c Values \u4fdd\u5b58\u4e86\u6307\u5411 Entry().value \u7684\u5f15\u7528\u3002 \u4ee5 KeySet \u4e3a\u4f8b\uff0c Values \u7c7b\u4f3c\uff1a","title":"2. \u904d\u5386HashMap"},{"location":"Java%E8%BF%9B%E9%98%B6/#3-hashmap","text":"","title":"3. HashMap\u5185\u90e8\u7ed3\u6784\u56fe"},{"location":"Java%E8%BF%9B%E9%98%B6/#4_3","text":"put() hash() \uff08\u5bf9 Key \u8fdb\u884c\u7684 hash \u5e76\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de\u7684 hashCode \uff09 \u6838\u5fc3\u4ee3\u7801\u5728 putVal() \u4e2d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 /** * Implements Map.put and related methods. * * @param hash hash for key * @param key the key * @param value the value to put * @param onlyIfAbsent if true, don't change existing value * @param evict if false, the table is in creation mode. * @return previous value, or null if none */ final V putVal ( int hash , K key , V value , boolean onlyIfAbsent , boolean evict ) { Node < K , V >[] tab ; Node < K , V > p ; int n , i ; if (( tab = table ) == null || ( n = tab . length ) == 0 ) // table\u662fHashMap\u4e2d\u7684\u4e00\u4e2aNode[]\u5c5e\u6027 n = ( tab = resize ()). length ; // \u521d\u59cb\u5316\u5bb9\u91cf\u4e3a16\uff0c\u4e34\u754c\u503c\u4e3a12\uff08\u56e0\u5b50\u4e3a0.75\uff09 if (( p = tab [ i = ( n - 1 ) & hash ] ) == null ) // (n - 1) & hash \u80fd\u4f7f\u4e0b\u6807\u503c\u4e0d\u8d85\u8fc7\u6570\u7ec4\u957f\u5ea6 tab [ i ] = newNode ( hash , key , value , null ); // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u653e\u653e\u5165\u6570\u7ec4\u4e2d else { Node < K , V > e ; K k ; // p \u5728\u524d\u9762\u4e00\u4e2a if \u4e2d\u6307\u5411\u4e86\u5f53\u524d\u53d1\u751f\u51b2\u7a81\u7684\u6570\u7ec4\u9879 // \u5982\u679c\u4ed6\u4eec\u7684hash\u503c\u548ckey\u503c\uff08\u5bf9\u8c61or\u57fa\u672c\u6570\u636e\u503c\uff09\u90fd\u4e00\u6837\uff0c\u5c31\u6267\u884c e = p; // \u56e0\u6b64\uff0c\u5bf9\u8c61\u9700\u8981\u76f8\u540c\u7684hash\u503c\u4e14\u91cd\u5199equals()\u65b9\u6cd5\u624d\u53ef\u8fdb\u5165\u8be5\u53e5, String \u5c31\u662f\u8fd9\u6837\u5b9e\u73b0\u7684 if ( p . hash == hash && (( k = p . key ) == key || ( key != null && key . equals ( k )))) e = p ; else if ( p instanceof TreeNode ) // \u5224\u65ad\u662f\u4e0d\u662f\u7ea2\u9ed1\u6811 e = (( TreeNode < K , V > ) p ). putTreeVal ( this , tab , hash , key , value ); // \u63d2\u5165\u7ea2\u9ed1\u6811 else { // \u662f\u94fe\u8868 for ( int binCount = 0 ; ; ++ binCount ) { if (( e = p . next ) == null ) { // \u5982\u679c\u540e\u9762\u8282\u70b9\u4e3a\u7a7a\uff0c\u5c31\u65b0\u5efa Node \u5e76\u63d2\u5165\u5230\u6700\u540e p . next = newNode ( hash , key , value , null ); if ( binCount >= TREEIFY_THRESHOLD - 1 ) // \u662f\u5426\u5df2\u7ecf\u8fbe\u52308\u4e2a\u8282\u70b9 // \u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811 // treeifyBin()\u4e2d\u8fd8\u8981\u6c42\u8868\u957f>=64\u624d\u80fd\u8f6c // \u5426\u5219\uff0c\u5c31\u7ed9\u8868\u6269\u5bb9(oldSize << 1)\uff0c\u5e76\u5bf9\u539f\u6765\u7684\u6570\u636e\u91cd\u65b0hash\u66f4\u6539\u5728\u8868\u4e2d\u7684\u4f4d\u7f6e treeifyBin ( tab , hash ); break ; } // \u548c\u524d\u9762\u7684\u6bd4\u8f83\u903b\u8f91\u4e00\u6837\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u76f8\u540c\u7684\u8282\u70b9\uff0c\u5c31\u76f4\u63a5\u8df3\u51fa if ( e . hash == hash && (( k = e . key ) == key || ( key != null && key . equals ( k )))) break ; p = e ; } } if ( e != null ) { // \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u4e00\u6837\u7684\u8282\u70b9e V oldValue = e . value ; if ( ! onlyIfAbsent || oldValue == null ) // onlyIfAbsent\u4f20\u5165\u4e3afalse e . value = value ; // \u66ff\u6362\u503c afterNodeAccess ( e ); return oldValue ; // \u8fd4\u56de\u51b2\u7a81\u8282\u70b9\u7684\u503c } } ++ modCount ; // \u8d85\u8fc7\u4e34\u754c\u503c\u5c31\u6269\u5bb9 // \u5e76\u4e14\u53ea\u8981\u52a0\u5165\u4e00\u4e2aNode\u5c31\u4f1asize++\uff0c\u4e0d\u7ba1Node\u52a0\u5728\u94fe\u5c3e\u8fd8\u662f\u8868\u9879\u4e2d\uff0c\u8d85\u8fc7\u95e8\u9650\u90fd\u4f1a\u6269\u5bb9 if ( ++ size > threshold ) resize (); afterNodeInsertion ( evict ); // \u8be5\u65b9\u6cd5\u5728HashMap\u4e2d\u4e3a\u7a7a\uff0c\u662f\u4e3a\u4e86\u8ba9\u5b83\u7684\u5b50\u7c7b\u53bb\u5b9e\u73b0\u5b83 return null ; }","title":"4. \u6dfb\u52a0\u5143\u7d20\u6e90\u7801"},{"location":"Java%E8%BF%9B%E9%98%B6/#5_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 /** * Implements Map.remove and related methods. * * @param hash hash for key * @param key the key * @param value the value to match if matchValue, else ignored * @param matchValue if true only remove if value is equal * @param movable if false do not move other nodes while removing * @return the node, or null if none */ final Node < K , V > removeNode ( int hash , Object key , Object value , boolean matchValue , boolean movable ) { Node < K , V >[] tab ; Node < K , V > p ; int n , index ; // \u540c\u6837\u7684\uff0c\u67e5\u8be2\u88ab\u5220\u9664\u5143\u7d20\u65f6\uff0c\u8981\u6bd4\u8f83hash\u503c\u548cequals\u4e24\u4e2a\u65b9\u9762\uff0c\u5168\u90e8\u76f8\u540c\u624d\u80fd\u5220 // \u6240\u4ee5\uff0c\u5982\u679c\u63d2\u5165\u7684\u5143\u7d20\u503c\u4e2d\u9014\u88ab\u4fee\u6539\u4e86\uff0c\u6709\u53ef\u80fd\u5220\u9664\u4e0d\u6210\u529f if (( tab = table ) != null && ( n = tab . length ) > 0 && ( p = tab [ index = ( n - 1 ) & hash ] ) != null ) { // \u901a\u8fc7\u4f20\u5165\u7684hash\u503c\u786e\u5b9a\u5143\u7d20\u4f4d\u7f6e Node < K , V > node = null , e ; K k ; V v ; if ( p . hash == hash && (( k = p . key ) == key || ( key != null && key . equals ( k )))) node = p ; else if (( e = p . next ) != null ) { if ( p instanceof TreeNode ) node = (( TreeNode < K , V > ) p ). getTreeNode ( hash , key ); else { do { // \u904d\u5386\u94fe\u8868 if ( e . hash == hash && (( k = e . key ) == key || ( key != null && key . equals ( k )))) { node = e ; // node\u8bb0\u5f55\u5f53\u524d\u8981\u5220\u7684\u8282\u70b9 break ; // break\u7684\u65f6\u5019p\u6307\u5411node\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9 } p = e ; } while (( e = e . next ) != null ); } } // matchValue\u4f20\u5165\u4e3afalse if ( node != null && ( ! matchValue || ( v = node . value ) == value || ( value != null && value . equals ( v )))) { if ( node instanceof TreeNode ) // \u6811\u4e0a\u7684\u8282\u70b9 (( TreeNode < K , V > ) node ). removeTreeNode ( this , tab , movable ); else if ( node == p ) // \u8282\u70b9\u5728\u8868\u4e2d\uff0c\u4e5f\u5c31\u662f\u94fe\u9996 tab [ index ] = node . next ; // \u88ab\u540e\u4e00\u4e2a\u8282\u70b9\u8986\u76d6 else // \u8282\u70b9\u5728\u94fe\u8868\u4e0a p . next = node . next ; // p\u662fnode\u7684\u524d\u9a71\u8282\u70b9\uff0cp.next=node.next\u76f8\u5f53\u4e8e\u5220\u6389\u4e86node ++ modCount ; -- size ; afterNodeRemoval ( node ); // \u8be5\u65b9\u6cd5\u4e3a\u7a7a\uff0c\u4e3a\u5b50\u7c7b\u7559\u4e0b\u7684\u540e\u7eed\u64cd\u4f5c return node ; } } return null ; }","title":"5. \u5220\u9664\u5143\u7d20\u6e90\u7801"},{"location":"Java%E8%BF%9B%E9%98%B6/#6","text":"","title":"6. \u603b\u7ed3"},{"location":"Java%E8%BF%9B%E9%98%B6/#linkedhashmap","text":"","title":"\uff08\u5341\u4e09\uff09LinkedHashMap"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_9","text":"\u8282\u70b9\uff1a \u8868\u4e2d\u5b58\u653e\u4e86 head \u548c tail \u6307\u9488\u6765\u6307\u5411\u8d77\u59cb\u548c\u7ec8\u6b62\u8282\u70b9\uff1b \u8868\u5185\u7ed3\u70b9\u7531 Entry \u4fdd\u5b58\uff0c\u5b83\u7ee7\u627f\u81ea HashMap \u7684 Node \uff0c\u53ea\u662f\u591a\u4e86\u524d\u9a71\u548c\u540e\u7ee7\u4e24\u4e2a\u6307\u9488\u3002 \u6dfb\u52a0\u5143\u7d20\uff1a \u8d70\u7684\u662f\u7236\u7c7b\u7684 add() \uff0c\u56e0\u6b64\u6700\u7ec8\u8c03\u7528\u7684\u8fd8\u662f HashMap \u7684 putVal() \u65b9\u6cd5\u3002","title":"1. \u6e90\u7801\u5206\u6790"},{"location":"Java%E8%BF%9B%E9%98%B6/#treemap","text":"\u6784\u9020\u65f6\u4e00\u5b9a\u8981\u5199\u6bd4\u8f83\u5668\uff0c\u6216\u8005\u4f20\u5165\u7684\u5bf9\u8c61\u672c\u8eab\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6bd4\u8f83\u5668 \uff08\u5982\uff1a String \uff09\uff0c\u56e0\u4e3a\u63d2\u5165\u5143\u7d20\u65f6\u9700\u8981\u5bf9\u5927\u5c0f\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u6ca1\u6709\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u5e95\u5c42\u5c31\u4f1a\u81ea\u52a8\u4f7f\u7528\u5bf9\u8c61\u7684 Compatable \u63a5\u53e3\uff0c\u5982\u679c\u8be5\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0\u6bd4\u8f83\u63a5\u53e3\u5c31\u4f1a\u53d1\u751f\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\uff0c\u8be6\u89c1\u4e0b\u65b9\u6e90\u7801\u5206\u6790\u3002","title":"\uff08\u5341\u56db\uff09TreeMap"},{"location":"Java%E8%BF%9B%E9%98%B6/#1-put","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 /** * Associates the specified value with the specified key in this map. * If the map previously contained a mapping for the key, the old * value is replaced. * * @param key key with which the specified value is to be associated * @param value value to be associated with the specified key * * @return the previous value associated with {@code key}, or * {@code null} if there was no mapping for {@code key}. * (A {@code null} return can also indicate that the map * previously associated {@code null} with {@code key}.) * @throws ClassCastException if the specified key cannot be compared * with the keys currently in the map * @throws NullPointerException if the specified key is null * and this map uses natural ordering, or its comparator * does not permit null keys */ public V put ( K key , V value ) { Entry < K , V > t = root ; if ( t == null ) { compare ( key , key ); // compare\u4e2d\u6709\u5224\u7a7a\u64cd\u4f5c\uff0c\u5982\u679c\u4e3a\u7a7a\u4f1a\u629b\u5f02\u5e38 root = new Entry <> ( key , value , null ); size = 1 ; modCount ++ ; return null ; } int cmp ; Entry < K , V > parent ; // split comparator and comparable paths Comparator <? super K > cpr = comparator ; if ( cpr != null ) { do { parent = t ; cmp = cpr . compare ( key , t . key ); // \u4f20\u5165\u7684\u6bd4\u8f83\u5668 if ( cmp < 0 ) t = t . left ; else if ( cmp > 0 ) t = t . right ; else return t . setValue ( value ); // \u6bd4\u8f83\u7ed3\u679c\u76f8\u7b49\u65f6\u4e0d\u4f1a\u6539\u53d8key\u503c\uff0c\u76f4\u63a5\u66ff\u6362value\u503c } while ( t != null ); } else { if ( key == null ) throw new NullPointerException (); @SuppressWarnings ( \"unchecked\" ) Comparable <? super K > k = ( Comparable <? super K > ) key ; // \u7528key\u81ea\u5e26\u7684\u6bd4\u8f83\u5668\uff0c\u6240\u4ee5\u5982\u679ckey\u6ca1\u6709\u5b9e\u73b0\u6bd4\u8f83\u5668\u63a5\u53e3\u7684\u8bdd\uff0c\u5f3a\u8f6c\u5c31\u4f1a\u5931\u8d25\uff0c\u62a5\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38 do { parent = t ; cmp = k . compareTo ( t . key ); if ( cmp < 0 ) t = t . left ; else if ( cmp > 0 ) t = t . right ; else return t . setValue ( value ); } while ( t != null ); } Entry < K , V > e = new Entry <> ( key , value , parent ); if ( cmp < 0 ) parent . left = e ; else parent . right = e ; fixAfterInsertion ( e ); size ++ ; modCount ++ ; return null ; }","title":"1. put()\u6e90\u7801\u5206\u6790"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 TreeMap < String , String > map = new TreeMap <> ( new Comparator < String > () { @Override public int compare ( String o1 , String o2 ) { return o1 . length () - o2 . length (); } }); map . put ( \"Kun\" , \"15\" ); map . put ( \"Night\" , \"15\" ); map . put ( \"Rachel\" , \"14\" ); map . put ( \"Bob\" , \"20\" ); Set < Map . Entry < String , String >> entries = map . entrySet (); for ( Map . Entry < String , String > entry : entries ) { System . out . println ( entry . getKey () + \" - \" + entry . getValue ()); } /* \u8f93\u51fa\uff1a Kun - 20 Night - 15 Rachel - 14 */ \u6839\u636e\u6e90\u7801\u53ef\u77e5\uff0c\u4f20\u5165\u7684\u6bd4\u8f83\u5668\u5224\u65ad Bub \u548c Kun \u957f\u5ea6\u76f8\u540c\uff0c\u56e0\u6b64\u5c06 Kun \u7684 value \u6539\u4e3a\u4e86 20 \uff0c\u800c\u540e\u8fd4\u56de\u3002","title":"2. \u4f8b\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#hashtable","text":"\u5b58\u653e\u952e\u503c\u5bf9\uff0c\u90fd\u4e0d\u80fd\u4e3a null \uff1b \u7ee7\u627f Dictionary \uff0c\u5b9e\u73b0 Map \u63a5\u53e3\uff1b \u4f7f\u7528\u65b9\u6cd5\u4e0e HashMap \u57fa\u672c\u4e00\u81f4\uff1b \u6709 synchronized \u5173\u952e\u5b57\uff0c\u7ebf\u7a0b\u5b89\u5168\uff1b key \u503c\u76f8\u540c\u7684\u5143\u7d20\u4f1a\u76f4\u63a5\u66ff\u6362\uff1b \u9ed8\u8ba4\u521d\u59cb\u5316 table \u5927\u5c0f\u4e3a 11 11 \uff0c\u95e8\u9650\u503c\u4e3a 0.75 0.75 \uff1b \u5230\u8fbe\u95e8\u9650\u503c\u65f6\uff0c\u4ee5\u539f\u6765\u7684\u5927\u5c0f 2 2 \u500d +1 +1 \u7684\u65b9\u5f0f\u6269\u5bb9\u3002","title":"\uff08\u5341\u4e94\uff09Hashtable"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_10","text":"","title":"1. \u6269\u5bb9\u673a\u5236\u6e90\u7801"},{"location":"Java%E8%BF%9B%E9%98%B6/#properties","text":"\u7ee7\u627f\u81ea Hashtable \uff0c\u5e76\u5b9e\u73b0\u4e86 map \u63a5\u53e3\uff1b \u952e\u503c\u5bf9\u7684\u65b9\u5f0f\u4fdd\u5b58\u6570\u636e\uff0c\u65e0\u5e8f\uff0c\u4e0d\u80fd\u6709\u7a7a\u503c\uff0c\u4e0e Hashtable \u7c7b\u4f3c\uff1b \u82e5\u6709\u76f8\u540c\u7684 key \u503c\uff0c\u76f4\u63a5\u66ff\u6362\uff1b \u53ef\u4ee5\u7528\u4e8e\u4ece xxx.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u8f7d\u6570\u636e\u5230 Properties \u7c7b\u5bf9\u8c61\u4e2d\u3002 \u5e38\u7528\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 // \u589e properties . put ( key , value ); // \u5220 properties . remove ( key ); // \u6539 properties . put ( \u76f8\u540ckey , value ); // \u67e5 properties . get ( key ); properties . getProperty ( key ); \u7528\u6cd5\u8be6\u89c1 \u7b2c\u5341\u56db\u7ae0 IO\u6d41 -\uff08\u4e09\uff09\u8282\u70b9\u6d41\u548c\u5904\u7406\u6d41 - 6. Properties","title":"\uff08\u5341\u516d\uff09Properties"},{"location":"Java%E8%BF%9B%E9%98%B6/#_26","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 Vector < Integer > vec = new Vector <> (); vec . add ( 1 ); vec . add ( 2 ); vec . add ( 3 ); vec . add ( 4 ); vec . add ( 5 ); vec . add ( 6 ); // \u9519\u8bef\u5199\u6cd5\uff1a for ( Integer num : vec ){ if ( num > 2 ) vec . remove ( num ); // \u4f1a\u62a5\u9519ConcurrentModificationException\u5f02\u5e38 } // \u6b63\u786e\u5199\u6cd51\uff1a Iterator it = vec . iterator (); while ( it . hasNext ()){ Integer num = it . next (); if ( num > 2 ) it . remove (); // \u4f7f\u7528\u8fed\u4ee3\u5668\u7684remove()\u65b9\u6cd5 } // \u6b63\u786e\u5199\u6cd52\uff1a for ( int i = 0 ; i < vec . size (); i ++ ){ Integer num = vec . get ( i ); if ( num > 2 ){ vec . remove ( num ); // \u5220\u9664\u540e\uff0c\u5bb9\u5668\u540e\u9762\u7684\u5143\u7d20\u4f1a\u81ea\u52a8\u524d\u79fb i -- ; // \u56e0\u6b64\u6307\u9488\u9700\u8981\u5f80\u524d\u4e00\u4f4d } }","title":"\uff08\u5341\u4e03\uff09\u5bb9\u5668\u7684\u8fb9\u904d\u5386\u8fb9\u5220\u9664"},{"location":"Java%E8%BF%9B%E9%98%B6/#_27","text":"","title":"\u5341\u3001\u6cdb\u578b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_28","text":"\u76f4\u63a5\u63d2\u5165\u96c6\u5408\u5bf9\u5143\u7d20\u7c7b\u578b\u6ca1\u6709\u7ea6\u675f\uff0c\u5411\u4e0b\u8f6c\u578b\u65f6\u4e0d\u5b89\u5168\uff1b \u904d\u5386\u65f6\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u5411\u4e0b\u8f6c\u578b\uff0c\u6548\u7387\u4f4e\u3002","title":"\uff08\u4e00\uff09\u6cdb\u578b\u4f18\u70b9"},{"location":"Java%E8%BF%9B%E9%98%B6/#_29","text":"\u6cdb\u578b\u4e0d\u80fd\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1b \u4f20\u5165\u7684\u5b9e\u9645\u7c7b\u578b\u53ef\u4ee5\u662f\u6cdb\u578b\u7684\u5b50\u7c7b\u7c7b\u578b\uff1b \u7b80\u5199\uff1a List<String> list = new ArrayList<>(); \u5982\u679c\u521b\u5efa\u5bf9\u8c61/\u5bb9\u5668\u65f6\u4e0d\u6307\u5b9a\u6cdb\u578b\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a Object \u7c7b\u578b\uff1b \u4e0d\u80fd\u76f4\u63a5\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u7f16\u8bd1\u65f6\u65e0\u6cd5\u786e\u5b9a\u7c7b\u578b\uff1b static \u548c\u6cdb\u578b\u4e0d\u5171\u5b58\uff0c\u56e0\u4e3a\u9759\u6001\u5c5e\u6027/\u65b9\u6cd5\u5728\u7c7b\u52a0\u8f7d\u65f6\u786e\u5b9a\uff0c\u800c\u6cdb\u578b\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\uff1b \u5b9e\u73b0\u6cdb\u578b\u65f6\u4e0d\u6307\u5b9a\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a Object \u7c7b\u578b\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u8fd9\u4e48\u5199\uff1b \u6cdb\u578b\u4e0d\u80fd\u7ee7\u627f\uff1a List<Object> list= new ArrayList<String>(); \u9519\u8bef\u5199\u6cd5\u3002","title":"\uff08\u4e8c\uff09\u4f7f\u7528\u7ec6\u8282"},{"location":"Java%E8%BF%9B%E9%98%B6/#_30","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // \u6cdb\u578b\u7c7b class Animal < T , R > { public void run ( R r ){ // \u4e0d\u662f\u6cdb\u578b\u65b9\u6cd5\uff0c\u662f\u4f7f\u7528\u4e86\u6cdb\u578b // ... } } Animal < String , Integer > animal = new Animal <> (); // \u6cdb\u578b\u63a5\u53e3 interface USB < E , R > { E charge ( R r ); } class Computer inmplements USB < Integer , String > { } // \u6cdb\u578b\u65b9\u6cd5 class Person { public < T , E > void eat ( T t , E e ){ } } Person p = new Person (); p . eat ( \"\u4e09\" , 100 ); // \u7f16\u8bd1\u5668\u81ea\u52a8\u5224\u65ad\u7c7b\u578b ? \u7b26\u53f7 1 2 3 4 5 6 7 8 9 10 11 public void method ( List <?> ){ // \u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b } public void method ( List <? extend AA > ){ // \u53ea\u80fd\u662fAA\u6216AA\u7684\u5b50\u7c7b } public void method ( List <? super AA > ){ // \u53ea\u80fd\u662fAA\u6216AA\u7684\u7236\u7c7b }","title":"\uff08\u4e09\uff09 \u4f7f\u7528\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#java","text":"","title":"\u5341\u4e00\u3001Java\u7ed8\u56fe"},{"location":"Java%E8%BF%9B%E9%98%B6/#_31","text":"\u6837\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public class MyFrame extends JFrame { private MyPanel mp ; public MyFrame () { mp = new MyPanel (); this . add ( mp ); this . setSize ( 400 , 300 ); this . setVisible ( true ); // \u70b9\u5173\u95ed\u6309\u94ae\u65f6\uff0c\u7a0b\u5e8f\u540c\u65f6\u9000\u51fa(\u4e0d\u52a0\u8fd9\u884c\u4ee3\u7801\uff0c\u5173\u95ed\u7ed8\u56fe\u7a97\u53e3\u540e\u7a0b\u5e8f\u8fd8\u5728\u8fd0\u884c) this . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ); } public static void main ( String [] args ) { new MyFrame (); } } class MyPanel extends JPanel { @Override public void paint ( Graphics g ) { super . paint ( g ); g . drawOval ( 10 , 10 , 100 , 100 ); // (10,10)\u662f\u5176\u5916\u63a5\u77e9\u5f62\u5de6\u4e0a\u89d2\u70b9\u7684\u4f4d\u7f6e } } paint()\u65b9\u6cd5\u88ab\u8c03\u7528\u7684\u65f6\u673a\uff1a \u9996\u6b21\u521b\u5efa\u65f6\uff1b \u7a97\u53e3\u5927\u5c0f\u53d8\u5316\u65f6\uff1b \u7a97\u53e3\u6700\u5c0f\u5316\u540e\u53c8\u91cd\u65b0\u6253\u5f00\u65f6\uff1b repaint() \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\u3002 \u5176\u4ed6\u56fe\u5f62\u7ed8\u5236\uff1a 1 2 3 4 5 6 7 8 // \u7ed8\u5236\u56fe\u7247 Image image = Toolkit . getDefaultToolkit (). getImage ( MyPanel . class . getResource ( \"/kun.png\" )); // MyPanel\u8868\u793a\u4ece\u8be5\u7c7b\u6240\u5728\u7684\u9879\u76ee\u6839\u90e8\u5f00\u59cb\u67e5\u627e\u6587\u4ef6 g . drawImage ( image , 150 , 150 , 50 , 50 , this ); // \u7ed8\u5236\u6587\u5b57 g . setColor ( Color . red ); g . setFont ( new Font ( \"\u96b6\u4e66\" , Font . BOLD , 38 )); g . drawString ( \"Hello World\" , 100 , 100 ); // \u6ce8\u610f\uff0c(100,100)\u6307\u7684\u662f\u5b57\u4f53\u5de6\u4e0b\u89d2\u4f4d\u7f6e","title":"\uff08\u4e00\uff09\u57fa\u672c\u8bed\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#_32","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 public class MoveBall extends JFrame { public MoveBall () { Ball ball = new Ball ( 10 , 10 ); this . add ( ball ); this . setSize ( 400 , 300 ); this . setDefaultCloseOperation ( JFrame . EXIT_ON_CLOSE ); this . addKeyListener ( ball ); // \u522b\u5fd8\u4e86\u6dfb\u52a0\u76d1\u542c\u5668 this . setVisible ( true ); } public static void main ( String [] args ) { new MoveBall (); } } class Ball extends JPanel implements KeyListener { // \u5b9e\u73b0\u6309\u952e\u76d1\u542c\u63a5\u53e3 int x ; int y ; public Ball ( int x , int y ) { this . x = x ; this . y = y ; } @Override public void paint ( Graphics g ) { super . paint ( g ); g . fillOval ( x , y , 50 , 50 ); } @Override public void keyTyped ( KeyEvent e ) { } @Override public void keyPressed ( KeyEvent e ) { System . out . println ( e . getKeyCode () + \"\u952e\u88ab\u6309\u4e0b...\" ); switch ( e . getKeyCode ()) { case KeyEvent . VK_UP : System . out . println ( \"\u5411\u4e0a\" ); y -- ; break ; case KeyEvent . VK_DOWN : System . out . println ( \"\u5411\u4e0b\" ); y ++ ; break ; case KeyEvent . VK_LEFT : System . out . println ( \"\u5411\u5de6\" ); x -- ; break ; case KeyEvent . VK_RIGHT : System . out . println ( \"\u5411\u53f3\" ); x ++ ; break ; } this . repaint (); } @Override public void keyReleased ( KeyEvent e ) { } }","title":"\uff08\u4e8c\uff09\u952e\u76d8\u4e8b\u4ef6\u76d1\u542c"},{"location":"Java%E8%BF%9B%E9%98%B6/#_33","text":"","title":"\u5341\u4e8c\u3001\u7ebf\u7a0b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_34","text":"\u5e76\u53d1\uff1a \u540c\u4e00\u65f6\u95f4\u6bb5\u5185\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff0c\u5b83\u4eec\u4e0d\u65ad\u5207\u6362\u8fdb\u884c\uff08\u5355\u6838\u6216\u591a\u6838 CPU \u6267\u884c\u591a\u4efb\u52a1\uff09\uff1b \u5e76\u884c\uff1a \u540c\u4e00\u65f6\u523b\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u591a\u6838 CPU \u6267\u884c\u591a\u4efb\u52a1\uff09\u3002 \u83b7\u53d6\u5f53\u524d\u7535\u8111\u7684 CPU \u6570\u91cf\uff1a 1 2 Runtime runtime = Runtime . getRuntime (); int num = runtime . availableProcessors (); // CPU\u6570\u91cf \u83b7\u53d6\u7ebf\u7a0b\u540d\uff1a 1 Thread . currentThread (). getName (); \u5de5\u5177\uff1a jconsole \u5de5\u5177\uff0c\u53ef\u89c6\u5316\u7ebf\u7a0b\u6267\u884c\u60c5\u51b5\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u4e3b\u7ebf\u7a0b\u5373\u4f7f\u8fd0\u884c\u7ed3\u675f\u4e86\uff0c\u82e5\u8fd8\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u8fd0\u884c\uff0c\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u7ed3\u675f\u3002","title":"\uff08\u4e00\uff09\u5e76\u53d1\u4e0e\u5e76\u884c"},{"location":"Java%E8%BF%9B%E9%98%B6/#run","text":"\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528run()\u65b9\u6cd5\uff0c\u800c\u5b9e\u4f7f\u7528start()\u542f\u52a8\uff1f \u56e0\u4e3a\u76f4\u63a5\u8c03\u7528 run() \u65b9\u6cd5\uff0c\u76f8\u5f53\u4e8e\u542f\u52a8\u7684\u662f main \u65b9\u6cd5\u7684 run() \uff0c\u800c\u4e0d\u662f\u5bf9\u5e94\u5b50\u7ebf\u7a0b\u7684\u3002 \u6e90\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public synchronized void start () { /** * This method is not invoked for the main method thread or \"system\" * group threads created/set up by the VM. Any new functionality added * to this method in the future may have to also be added to the VM. * * A zero status value corresponds to state \"NEW\". */ if ( threadStatus != 0 ) throw new IllegalThreadStateException (); /* Notify the group that this thread is about to be started * so that it can be added to the group's list of threads * and the group's unstarted count can be decremented. */ group . add ( this ); boolean started = false ; try { start0 (); // \u6838\u5fc3\u4ee3\u7801\u5728start0()\uff0c\u5b83\u662f\u4e00\u4e2a\u672c\u5730native\u65b9\u6cd5\uff0c\u7531JVM\u8c03\u7528 started = true ; } finally { try { if ( ! started ) { group . threadStartFailed ( this ); } } catch ( Throwable ignore ) { /* do nothing. If start0 threw a Throwable then it will be passed up the call stack */ } } } start0() \u662f\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7684\u5173\u952e\uff0c\u5e95\u5c42\u662f C/C++ \u5b9e\u73b0\u7684\uff0c\u7531 JVM \u8c03\u7528\u3002","title":"\uff08\u4e8c\uff09run()\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#_35","text":"","title":"\uff08\u4e09\uff09\u7ebf\u7a0b\u5b9e\u73b0\u7684\u65b9\u5f0f"},{"location":"Java%E8%BF%9B%E9%98%B6/#thread","text":"1 2 3 4 5 6 class MyThread extends Thread { @Override public void run () { // ... } }","title":"\u65b9\u5f0f\u4e00\u3001\u7ee7\u627fThread"},{"location":"Java%E8%BF%9B%E9%98%B6/#runnable","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public class Hi { public static void main ( String [] args ) { SayHi hi = new SayHi (); Thread thread = new Thread ( hi ); // \u4f7f\u7528\u4e86\u4ee3\u7406\u6a21\u5f0f thread . start (); } } class SayHi implements Runnable { private int num = 0 ; @Override public void run () { while ( true ) { System . out . println ( \"\u54aa\u5514~ \" + num ++ + Thread . currentThread (). getName ()); try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } if ( num == 80 ) break ; } } } \u533a\u522b\uff1a \u4e24\u79cd\u65b9\u6cd5\u5728\u529f\u80fd\u4e0a\u5b8c\u5168\u4e00\u6837\uff0c\u4f46\u662f \u5b9e\u73b0 Runnable \u63a5\u53e3\u7684\u65b9\u5f0f\u80fd\u591f\u590d\u7528\u529f\u80fd\uff0c\u8ba9\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90 \uff0c\u5e76\u4e14\u907f\u514d\u4e86\u5355\u7ee7\u627f\u7684\u9650\u5236\u3002 \u95ee\u9898\uff1a \u591a\u4e2a\u7ebf\u7a0b\u5171\u540c\u6267\u884c\u64cd\u4f5c\u67d0\u4e2a\u8d44\u6e90\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u7ebf\u7a0b\u7684\u540c\u6b65\u6216\u4e92\u65a5\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6cd5\u8be6\u89c1\u7b2c\u5341\u4e09\u7ae0 sychrnized \u3002","title":"\u65b9\u5f0f\u4e8c\u3001\u5b9e\u73b0Runnable\u63a5\u53e3"},{"location":"Java%E8%BF%9B%E9%98%B6/#runnable_1","text":"\u6838\u5fc3\u5c31\u662f\uff1a\u4ee3\u7406\u7c7b\u65e2\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u53c8\u901a\u8fc7\u6784\u9020\u5668\u4f20\u5165\u4e86\u63a5\u53e3\uff0c\u5728\u5176\u65b9\u6cd5\u4e2d\u5b9e\u9645\u8c03\u7528\u7684\u662f\u522b\u4eba\u7684\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 public class Index { public static void main ( String [] args ) { MyCat myCat = new MyCat (); MyThread myThread = new MyThread ( myCat ); myThread . start (); } } /** * \u5b50\u7ebf\u7a0bMyCat\uff0c\u5b9e\u73b0\u4e86MyRunnable\u63a5\u53e3 */ class MyCat implements MyRunnable { @Override public void run () { System . out . println ( \"meo\u2014\u2014 meo\u2014\u2014\" ); } } /** * \u63a5\u53e3 */ interface MyRunnable { void run (); } /** * \u65e2\u5b9e\u73b0\u4e86MyRunnable\u63a5\u53e3\uff0c\u53c8\u901a\u8fc7\u6784\u9020\u5668\u4f20\u5165\u4e86MyRunnable\u5bf9\u8c61 * \u867d\u7136\u4f7f\u7528\u7684\u662fMyThread\u7684start\u65b9\u6cd5\uff0c\u4f46\u662f\u5b9e\u9645\u8c03\u7528\u7684\u662fMyRunnable\u7684run()\u65b9\u6cd5 * \uff08\u6ce8\u610f\uff0c\u5b9e\u9645\u7ebf\u7a0b\u7684start()\u6e90\u7801\u4e0d\u662f\u8fd9\u6837\u5199\u7684\uff0c\u8fd9\u91cc\u53ea\u662f\u4fbf\u4e8e\u5c55\u793a\u4ee3\u7406\u6a21\u5f0f\uff09 */ class MyThread implements MyRunnable { private MyRunnable runnable = null ; @Override public void run () { if ( runnable != null ) runnable . run (); } public MyThread ( MyRunnable runnable ) { this . runnable = runnable ; } public void start (){ start0 (); } public void start0 (){ run (); } }","title":"\uff08\u56db\uff09 \u4ee5Runnable\u4e3a\u4f8b\u7684\u4ee3\u7406\u6a21\u5f0f"},{"location":"Java%E8%BF%9B%E9%98%B6/#_36","text":"\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf flag \u63a7\u5236 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 public class Index { public static void main ( String [] args ) throws InterruptedException { ThreadA threadA = new ThreadA (); threadA . start (); // \u7b49\u5f85\u4e94\u79d2\u5173\u95ed\u7ebf\u7a0bA Thread . sleep ( 5000 ); threadA . setFlag ( false ); } } class ThreadA extends Thread { private boolean flag = true ; private int num = 0 ; @Override public void run () { super . run (); while ( flag ) { num ++ ; System . out . println ( Thread . currentThread (). getName () + \", num = \" + num ); try { Thread . sleep ( 50 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } } } public void setFlag ( boolean flag ) { this . flag = flag ; } }","title":"\uff08\u4e94\uff09\u7ebf\u7a0b\u7ec8\u6b62"},{"location":"Java%E8%BF%9B%E9%98%B6/#_37","text":"1 2 3 4 5 6 7 8 9 10 11 12 Thread . currentThread (). setName () // \u8bbe\u7f6e\u7ebf\u7a0b\u540d\u79f0 Thread . currentThread (). getName () // \u8bbe\u83b7\u53d6\u7ebf\u7a0b\u540d\u79f0 thread . start () // \u5f00\u59cb\u6267\u884c\u7ebf\u7a0b thread . interrupt () // \u4e2d\u65ad\u7ebf\u7a0b\uff0c\u4e00\u822c\u7528\u4e8e\u5524\u9192\u6b63\u5728\u4f11\u7720\u7684\u7ebf\u7a0b Thread . sleep () // \u4f7f\u5f53\u524d\u7ebf\u7a0b\u4f11\u7720 // Thread\u67093\u4e2a\u4f18\u5148\u7ea7\u5e38\u91cf\uff0c\u503c\u5206\u522b\u4e3a1\u30015\u300110 thread . setPriority ( Thread . MIN_PRIORITY ) // \u66f4\u6539\u7ebf\u7a0b\u4f18\u5148\u7ea7\u4e3a1 thread . getPriority () // \u83b7\u53d6\u7ebf\u7a0b\u4f18\u5148\u7ea7 Thread . yield () // \u7ebf\u7a0b\u7684\u793c\u8ba9\uff0c\u8ba9\u5176\u4ed6\u7ebf\u7a0b\u5148\u884c\uff0c\u4f46\u662f\u4e0d\u4e00\u5b9a\u6210\u529f threa . join () // \u7ebf\u7a0b\u7684\u63d2\u961f join()\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class TheadJoin { public static void main ( String [] args ) throws InterruptedException { Thread1 thread1 = new Thread1 (); thread1 . start (); for ( int i = 0 ; i < 20 ; i ++ ) { Thread . sleep ( 500 ); System . out . println ( \"\u4e3b\u7ebf\u7a0b\" + Thread . currentThread (). getName () + \"\u5403\u4e86\" + i + \"\u4e2a\u5305\u5b50\" ); if ( i == 5 ) { System . out . println ( \"==============\u4e3b\u7ebf\u7a0b\u8ba9\u5b50\u7ebf\u7a0b\u5148\u5403\" ); thread1 . join (); // \u4e3b\u7ebf\u7a0b\u4e2d\u65ad\uff0c\u76f4\u5230\u5b50\u7ebf\u7a0b1\u8fd0\u884c\u5b8c\u518d\u7ee7\u7eed System . out . println ( \"==============\u4e3b\u7ebf\u7a0b\u63a5\u7740\u5403\" ); } } } } class Thread1 extends Thread { @Override public void run () { super . run (); for ( int i = 0 ; i < 20 ; i ++ ) { try { Thread . sleep ( 500 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } System . out . println ( \"\u7ebf\u7a0b\" + Thread . currentThread (). getName () + \"\u5403\u4e86\" + i + \"\u4e2a\u5305\u5b50\" ); } } }","title":"\uff08\u516d\uff09\u7ebf\u7a0b\u5e38\u7528\u65b9\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#_38","text":"\u7528\u6237\u7ebf\u7a0b\uff1a \u53c8\u540d\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u5f53\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\u6216\u88ab\u901a\u77e5\u7684\u65f6\u5019\u7ed3\u675f\u7ebf\u7a0b\u3002 \u5b88\u62a4\u7ebf\u7a0b\uff1a \u4e3a\u5de5\u4f5c\u7ebf\u7a0b\u670d\u52a1\uff0c\u6240\u6709\u7528\u6237\u7ebf\u7a0b\u7ed3\u675f\u540e\uff0c\u5b88\u62a4\u7ebf\u7a0b\u968f\u4e4b\u7ed3\u675f\u3002 \u6700\u5178\u578b\u7684\u5b88\u62a4\u7ebf\u7a0b\u5982\uff1a\u5783\u573e\u56de\u6536\u673a\u5236\u3002 \u5236\u4f5c\u5b88\u62a4\u7ebf\u7a0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class Index { public static void main ( String [] args ) throws InterruptedException { DaemonThread daemonThread = new DaemonThread (); daemonThread . setDaemon ( true ); // \u8bbe\u7f6edaemonThread\u4e3a\u5b88\u62a4\u7ebf\u7a0b daemonThread . start (); for ( int i = 0 ; i < 5 ; i ++ ) { System . out . println ( \"MainThread , i = \" + ( i + 1 )); Thread . sleep ( 500 ); } } } /** * \u5b88\u62a4\u7ebf\u7a0b */ class DaemonThread extends Thread { @Override public void run () { super . run (); for ( int i = 0 ; i < 10 ; i ++ ) { System . out . println ( Thread . currentThread (). getName () + \",i=\" + ( i + 1 )); try { Thread . sleep ( 500 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } } } }","title":"\uff08\u4e03\uff09\u7528\u6237\u7ebf\u7a0b\u4e0e\u5b88\u62a4\u7ebf\u7a0b"},{"location":"Java%E8%BF%9B%E9%98%B6/#_39","text":"\u5b98\u65b9\u6587\u6863\u4e2d\u5206\u4e3a\u516d\u79cd\u72b6\u6001\uff0c\u4e0d\u8fc7 Runnable \u72b6\u6001\u53c8\u53ef\u4ee5\u5212\u5206\u4e3a Ready \u548c Running \u72b6\u6001\u3002 \u67e5\u770b\u7ebf\u7a0b\u72b6\u6001\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 public class Index { public static void main ( String [] args ) throws InterruptedException { ThreadB threadB = new ThreadB (); System . out . println ( threadB . getState ()); threadB . start (); while ( threadB . getState () != Thread . State . TERMINATED ) { System . out . println ( threadB . getState ()); Thread . sleep ( 500 ); } System . out . println ( threadB . getState ()); } } class ThreadB extends Thread { private int num = 0 ; @Override public void run () { super . run (); for ( int i = 0 ; i < 5 ; i ++ ) { num ++ ; System . out . println ( Thread . currentThread (). getName () + \", num = \" + num ); try { Thread . sleep ( 500 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } } } } /** \u8f93\u51fa\uff1a NEW RUNNABLE Thread-0, num = 1 TIMED_WAITING Thread-0, num = 2 TIMED_WAITING Thread-0, num = 3 TIMED_WAITING Thread-0, num = 4 TIMED_WAITING Thread-0, num = 5 TIMED_WAITING TERMINATED */","title":"\uff08\u516b\uff09\u7ebf\u7a0b\u72b6\u6001"},{"location":"Java%E8%BF%9B%E9%98%B6/#synchronized","text":"","title":"\u5341\u4e09\u3001synchronized"},{"location":"Java%E8%BF%9B%E9%98%B6/#_40","text":"\u4fdd\u8bc1\u6570\u636e\u5728\u540c\u4e00\u65f6\u523b\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\uff1b \u5373\uff0c\u5f53\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u5bf9\u5185\u5b58\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u53ef\u4ee5\u5bf9\u5185\u5b58\u8fdb\u884c\u64cd\u4f5c\uff0c\u76f4\u5230\u8be5\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u3002","title":"\uff08\u4e00\uff09\u7ebf\u7a0b\u540c\u6b65"},{"location":"Java%E8%BF%9B%E9%98%B6/#_41","text":"\u4e3a\u5bf9\u8c61\u52a0\u9501\uff08\u975e\u9759\u6001\uff09 1 2 3 4 5 6 7 8 9 // \u540c\u6b65\u4ee3\u7801\u5757 synchronized ( \u5bf9\u8c61 ){ // ... } // \u540c\u6b65\u65b9\u6cd5 public synchronized void method ( String name ){ // ... } \u5bf9\u7c7b\u52a0\u9501\uff08\u9759\u6001\uff09 1 2 3 4 5 6 7 8 9 // \u540c\u6b65\u4ee3\u7801\u5757 synchronized ( \u7c7b\u540d . class ) { // ... } // \u540c\u6b65\u65b9\u6cd5 public synchronized static void method (){ // .... } \u4f18\u5148\u9009\u62e9\u540c\u6b65\u4ee3\u7801\u5757\uff1b \u591a\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u7684\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u9501\u5bf9\u8c61 \uff0c\u53cd\u4f8b\uff1a 1 2 3 4 5 6 7 class MyThread extends Thread { public void method (){ synchronized ( this ) { // \u9519\u8bef\uff0c\u8be5\u7c7b\u4f1a\u4ea7\u751f\u591a\u4e2a\u5bf9\u8c61\uff0cthis\u8868\u793a\u7684\u4e0d\u662f\u540c\u4e00\u4e2a\u9501 // ... } } }","title":"\uff08\u4e8c\uff09\u7528\u6cd5"},{"location":"Java%E8%BF%9B%E9%98%B6/#_42","text":"","title":"\uff08\u4e09\uff09\u9501\u5206\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_11","text":"\u4f7f\u7528 synchronized \u6807\u8bb0\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u8be5\u5bf9\u8c61\uff1b \u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u6267\u884c\u6548\u7387\u964d\u4f4e\uff1b \u662f\u975e\u516c\u5e73\u9501\u3002","title":"1. \u4e92\u65a5\u9501"},{"location":"Java%E8%BF%9B%E9%98%B6/#_43","text":"\u4ea7\u751f\u6761\u4ef6\uff1a \u4e92\u65a5\uff1a\u6240\u7ade\u4e89\u7684\u8d44\u6e90\u5fc5\u987b\u4e92\u65a5\uff0c\u4e0d\u80fd\u5171\u4eab\uff1b \u8bf7\u6c42\u4e0e\u4fdd\u6301\uff1a\u4fdd\u6301\u5f53\u524d\u5df2\u6709\u8d44\u6e90\uff0c\u8fd8\u80fd\u7533\u8bf7\u65b0\u7684\u8d44\u6e90\uff1b \u4e0d\u5265\u593a\uff1a\u5df2\u83b7\u5f97\u7684\u8d44\u6e90\u4e0d\u80fd\u88ab\u62a2\u5360\uff1b \u5faa\u73af\u7b49\u5f85\uff1a\u81f3\u5c11\u4e24\u4e2a\u8fdb\u7a0b\u5f62\u6210\u5faa\u73af\u7b49\u5f85\u3002 \u6a21\u62df\u6b7b\u9501\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 public class DeadLock { public static void main ( String [] args ) { MyDeadLock myDeadLock1 = new MyDeadLock ( true ); MyDeadLock myDeadLock2 = new MyDeadLock ( false ); myDeadLock1 . start (); myDeadLock2 . start (); } } class MyDeadLock extends Thread { // \u6ce8\u610f\uff0c\u8d44\u6e90\u4e00\u5b9a\u8981\u662f\u5171\u4eab\u7684 private static Object o1 = new Object (); private static Object o2 = new Object (); private boolean flag = true ; public MyDeadLock ( boolean flag ) { this . flag = flag ; } @Override public void run () { super . run (); if ( flag ) { synchronized ( o1 ) { System . out . println ( \"=============== 1\" ); synchronized ( o2 ) { System . out . println ( \"=============== 2\" ); } } } else { synchronized ( o2 ) { System . out . println ( \"=============== 3\" ); synchronized ( o1 ) { System . out . println ( \"=============== 4\" ); } } } } } /* \u8f93\u51fa\uff1a =============== 1 =============== 3 */","title":"\uff08\u56db\uff09\u6b7b\u9501"},{"location":"Java%E8%BF%9B%E9%98%B6/#_44","text":"\u91ca\u653e\u9501\u7684\u60c5\u51b5\uff1a \u6b63\u5e38\u6267\u884c\u5b8c\u6bd5\u540c\u6b65\u4ee3\u7801\u5757\uff1b \u6267\u884c\u8fc7\u7a0b\u4e2d\u9047\u5230 break \u6216 return \uff1b \u51fa\u73b0\u672a\u5904\u7406\u7684 Error \u6216 Exception \uff1b \u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u6267\u884c\u4e86 wait() \u65b9\u6cd5\uff0c\u6216\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\u4e86 join() \u3002 \u4e0d\u4f1a\u91ca\u653e\u9501\u7684\u60c5\u51b5\uff1a \u8c03\u7528 Thread.sleep() \u6216 Thread.yield() \uff1b","title":"\uff08\u4e94\uff09\u91ca\u653e\u9501"},{"location":"Java%E8%BF%9B%E9%98%B6/#_45","text":"","title":"\uff08\u516d\uff09\u5b9e\u4f8b"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_12","text":"\u4f7f\u7528\u4e92\u65a5\u9501\u89e3\u51b3\u95ee\u9898\uff0c\u4e09\u4e2a\u5356\u7968\u7a97\u53e3\u4e00\u8d77\u5356100\u5f20\u7968\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 public class Tickets { public static void main ( String [] args ) { TicketThread ticketThread = new TicketThread (); // \u53ea\u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u9501\u53ef\u4ee5\u52a0\u5728\u5b83\u8eab\u4e0a Thread thread1 = new Thread ( ticketThread ); Thread thread2 = new Thread ( ticketThread ); Thread thread3 = new Thread ( ticketThread ); thread1 . start (); thread2 . start (); thread3 . start (); } } class TicketThread implements Runnable { private static int num = 100 ; public synchronized boolean sale () { // \u4e3a\u5356\u7968\u529f\u80fd\u52a0\u9501 if ( num <= 0 ) { System . out . println ( \"\u5356\u5b8c\u4e86...\" ); return true ; } try { Thread . sleep ( 50 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } System . out . println ( Thread . currentThread (). getName () + \",\u5269\u4f59\u7968\u6570\uff1a\" + -- num ); return false ; } @Override public void run () { while ( true ) { boolean flag = sale (); if ( flag ) break ; } } }","title":"1. \u4f8b\u4e00"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_7","text":"\u7ebf\u7a0b A \u6253\u5370 100 100 \u4ee5\u5185\u7684\u968f\u673a\u6574\u6570\uff0c\u76f4\u5230\u7ebf\u7a0b B \u63a5\u6536\u5230\u8f93\u5165\u5b57\u7b26 Q \uff0c\u7ed3\u675f\u6253\u5370\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 public class Index { public static void main ( String [] args ) { MyThreadB myThreadB = new MyThreadB (); myThreadB . start (); } } class MyThreadA extends Thread { private boolean flag = true ; @Override public void run () { super . run (); while ( flag ) { Random random = new Random (); int num = random . nextInt ( 100 ); System . out . println ( num ); try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { throw new RuntimeException ( e ); } } System . out . println ( \"======================= A Quit!\" ); } public void setFlag ( boolean flag ) { this . flag = flag ; } } class MyThreadB extends Thread { private MyThreadA myThreadA ; @Override public void run () { super . run (); myThreadA = new MyThreadA (); myThreadA . start (); getKey (); } public void getKey () { while ( true ) { Scanner scanner = new Scanner ( System . in ); String str = scanner . next (); char ch = str . toUpperCase (). charAt ( 0 ); if ( ch == 'Q' ) { myThreadA . setFlag ( false ); System . out . println ( \"======================= B Quit!\" ); break ; } } } }","title":"2. \u4f8b\u4e8c"},{"location":"Java%E8%BF%9B%E9%98%B6/#io","text":"","title":"\u5341\u56db\u3001IO\u6d41"},{"location":"Java%E8%BF%9B%E9%98%B6/#_46","text":"1 2 // \u83b7\u53d6\u5f53\u524d\u7c7b\u6240\u5728\u7684\u7edd\u5bf9\u8def\u5f84 String path = < \u7c7b\u540d > . class . getResource ( \"/\" ). getPath ();","title":"\uff08\u4e00\uff09\u6587\u4ef6"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_13","text":"\u8f93\u5165\u6d41\uff1a \u4ece\u6570\u636e\u6e90\u5230\u7a0b\u5e8f \u8f93\u51fa\u6d41\uff1a \u4ece\u6210\u5e8f\u5230\u8f93\u5165\u6e90","title":"1. \u6587\u4ef6\u6d41"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // \u521b\u5efa\u6587\u4ef6 File file1 = new File ( \"e:/\u80cc\u666f/text.txt\" ); // \u521b\u5efaFile\u5bf9\u8c61 file1 . createNewFile (); // \u901a\u8fc7\u5bf9\u8c61\u521b\u5efa\u6587\u4ef6 File file2 = new File ( \"e:/\u80cc\u666f/\" , \"text.txt\" ); file2 . createNewFile (); File dir = new File ( \"e:/\u80cc\u666f/\" ); File file3 = new File ( dir , \"text.text\" ); file3 . createNewFile (); // \u64cd\u4f5c\u6587\u4ef6 file . getName (); // \u6587\u4ef6\u540d file . getAbsolutePath (); // \u6587\u4ef6\u7edd\u5bf9\u8def\u5f84 file . getParent (); // \u6587\u4ef6\u7236\u7ea7\u76ee\u5f55 file . length (); // \u6587\u4ef6\u5927\u5c0f\uff08\u5b57\u8282\uff09 file . exists (); // \u6587\u4ef6\u662f\u5426\u5b58\u5728s file . isFile (); // \u662f\u5426\u4e3a\u6587\u4ef6 file . delete (); // \u5220\u9664\u6587\u4ef6/\u76ee\u5f55\uff0c\u8fd4\u56de\u662f\u5426\u5220\u9664\u6210\u529f\uff08\u76ee\u5f55\u53ea\u80fd\u5220\u6700\u540e\u4e00\u7ea7\uff09 // \u64cd\u4f5c\u76ee\u5f55 file . isDirectory (); // \u662f\u5426\u4e3a\u76ee\u5f55 dir . mkdir (); // \u521b\u5efa\u5355\u7ea7\u76ee\u5f55 dir . mkdirs (); // \u521b\u5efa\u591a\u7ea7\u76ee\u5f55","title":"2. \u6587\u4ef6\u64cd\u4f5c"},{"location":"Java%E8%BF%9B%E9%98%B6/#io_1","text":"\uff08\u62bd\u8c61\u57fa\u7c7b\uff09 \u5b57\u8282\u6d41 \u5b57\u7b26\u6d41 \u8f93\u5165\u6d41 InputStream Reader \u8f93\u51fa\u6d41 OutputStream Writer \u5b57\u8282\u6d41 \u9002\u7528\u4e8e\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u80fd\u591f\u8fdb\u884c\u65e0\u635f\u4f20\u8f93\uff1b \u5b57\u7b26\u6d41 \u9002\u7528\u4e8e\u6587\u672c\u4f20\u8f93\uff0c\u6548\u7387\u9ad8\u3002 \uff08\u4f20\u8f93\u4e00\u4e2a\u5b57\u7b26\u76f8\u5f53\u4e8e\u591a\u5c11\u5b57\u8282\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6587\u4ef6\u7684\u7f16\u7801\u65b9\u5f0f\uff09","title":"\uff08\u4e8c\uff09IO\u6d41\u5206\u7c7b"},{"location":"Java%E8%BF%9B%E9%98%B6/#1-inputstreamoutputstream","text":"\u62bd\u8c61\u7c7b\uff0c\u662f\u6240\u6709\u5b57\u8282\u8f93\u5165\u8f93\u51fa\u6d41\u7684\u8d85\u7c7b \u5e38\u7528\u5b50\u7c7b\uff1a FileInputStream / FileOutputSteam \uff1a\u6587\u4ef6\u8f93\u5165/\u8f93\u51fa\u6d41 BufferInputStream / BufferOutputSteam \uff1a\u7f13\u51b2\u5b57\u8282\u8f93\u5165/\u8f93\u51fa\u6d41 ObjectInputStream / ObjectOutputSteam \uff1a\u5bf9\u8c61\u5b57\u8282\u8f93\u5165/\u8f93\u51fa\u6d41","title":"1. InputStream\u4e0eOutputStream"},{"location":"Java%E8%BF%9B%E9%98%B6/#1fileinputstream","text":"\u5355\u4e2a\u5b57\u8282\u8bfb\u53d6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 String file = \"e:/\u80cc\u666f/text.txt\" ; InputStream inputStream = null ; try { inputStream = new FileInputStream ( file ); int read = 0 ; // \u6309\u5b57\u8282\u8bfb\u53d6\uff0c\u8fd4\u56deint\u7c7b\u578b\u7684\u5b57\u8282\u7801\uff0c-1\u8868\u793a\u6587\u4ef6\u7ed3\u675f while (( read = inputStream . read ()) != - 1 ) { System . out . print (( char ) read ); // \u8f6c\u6210char\u663e\u793a } } catch ( Exception e ) { e . printStackTrace (); } finally { try { inputStream . close (); // \u5173\u95ed\u8f93\u5165\u6d41\uff0c\u9700\u8981try-catc\u5305\u88f9 } catch ( IOException e ) { throw new RuntimeException ( e ); } } \u4e00\u6b21\u6027\u8bfb\u53d6\u591a\u4e2a\u5b57\u8282\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 String path = \"e:/\u80cc\u666f/text.txt\" ; FileInputStream fileInputStream = null ; try { fileInputStream = new FileInputStream ( path ); byte [] buf = new byte [ 8 ] ; int len = 0 ; // \u4f20\u5165byte\u6570\u7ec4\uff0c\u8fd4\u56de\u8bfb\u53d6\u5230\u7684\u957f\u5ea6\uff0c\u8fd4\u56de-1\u8868\u793a\u6587\u4ef6\u7ed3\u675f while (( len = fileInputStream . read ( buf )) != - 1 ) { // \u4f7f\u7528byte\u6570\u7ec4\u8f6cString\uff0c\u6ce8\u610f\u8981\u4f20\u5165\u957f\u5ea6\uff0c\u6587\u4ef6\u672b\u7684\u5185\u5bb9\u53ef\u80fd\u4e0d\u8db38\u4e2a System . out . print ( new String ( buf , 0 , len )); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileInputStream . close (); // \u5173\u95ed\u6587\u4ef6\u8f93\u5165\u6d41 } catch ( IOException e ) { e . printStackTrace (); } }","title":"\uff081\uff09FileInputStream"},{"location":"Java%E8%BF%9B%E9%98%B6/#2fileoutputstream","text":"\u5355\u4e2a\u5b57\u8282\u5199\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 String path = \"e:/\u80cc\u666f/output.txt\" ; FileOutputStream fileOutputStream = null ; try { // \u4ee5\u8986\u76d6\u7684\u65b9\u5f0f\u5199\u5165\u6587\u4ef6 fileOutputStream = new FileOutputStream ( path ); String words = \"Hello,FileOutputStream!\" ; for ( int i = 0 ; i < words . length (); i ++ ) { fileOutputStream . write ( words . charAt ( i )); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileOutputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } } \u591a\u4e2a\u5b57\u8282\u5199\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 String path = \"e:/\u80cc\u666f/output.txt\" ; FileOutputStream fileOutputStream = null ; try { // true\u8868\u793a\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u5199\u5165\u6587\u4ef6 fileOutputStream = new FileOutputStream ( path , true ); String words = \"Hello,FileOutputStream!\\n\" ; fileOutputStream . write ( words . getBytes ()); // String\u8f6c\u4e3a\u5b57\u8282\u7801\u5199\u5165 fileOutputStream . write ( words . getBytes (), 0 , 5 ); //\u5199\u5165\u524d5\u4e2a\u5b57\u8282 } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileOutputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } }","title":"\uff082\uff09FileOutputStream"},{"location":"Java%E8%BF%9B%E9%98%B6/#3_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 String srcPath = \"e:/\u80cc\u666f/text.txt\" ; String decPath = \"e:/\u80cc\u666f/text2.txt\" ; FileInputStream fileInputStream = null ; FileOutputStream fileOutputStream = null ; try { fileInputStream = new FileInputStream ( srcPath ); fileOutputStream = new FileOutputStream ( decPath ); byte [] buf = new byte [ 1024 ] ; int len = 0 ; while (( len = fileInputStream . read ( buf )) != - 1 ) { fileOutputStream . write ( buf , 0 , len ); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileInputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } try { fileOutputStream . close (); } catch ( IOException e ) { e . printStackTrace (); } }","title":"\uff083\uff09\u6587\u4ef6\u590d\u5236"},{"location":"Java%E8%BF%9B%E9%98%B6/#2-readerwriter","text":"\u62bd\u8c61\u7c7b\uff0c\u662f\u6240\u6709\u5b57\u7b26\u8f93\u5165\u8f93\u51fa\u6d41\u7684\u8d85\u7c7b \u5e38\u7528\u5b50\u7c7b\uff1a FileReader / FileWriter \uff1a\u6587\u4ef6\u8f93\u5165/\u8f93\u51fa\u6d41 BufferReader / BufferWriter \uff1a\u7f13\u51b2\u5b57\u7b26\u8f93\u5165/\u8f93\u51fa\u6d41 StringReader / StringWriter \uff1a\u5b57\u7b26\u4e32\u8f93\u5165/\u8f93\u51fa\u6d41","title":"2. Reader\u4e0eWriter"},{"location":"Java%E8%BF%9B%E9%98%B6/#1filereader","text":"\u5355\u4e2a\u5b57\u7b26\u8bfb\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 String path = \"e:/\u80cc\u666f/text.txt\" ; FileReader fileReader = null ; try { fileReader = new FileReader ( path ); int read = 0 ; while (( read = fileReader . read ()) != - 1 ) { System . out . print (( char ) read ); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileReader . close (); } catch ( IOException e ) { e . printStackTrace (); } } \u591a\u4e2a\u5b57\u7b26\u8bfb\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 String path = \"e:/\u80cc\u666f/text.txt\" ; FileReader fileReader = null ; try { fileReader = new FileReader ( path ); char [] ch = new char [ 8 ] ; // \u4f7f\u7528char\u6570\u7ec4\u63a5\u6536 int len = 0 ; while (( len = fileReader . read ( ch )) != - 1 ) { // \u6587\u4ef6\u672b\u5c3e\u4e0d\u4e00\u5b9a\u957f\u5ea6\u4e3a8\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u6309\u7167\u8bfb\u53d6\u7684\u957f\u5ea6len\u8f93\u51fa\u4e3aString System . out . print ( new String ( ch , 0 , len )); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileReader . close (); } catch ( IOException e ) { e . printStackTrace (); } }","title":"\uff081\uff09FileReader"},{"location":"Java%E8%BF%9B%E9%98%B6/#2filewriter","text":"\u5355\u4e2a\u5b57\u8282\u5199\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 String path = \"e:/\u80cc\u666f/output.txt\" ; FileWriter fileWriter = null ; try { fileWriter = new FileWriter ( path , true ); String str = \"\\nHello,FileWriter\" ; for ( int i = 0 ; i < str . length (); i ++ ) { fileWriter . write ( str . charAt ( i )); } } catch ( IOException e ) { e . printStackTrace (); } finally { try { fileWriter . close (); } catch ( IOException e ) { e . printStackTrace (); } } \u591a\u4e2a\u5b57\u8282\u5199\u5165\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 String path = \"e:/\u80cc\u666f/output.txt\" ; FileWriter fileWriter = null ; try { fileWriter = new FileWriter ( path , true ); String str = \"\\nHello,FileWriter\" ; fileWriter . write ( str ); fileWriter . write ( str , 0 , 6 ); } catch ( IOException e ) { e . printStackTrace (); } finally { try { fileWriter . close (); } catch ( IOException e ) { e . printStackTrace (); } } Writer\u7684write()\u5e95\u5c42\u662f\u7531OutputStream\u5b9e\u73b0\u7684\uff1a","title":"\uff082\uff09FileWriter"},{"location":"Java%E8%BF%9B%E9%98%B6/#3_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 String srcPath = \"e:/\u80cc\u666f/text.txt\" ; String decPath = \"e:/\u80cc\u666f/text2.txt\" ; FileWriter fileWriter = null ; FileReader fileReader = null ; try { fileReader = new FileReader ( srcPath ); fileWriter = new FileWriter ( decPath ); char [] ch = new char [ 1024 ] ; int len = 0 ; while (( len = fileReader . read ( ch )) != - 1 ) { fileWriter . write ( ch , 0 , len ); } } catch ( Exception e ) { e . printStackTrace (); } finally { try { fileReader . close (); } catch ( IOException e ) { e . printStackTrace (); } try { fileWriter . close (); } catch ( IOException e ) { e . printStackTrace (); } }","title":"\uff083\uff09\u6587\u4ef6\u590d\u5236"},{"location":"Java%E8%BF%9B%E9%98%B6/#_47","text":"\u8282\u70b9\u6d41\uff1a \u4ece\u7279\u5b9a\u6570\u636e\u6e90\u8bfb\u5199\u6570\u636e\uff0c\u662f\u5e95\u5c42\u6d41\uff1b \u5904\u7406\u6d41\uff08\u5305\u88c5\u6d41\uff09\uff1a \u901a\u8fc7\u88c5\u9970\u5668\u6a21\u5f0f\u5bf9\u8282\u70b9\u6d41\u8fdb\u884c\u4e86\u5305\u88c5\uff0c\u5e76\u5bf9\u5176\u529f\u80fd\u8fdb\u884c\u4e86\u6269\u5c55\uff1b\u5b83\u53ef\u4ee5\u6d88\u9664\u4e0d\u540c\u8282\u70b9\u6d41\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4e0d\u4f1a\u4e0e\u6570\u636e\u6e90\u76f4\u63a5\u76f8\u8fde\u3002 \u5305\u88c5\u6d41\u7684\u88c5\u9970\u5668\u6a21\u5f0f\uff1a BufferedReader \u7ee7\u627f\u81ea Reader \uff0c\u540c\u65f6\u5b83\u53c8\u5c01\u88c5\u4e86\u4e00\u4e2a Reader \u5bf9\u8c61\uff0c\u5bf9 Reader \u7684\u529f\u80fd\u8fdb\u884c\u4e86\u6269\u5c55\u3002 BufferedWriter \u3001 BufferedInputStream \u3001 BufferedOutputStream \u7684\u7ed3\u6784\u540c\u7406\u3002 1 2 3 4 5 6 7 8 9 public class BufferedReader extends Reader { private Reader in ; // ... } public class BufferedWriter extends Writer { private Writer out ; // ... } \u88c5\u9970\u5668\u6a21\u5f0f\u7684\u7c7b\u56fe\u548c\u4ee3\u7406\u6a21\u5f0f\u4e00\u6837\uff0c\u533a\u522b\u5728\u4e8e\u4ee3\u7406\u6a21\u5f0f\u662f\u8ba9\u522b\u7684\u7c7b\u4ee3\u4e3a\u6267\u884c\u81ea\u5df1\u7684\u529f\u80fd\uff0c\u800c\u88c5\u9970\u5668\u6a21\u5f0f\u662f\u5bf9\u539f\u6709\u529f\u80fd\u8fdb\u884c\u4e86\u6269\u5c55\u3002","title":"\uff08\u4e09\uff09\u8282\u70b9\u6d41\u548c\u5904\u7406\u6d41"},{"location":"Java%E8%BF%9B%E9%98%B6/#1-bufferedreaderbufferedwriter","text":"","title":"1. BufferedReader\u4e0eBufferedWriter"},{"location":"Java%E8%BF%9B%E9%98%B6/#1bufferedreader","text":"1 2 3 4 5 6 7 String path = \"e:/\u80cc\u666f/text.txt\" ; BufferedReader reader = new BufferedReader ( new FileReader ( path )); String line = \"\" ; while (( line = reader . readLine ()) != null ) { // \u6309\u884c\u8bfb\u53d6\u6548\u7387\u9ad8 System . out . println ( line ); } reader . close (); // \u5e95\u5c42\u5b9e\u73b0\u4e86\u5bf9Reader\u5bf9\u8c61\u7684close","title":"\uff081\uff09BufferedReader"},{"location":"Java%E8%BF%9B%E9%98%B6/#2bufferedwriter","text":"1 2 3 4 5 6 7 8 String path = \"e:/\u80cc\u666f/output.txt\" ; BufferedWriter writer = new BufferedWriter ( new FileWriter ( path , true )); String str = \"Hello, BufferedWriter!\" ; writer . write ( str ); writer . newLine (); // \u6362\u884c writer . write ( str , 0 , 6 ); writer . flush (); writer . close ();","title":"\uff082\uff09BufferedWriter"},{"location":"Java%E8%BF%9B%E9%98%B6/#3_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 String srcPath = \"e:/\u80cc\u666f/text.txt\" ; String decPath = \"e:/\u80cc\u666f/text2.txt\" ; BufferedReader reader = new BufferedReader ( new FileReader ( srcPath )); BufferedWriter writer = new BufferedWriter ( new FileWriter ( decPath )); String line = \"\" ; while (( line = reader . readLine ()) != null ) { writer . write ( line ); writer . newLine (); } reader . close (); writer . close ();","title":"\uff083\uff09\u6587\u4ef6\u590d\u5236"},{"location":"Java%E8%BF%9B%E9%98%B6/#2-objectinputstreamobjectoutputstream","text":"\u7528\u4e8e\u5c06\u5bf9\u8c61\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u5305\u62ec\u5bf9\u8c61\u7684\u6570\u636e\u4e0e\u7c7b\u578b\u3002 \u5e8f\u5217\u5316\uff1a \u4fdd\u5b58\u6570\u636e\u7684\u503c\u548c\u7c7b\u578b\uff0c\u53ef\u7528\u63a5\u53e3\uff1a Serializable \u548c Externalization \u3002 \u53cd\u5e8f\u5217\u5316\uff1a \u6062\u590d\u6570\u636e\u7684\u503c\u548c\u7c7b\u578b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 // \u5b9e\u73b0\u4e86Serializable\u7684\u7c7b public class Person implements Serializable { private String name = \"Kun\" ; private int age = 15 ; private String job = \"\u706f\u53f0\u5fa1\u53f2\" ; // \u7c7b\u4e2d\u7684\u5bf9\u8c61\u4e5f\u5fc5\u987b\u88ab\u5e8f\u5217\u5316 public static String nation ; // static\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316 private transient String color ; // transient\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316 // \u5e8f\u5217\u5316\u7248\u672c\u53f7\uff0c\u4fee\u6539\u7c7b\u7684\u5185\u5bb9\u540e\u4e0d\u4f1a\u8ba4\u4e3a\u662f\u4e00\u4e2a\u65b0\u7c7b\uff0c\u800c\u662f\u539f\u6765\u7c7b\u7684\u5347\u7ea7\u7248 private static final long serialVersionUID = 1L ; public Person ( String name , int age , String job , String color ) { this . name = name ; this . age = age ; this . job = job ; this . color = color ; } public String getName () { return name ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", job='\" + job + '\\'' + \", nation'\" + nation + '\\'' + \", color='\" + color + '\\'' + '}' ; } }","title":"2. ObjectInputStream\u4e0eObjectOutputStream"},{"location":"Java%E8%BF%9B%E9%98%B6/#1objectinputstream","text":"1 2 3 4 5 6 7 String path = \"e:/\u80cc\u666f/object.txt\" ; ObjectOutputStream output = new ObjectOutputStream ( new FileOutputStream ( path )); output . writeUTF ( \"\u4fe1\u606f\uff1a\" ); Person . nation = \"\u97e9\u56fd\" ; output . writeObject ( new Person ( \"\u6606\" , 15 , \"\u706f\u53f0\u5fa1\u53f2\" , \"blue\" )); output . flush (); output . close ();","title":"\uff081\uff09ObjectInputStream"},{"location":"Java%E8%BF%9B%E9%98%B6/#2objectinputstream","text":"1 2 3 4 5 6 7 8 9 10 String path = \"e:/\u80cc\u666f/object.txt\" ; ObjectInputStream input = new ObjectInputStream ( new FileInputStream ( path )); String msg = input . readUTF (); Object person = input . readObject (); System . out . println ( person ); input . close (); /* \u8f93\u51fa\uff1a Person{name='\u6606', age=15, job='\u706f\u53f0\u5fa1\u53f2', nation'null', color='null'} */ \u6ce8\u610f\uff0c \u53cd\u5e8f\u5217\u5316\u7684\u987a\u5e8f \u4e00\u5b9a\u8981\u548c \u5e8f\u5217\u5316\u7684\u987a\u5e8f \u4fdd\u6301\u4e00\u81f4\u3002","title":"\uff082\uff09ObjectInputStream"},{"location":"Java%E8%BF%9B%E9%98%B6/#3_5","text":"\u8bfb\u5199\u987a\u5e8f\u8981\u4e00\u81f4\uff1b \u88ab\u5e8f\u5217\u5316\u6216\u53cd\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u8981\u5b9e\u73b0 Serializable \u63a5\u53e3\uff1b \u5e8f\u5217\u5316\u7c7b\u4e2d\u6dfb\u52a0 SerialVersionUUID \u80fd\u63d0\u9ad8\u7248\u672c\u517c\u5bb9\u6027\uff1b static \u548c transient \u6210\u5458\u662f\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316\u7684\uff1b \u5e8f\u5217\u5316\u7c7b\u4e2d\u7684\u5c5e\u6027\u90fd\u8981\u5b9e\u73b0\u5e8f\u5217\u5316\u63a5\u53e3\uff1b \u5e8f\u5217\u5316\u6709\u53ef\u7ee7\u627f\u6027\u3002","title":"\uff083\uff09\u7ec6\u8282\u8bf4\u660e"},{"location":"Java%E8%BF%9B%E9%98%B6/#3-inputoutput","text":"| \u7f16\u8bd1\u7c7b\u578b | \u8fd0\u884c\u7c7b\u578b | \u4ee3\u8868 ---|---|---|--- System.in | InputStream \u7c7b\u578b| BufferedInputStream \u7c7b\u578b|\u952e\u76d8\u8f93\u5165 System.out | PrintStream \u7c7b\u578b| PrintStream \u7c7b\u578b|\u663e\u793a\u5668\u8f93\u51fa","title":"3. \u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41Input\u4e0eOutput"},{"location":"Java%E8%BF%9B%E9%98%B6/#4-inputstreamreaderoutputstreamwriter","text":"InputStreamReader\uff1a Reader \u7684\u5b50\u7c7b\uff0c\u53ef\u4ee5\u5c06 InputStream \u5305\u88c5\u6210 Reader \uff0c\u5373\u5b57\u8282\u6d41\u8f6c\u5b57\u7b26\u6d41\u3002 OutputStreamWriter\uff1a Writer \u7684\u5b50\u7c7b\uff0c\u53ef\u4ee5\u5c06 OutputStream \u5305\u88c5\u6210 Writer \uff0c\u5373\u5b57\u8282\u6d41\u8f6c\u5b57\u7b26\u6d41\u3002 \u5b83\u4eec\u5747\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u683c\u5f0f\uff08\u5982\uff1a utf-8 \u3001 gbk \u3001 gb2312 \u3001 ISO8895-1 \uff09\uff0c\u9002\u7528\u4e8e\u5904\u7406\u4e0d\u540c\u7f16\u7801\u7684\u7eaf\u6587\u672c\u6570\u636e\u3002","title":"4. \u8f6c\u6362\u6d41InputStreamReader\u4e0eOutputStreamWriter"},{"location":"Java%E8%BF%9B%E9%98%B6/#1inputstreamreader","text":"1 2 3 4 5 6 7 8 String path = \"e:/\u80cc\u666f/test_utf_8.txt\" ; InputStreamReader isReader = new InputStreamReader ( new FileInputStream ( path ), \"utf-8\" ); BufferedReader reader = new BufferedReader ( isReader ); String line = \"\" ; while (( line = reader . readLine ()) != null ) { System . out . println ( line ); } reader . close ();","title":"\uff081\uff09InputStreamReader"},{"location":"Java%E8%BF%9B%E9%98%B6/#2outputstreamwriter","text":"1 2 3 4 5 6 7 String path = \"e:/\u80cc\u666f/test_utf_8.txt\" ; OutputStreamWriter osWriter = new OutputStreamWriter ( new FileOutputStream ( path ), \"utf-8\" ); BufferedWriter writer = new BufferedWriter ( osWriter ); String msg = \"Hello, \u8f6c\u6362\u6d41!\" ; writer . write ( msg ); // writer.flush(); writer . close ();","title":"\uff082\uff09OutputStreamWriter"},{"location":"Java%E8%BF%9B%E9%98%B6/#5-printstreamprintwriter","text":"\u6253\u5370\u6d41\u53ea\u6709\u8f93\u51fa\u6d41\uff0c\u6ca1\u6709\u8f93\u5165\u6d41\u3002","title":"5. \u6253\u5370\u6d41PrintStream\u4e0ePrintWriter"},{"location":"Java%E8%BF%9B%E9%98%B6/#1printstream","text":"1 2 3 4 PrintStream out = System . out ; out . print ( \"Hello\uff0cworld!\" ); out . write ( \"\u545c\u545c\" . getBytes ()); // print\u7684\u5e95\u5c42\u662fwrite\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528write out . close (); \u8bbe\u7f6e\u8f93\u51fa\u4f4d\u7f6e\uff1a 1 2 System . setOut ( new PrintStream ( \"e:/\u80cc\u666f/out.txt\" )); System . out . println ( \"Hello,PrintStream!\" );","title":"\uff081\uff09PrintStream"},{"location":"Java%E8%BF%9B%E9%98%B6/#2printwriter","text":"1 2 3 PrintWriter printWriter = new PrintWriter ( System . out ); printWriter . write ( \"Hello,PrintWriter!\" ); printWriter . close (); \u6539\u53d8\u8f93\u51fa\u4f4d\u7f6e\uff1a 1 2 3 PrintWriter printWriter = new PrintWriter ( new FileWriter ( \"e:/\u80cc\u666f/out.txt\" )); printWriter . write ( \"Hello,PrintWriter!\" ); printWriter . close ();","title":"\uff082\uff09PrintWriter"},{"location":"Java%E8%BF%9B%E9%98%B6/#6-properties","text":"1 2 3 4 5 6 7 BufferedReader reader = new BufferedReader ( new FileReader ( \"e:/\u80cc\u666f/mysql.properties\" )); String line = \"\" ; while (( line = reader . readLine ()) != null ) { String [] split = line . split ( \"=\" ); // \u6309=\u5212\u5206 System . out . println ( split [ 0 ] + \"\u7684\u503c\u662f\uff1a\" + split [ 1 ] ); } reader . close (); \u5176\u4ed6\u5e38\u7528\u65b9\u6cd5\uff1a 1 2 3 4 5 load list getProperty setProperty store \u4f8b\u4e00\uff1a \u8bfb\u53d6 properties 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Properties properties = new Properties (); properties . load ( new FileReader ( \"e:/\u80cc\u666f/mysql.properties\" )); properties . list ( System . out ); System . out . println ( \"======================\" ); System . out . println ( \"\u59d3\u540d\uff1a\" + properties . getProperty ( \"name\" )); System . out . println ( \"\u5e74\u9f84\uff1a\" + properties . getProperty ( \"age\" )); /* \u8f93\u51fa\uff1a -- listing properties -- nation=Korea name=kun job=\u706f\u53f0\u4f7f age=15 ====================== \u59d3\u540d\uff1akun \u5e74\u9f84\uff1a15 */ \u4f8b\u4e8c\uff1a \u4fee\u6539/\u6dfb\u52a0\u65b0\u952e\u503c\u5bf9 1 2 3 4 5 6 7 8 Properties properties = new Properties (); // key\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u65b0\u5c5e\u6027\uff0c\u5426\u5219\u4fee\u6539 properties . setProperty ( \"name\" , \"\u98d2\u5f25\u4e9a\u00b7\u4f0a\u6c90\u6d1b\u00b7\u5df4\u745f\u5170\" ); properties . setProperty ( \"age\" , \"17\" ); properties . setProperty ( \"\u888d\u7ea7\" , \"\u9ed1\u888d\" ); properties . store ( new FileOutputStream ( \"e:/\u80cc\u666f/mysql2.properties\" ), \"comment messages\" );","title":"6. Properties"},{"location":"Java%E8%BF%9B%E9%98%B6/#_48","text":"","title":"\uff08\u56db\uff09\u4e60\u9898"},{"location":"Java%E8%BF%9B%E9%98%B6/#1_14","text":"\u521b\u5efa\u76ee\u5f55 mytemp \u76ee\u5f55 mytemp \u4e0b\u521b\u5efa\u6587\u4ef6 hello.txt \u6587\u4ef6 hello.txt \u4e2d\u5199\u5165 Hello,world! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 String path = \"e:/\u80cc\u666f/mytemp/\" ; File dir = new File ( path ); if ( dir . exists ()) { System . out . println ( \"mytemp\u6587\u4ef6\u5939\u5df2\u5b58\u5728\" ); } else { if ( dir . mkdir ()) { System . out . println ( \"\u76ee\u5f55\u521b\u5efa\u6210\u529f\" ); } else { throw new RuntimeException ( \"\u76ee\u5f55\u521b\u5efa\u5931\u8d25\" ); } } String filePath = path + \"hello.txt\" ; File file = new File ( filePath ); if ( file . exists ()) { System . out . println ( \"\u6587\u4ef6\u5df2\u5b58\u5728\" ); } else { if ( file . createNewFile ()) { System . out . println ( \"\u6587\u4ef6\u521b\u5efa\u6210\u529f\" ); } else { throw new RuntimeException ( \"\u6587\u4ef6\u521b\u5efa\u5931\u8d25\" ); } } FileWriter fileWriter = new FileWriter ( filePath ); String str = \"Hello,world!\" ; fileWriter . write ( str ); fileWriter . close ();","title":"1. \u4f8b\u4e00"},{"location":"Java%E8%BF%9B%E9%98%B6/#2_9","text":"\u8bfb\u53d6\u6587\u4ef6\uff0c\u5e76\u5728\u6bcf\u4e00\u884c\u524d\u52a0\u4e0a\u7f16\u53f7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public class Index { public static void main ( String [] args ) throws Exception { String path = \"e:/\u80cc\u666f/test.txt\" ; String srcPath = \"e:/\u80cc\u666f/test2.txt\" ; BufferedReader reader = new BufferedReader ( new FileReader ( path )); BufferedWriter writer = new BufferedWriter ( new FileWriter ( srcPath )); String line = \"\" ; int i = 1 ; while (( line = reader . readLine ()) != null ) { System . out . println ( i + \" \" + line ); writer . write ( i + \" \" + line ); writer . newLine (); ++ i ; } reader . close (); writer . close (); } }","title":"2. \u4f8b\u4e8c"},{"location":"Java%E8%BF%9B%E9%98%B6/#3_6","text":"dog.properties \u4e2d\u521b\u5efa\u540d\u5b57\u3001\u5e74\u9f84\u3001\u989c\u8272\u4e09\u4e2a\u5c5e\u6027 \u4f7f\u7528 Properties \u8bfb\u53d6\uff0c\u5e76\u6253\u5370\uff1b \u5c06\u8bfb\u53d6\u5230\u7684\u5185\u5bb9\u4fdd\u5b58\u5230 Dog \u5bf9\u8c61\u4e2d\uff0c\u5e76\u5e8f\u5217\u5316\u4fdd\u5b58\uff1b \u53cd\u5e8f\u5217\u5316\u8f93\u51fa\u4fdd\u5b58\u7684\u5185\u5bb9\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 public class Index { public static void main ( String [] args ) throws Exception { String scrPath = \"e:/\u80cc\u666f/dog.properties\" ; Properties properties = new Properties (); properties . load ( new FileReader ( scrPath )); String name = properties . getProperty ( \"name\" ); int age = Integer . parseInt ( properties . getProperty ( \"age\" )); String color = properties . getProperty ( \"color\" ); Dog dog = new Dog ( name , age , color ); System . out . println ( dog ); // \u5e8f\u5217\u5316\u4fdd\u5b58 String decPath = \"e:/\u80cc\u666f/dog.dat\" ; ObjectOutputStream ooStream = new ObjectOutputStream ( new FileOutputStream ( decPath )); ooStream . writeObject ( dog ); ooStream . close (); // \u53cd\u5e8f\u5217\u5316\u8f93\u51fa ObjectInputStream oiStream = new ObjectInputStream ( new FileInputStream ( decPath )); Object dog2 = oiStream . readObject (); System . out . println ( dog2 ); oiStream . close (); } } class Dog implements Serializable { private String name ; private int age ; private String color ; public Dog ( String name , int age , String color ) { this . name = name ; this . age = age ; this . color = color ; } @Override public String toString () { return \"Dog{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", color='\" + color + '\\'' + '}' ; } }","title":"3. \u4f8b\u4e09"},{"location":"Java%E9%AB%98%E7%BA%A7/","text":"\u4e00\u3001\u7f51\u7edc\u7f16\u7a0b \u00b6 \uff08\u4e00\uff09\u57fa\u672c\u6982\u5ff5 \u00b6 \u7f51\u7edc\uff1a \u4e24\u53f0/\u591a\u53f0\u8bbe\u5907\u901a\u8fc7\u7269\u7406\u8bbe\u5907\u8fde\u63a5\u8d77\u6765\u3002 \u7f51\u7edc\u7f16\u7a0b\uff1a \u6570\u636e\u901a\u8fc7\u7f51\u7edc\u4ece\u4e00\u53f0\u8bbe\u5907\u4f20\u8f93\u5230\u53e6\u4e00\u53f0\u8bbe\u5907\u3002 java.net \u5305\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7c7b\u3001\u63a5\u53e3\uff0c\u7528\u4e8e\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u3002 ip\u5730\u5740\uff1a \u552f\u4e00\u6807\u8bc6\u7f51\u7edc\u4e2d\u7684\u6bcf\u4e00\u53f0\u8ba1\u7b97\u673a\u3002 ipv6 \u7684\u957f\u5ea6\u662f ipv4 \u7684\u56db\u500d\uff0c\u4e3a128\u5b57\u8282\uff0c\u5e76\u752816\u8fdb\u5236\u8868\u793a\u3002 \u57df\u540d\uff1a www.baidu.com \u7aef\u53e3\u53f7\uff1a \u6807\u8bc6\u8ba1\u7b97\u673a\u4e0a\u67d0\u4e2a\u7279\u5b9a\u7684\u7f51\u7edc\u7a0b\u5e8f\u3002\uff08\u7f51\u7edc\u5f00\u53d1\u4e2d\uff0c\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 0-1024 0-1024 \u7684\u7aef\u53e3\uff0c\u56e0\u4e3a\u4ed6\u4eec\u57fa\u672c\u5df2\u7ecf\u88ab\u77e5\u540d\u7684\u670d\u52a1\u5360\u7528\uff09 \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5747\u4f7f\u7528\u7aef\u53e3\u8fdb\u884c\u76d1\u542c\uff0c\u5ba2\u6237\u7aef\u7684\u7aef\u53e3\u662f\u7531 TCP/IP \u6765\u5206\u914d\u7684\u968f\u673a\u7aef\u53e3\uff0c\u800c\u670d\u52a1\u7aef\u7684\u7aef\u53e3\u662f\u53cc\u65b9\u6307\u5b9a\u7684\u3002 \u534f\u8bae\uff1a TCP\uff1a \u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff1b \u5148\u5efa\u7acbTCP\u8fde\u63a5\u624d\u80fd\u4f7f\u7528\uff0c\u4f20\u8f93\u524d\u91c7\u7528\u201c\u4e09\u6b21\u63e1\u624b\u201d\u7684\u65b9\u5f0f\uff0c\u662f\u53ef\u9760\u7684\uff1b TCP\u534f\u8bae\u95f4\u901a\u4fe1\u7684\u4e24\u4e2a\u8fdb\u7a0b\uff1a\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u7aef\uff1b \u5728\u8fde\u63a5\u4e2d\u53ef\u8fdb\u884c\u5927\u6570\u636e\u91cf\u7684\u4f20\u8f93\uff1b \u4f20\u8f93\u5b8c\u6bd5\u540e\u9700\u8981\u91ca\u653e\u8fde\u63a5\uff0c\u6548\u7387\u4f4e\u3002 UDP\uff1a \u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff1b \u6570\u636e\u3001\u6e90\u3001\u76ee\u7684\u4e09\u8005\u5c01\u88c5\u6210\u6570\u636e\u5305\uff0c\u65e0\u9700\u5efa\u7acb\u8fde\u63a5\uff0c\u662f\u4e0d\u53ef\u9760\u7684\uff1b \u6570\u636e\u62a5\u5927\u5c0f\u9650\u5236\u5728 64K 64K \u4ee5\u5185\uff1b \u65e0\u8fde\u63a5\uff0c\u901f\u5ea6\u5feb\u3002 \u63a7\u5236\u53f0\u547d\u4ee4\uff1a ipconfig \uff1a\u67e5\u770b\u4e3b\u673a\u7684 ip \u60c5\u51b5\uff1b netstat -an \uff1a\u67e5\u770b\u4e3b\u673a\u7f51\u7edc\u72b6\u51b5\uff0c\u5305\u62ec\u7aef\u53e3\u76d1\u542c\u60c5\u51b5\u548c\u7f51\u7edc\u8fde\u63a5\u60c5\u51b5\uff1b netstat -anb \uff1a\u67e5\u770b\u4e3b\u673a\u7f51\u7edc\u72b6\u51b5\uff0c\u5305\u62ec\u76d1\u542c\u60c5\u51b5\u3001\u7f51\u7edc\u8fde\u63a5\u60c5\u51b5\u3001\u76d1\u542c\u7a0b\u5e8f\uff1b netstat -anb | more \uff1a\u53ef\u4ee5\u5206\u9875\u663e\u793a\uff1b netstat -anb | find /i \"8888\" \uff1a\u4ece\u7ed3\u679c\u4e2d\u7b5b\u9009\u5305\u542b 8888 \u5173\u952e\u5b57\u7684\u9879\u3002 \uff08\u4e8c\uff09InetAddress \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // \u83b7\u53d6\u672c\u673a\u7684InetAddress\u5bf9\u8c61 InetAddress localHost = InetAddress . getLocalHost (); System . out . println ( localHost ); // DESKTOP-U75NRR3/192.168.137.1 // \u6839\u636e\u6307\u5b9a\u4e3b\u673a\u540d\u83b7\u53d6InetAddress\u5bf9\u8c61 InetAddress host = InetAddress . getByName ( \"www.baidu.com\" ); System . out . println ( host ); // www.baidu.com/110.242.68.4 // \u6839\u636eInetAddress\u5bf9\u8c61\u83b7\u53d6\u57df\u540d\u3001ip\u5730\u5740 String name = host . getHostName (); String address = host . getHostAddress (); System . out . println ( name + \"\\n\" + address ); // www.baidu.com // 110.242.68.4 \uff08\u4e09\uff09Socket \u00b6 Socket \u662f\u4e24\u53f0\u673a\u5668\u95f4\u901a\u4fe1\u7684\u7aef\u70b9\uff0c\u7f51\u7edc\u901a\u4fe1\u5b9e\u9645\u4e0a\u5c31\u662f Socket \u901a\u4fe1\u3002 \u5b83\u5141\u8bb8\u7a0b\u5e8f\u628a\u7f51\u7edc\u5f53\u573a\u4e00\u4e2a\u6d41\uff0c\u6570\u636e\u5728\u4e24\u4e2a Socket \u4e4b\u95f4\u901a\u8fc7 IO \u6d41\u4f20\u8f93\uff08 socket.getInputStream() \u548c socket.getOutputStream() \uff09\u3002 1. TCP\u7f16\u7a0b \u00b6 \uff081\uff09\u5b57\u8282\u6d41 \u00b6 \u5ba2\u6237\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public class SocketTCPClient { public static void main ( String [] args ) throws IOException { // \u8fde\u63a5\u672c\u673a\u76849999\u7aef\u53e3 Socket socket = new Socket ( InetAddress . getLocalHost (), 9999 ); System . out . println ( \"Client linking 9999 port....\" ); // \u53d1\u9001\u6d88\u606f OutputStream oStream = socket . getOutputStream (); oStream . write ( \"Hello,server!\" . getBytes ()); socket . shutdownOutput (); // \u4e00\u5b9a\u8981\u52a0\u8fd9\u53e5\uff0c\u8868\u793a\u53d1\u9001\u7ed3\u675f\uff0c\u5426\u5219\u4f1a\u5361\u4f4f // \u63a5\u6536\u6d88\u606f InputStream iStream = socket . getInputStream (); byte [] buf = new byte [ 1024 ] ; int len = 0 ; while (( len = iStream . read ( buf )) != - 1 ) { System . out . println ( new String ( buf , 0 , len )); } // \u5173\u95ed oStream . close (); iStream . close (); socket . close (); System . out . println ( \"\u5ba2\u6237\u7aef\u9000\u51fa\" ); } } \u670d\u52a1\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class SocketTCPServer { public static void main ( String [] args ) throws IOException { // ServerSocket\u53ef\u4ee5\u521b\u5efa\u591a\u4e2asocket\uff0c\u88ab\u591a\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5 // 9999\u7aef\u53e3\u4e0d\u80fd\u88ab\u5360\u7528 ServerSocket serverSocket = new ServerSocket ( 9999 ); // \u6ca1\u6709\u5ba2\u6237\u7aef\u8fde\u63a59999\u7aef\u53e3\u65f6\u4f1a\u963b\u585e\uff0c\u5426\u5219\u4f1a\u8fd4\u56desocket\u5bf9\u8c61 Socket socket = serverSocket . accept (); System . out . println ( \"Server listening 9999 port...\" ); // \u63a5\u6536\u6d88\u606f InputStream iStream = socket . getInputStream (); byte [] buf = new byte [ 1024 ] ; int len = 0 ; while (( len = iStream . read ( buf )) != - 1 ) { System . out . println ( new String ( buf , 0 , len )); } // \u56de\u590d\u6d88\u606f OutputStream oStream = socket . getOutputStream (); oStream . write ( \"Hello,client!\" . getBytes ()); socket . shutdownOutput (); // \u4e00\u5b9a\u8981\u52a0\u8fd9\u53e5\uff0c\u8868\u793a\u53d1\u9001\u7ed3\u675f\uff0c\u5426\u5219\u4f1a\u5361\u4f4f // \u5173\u95ed iStream . close (); oStream . close (); socket . close (); serverSocket . close (); System . out . println ( \"\u670d\u52a1\u7aef\u9000\u51fa\" ); } } \uff082\uff09\u5b57\u7b26\u6d41 \u00b6 \u9700\u8981\u4f7f\u7528\u8f6c\u6362\u6d41\uff0c\u5c06\u5b57\u8282\u6d41\u8f6c\u4e3a\u5b57\u7b26\u6d41\u3002 \u5ba2\u6237\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 public class SocketTCPClient { public static void main ( String [] args ) throws IOException { Socket socket = new Socket ( InetAddress . getLocalHost (), 9999 ); // \u8f6c\u6362\u6d41\uff1aOutputStream \u8f6c Writer OutputStream oStream = socket . getOutputStream (); OutputStreamWriter osWriter = new OutputStreamWriter ( oStream ); BufferedWriter writer = new BufferedWriter ( osWriter ); writer . write ( \"Hello, Server!\" ); writer . newLine (); writer . write ( \"\u5624\u5624\u5624...\" ); writer . flush (); socket . shutdownOutput (); // \u4e00\u5b9a\u8981\u52a0\u8fd9\u884c\uff0c\u5426\u5219\u670d\u52a1\u7aef\u4f1a\u4e00\u76f4\u7b49\u5f85\u63a5\u6536\u4fe1\u606f // \u8f6c\u6362\u6d41\uff1aInputStream \u8f6c Reader InputStream iStream = socket . getInputStream (); InputStreamReader isReader = new InputStreamReader ( iStream ); BufferedReader reader = new BufferedReader ( isReader ); String str = reader . readLine (); System . out . println ( str ); reader . close (); writer . close (); socket . close (); System . out . println ( \"\u5ba2\u6237\u7aef\u9000\u51fa\" ); } } \u670d\u52a1\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 public class SocketTCPServer { public static void main ( String [] args ) throws IOException { ServerSocket serverSocket = new ServerSocket ( 9999 ); Socket socket = serverSocket . accept (); // \u8f6c\u6362\u6d41\uff1aInputStream \u8f6c Reader InputStream iStream = socket . getInputStream (); InputStreamReader isReader = new InputStreamReader ( iStream ); BufferedReader reader = new BufferedReader ( isReader ); String str = \"\" ; while (( str = reader . readLine ()) != null ) System . out . println ( str ); // \u8f6c\u6362\u6d41\uff1aOutputStream \u8f6c Writer OutputStream oStream = socket . getOutputStream (); OutputStreamWriter osWriter = new OutputStreamWriter ( oStream ); BufferedWriter writer = new BufferedWriter ( osWriter ); writer . write ( \"Hello,client!\" ); writer . newLine (); writer . flush (); writer . close (); reader . close (); socket . close (); serverSocket . close (); System . out . println ( \"\u670d\u52a1\u7aef\u9000\u51fa\" ); } } 2. UDP\u7f16\u7a0b \u00b6 \u6570\u636e\u3001 ip \u3001\u5bf9\u8c61\u7b49\u90fd\u88ab\u5c01\u88c5\u5728 DatagramPacket \u5bf9\u8c61\u4e2d\uff0c\u6ca1\u6709\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u7aef\u4e4b\u8bf4\uff0c\u53ea\u6709\u6570\u636e\u7684\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u3002 \u53d1\u9001\u65b9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class UDPSender { public static void main ( String [] args ) throws IOException { // \u7531\u4e8eUDP\u65e2\u53ef\u4ee5\u53d1\u9001\u6570\u636e\uff0c\u53c8\u53ef\u4ee5\u63a5\u6536\u6570\u636e\uff1b // \u800c\u672c\u7a0b\u5e8f\u7684\u53d1\u9001\u548c\u63a5\u6536\u7aef\u90fd\u5728\u540c\u4e00\u8bbe\u5907\u4e0a\uff1b // \u6240\u4ee5\u4e24\u8fb9\u8bbe\u7f6e\u7684\u7aef\u53e3\u6700\u597d\u4e0d\u4e00\u6837\uff0c\u4fbf\u4e8e\u533a\u5206\u3002 DatagramSocket socket = new DatagramSocket ( 9998 ); System . out . println ( \"\u53d1\u9001\u65b9\u76d1\u542c9998\u7aef\u53e3....\" ); String str = \"bro,\u62c9\u9762\u4ee5go\u8d3c?\" ; // \u7531\u4e8e\u672c\u7a0b\u5e8f\u7684\u53d1\u9001\u548c\u63a5\u6536\u7aef\u90fd\u5728\u540c\u4e00\u8bbe\u5907\u4e0a\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 InetAddress.getLocalHost() // \u4f46\u662f\u5728\u4e00\u822c\u5e94\u7528\u573a\u666f\u4e2d\uff0c\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528 InetAddress.getByName(\"\") DatagramPacket packet = new DatagramPacket ( str . getBytes (), str . getBytes (). length , InetAddress . getByName ( \"192.168.137.1\" ), 9999 ); // \u6ce8\u610f\u53d1\u9001\u4e2d\u6587\u65f6\u7684\u957f\u5ea6\uff0c\u4e00\u5b9a\u662f\u7ecf\u8fc7\u7f16\u7801\u540e\u7684\u957f\u5ea6 socket . send ( packet ); // \u63a5\u6536\u56de\u590d byte [] data = new byte [ 1024 ] ; packet = new DatagramPacket ( data , data . length ); // \u8fd9\u91cc\u4e00\u5b9a\u8981\u91cd\u65b0new\u4e00\u4e2a\uff0c\u5426\u5219\u63a5\u6536\u7684\u6570\u636e\u957f\u5ea6\u4e0d\u4e00\u5b9a\u5bf9 socket . receive ( packet ); int len = packet . getLength (); data = packet . getData (); String msg = new String ( data , 0 , len ); System . out . println ( \"\u63a5\u6536\u6570\u636e\u957f\u5ea6\uff1a\" + len ); System . out . println ( \"\u63a5\u6536\u56de\u590d\uff1a\" + msg ); socket . close (); System . out . println ( \"\u53d1\u9001\u7aef\u9000\u51fa\" ); } } \u63a5\u6536\u65b9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class UDPReceiver { public static void main ( String [] args ) throws IOException { DatagramSocket socket = new DatagramSocket ( 9999 ); System . out . println ( \"\u63a5\u6536\u65b9\u76d1\u542c9999\u7aef\u53e3....\" ); byte [] bytes = new byte [ 64 * 1024 ] ; // UDP\u5305\u6700\u5927\u4e3a64K DatagramPacket packet = new DatagramPacket ( bytes , bytes . length ); // \u63a5\u6536\u4fe1\u606f\uff0c\u586b\u5145\u5230packet\u4e2d // \u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u5c06\u4f1a\u963b\u585e\uff0c\u4e00\u76f4\u7b49\u5f85\u63a5\u6536\u6570\u636e socket . receive ( packet ); // \u62c6\u5305 int len = packet . getLength (); byte [] data = packet . getData (); String msg = new String ( data , 0 , len ); System . out . println ( \"\u63a5\u6536\u6570\u636e\u957f\u5ea6\uff1a\" + packet . getLength ()); System . out . println ( \"\u63a5\u6536\u6570\u636e\uff1a\" + msg ); // \u56de\u590d\u6d88\u606f String str = \"\u8d70\u8d70\u8d70\uff01\" ; packet = new DatagramPacket ( str . getBytes (), str . getBytes (). length , InetAddress . getByName ( \"192.168.137.1\" ), 9998 ); socket . send ( packet ); socket . close (); System . out . println ( \"\u63a5\u6536\u7aef\u9000\u51fa\" ); } } 3. \u4f8b\u9898 \u00b6 \uff081\uff09\u4f8b\u9898\u4e00 \u00b6 \u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u5f20\u56fe\u7247\uff0c\u670d\u52a1\u7aef\u8fd4\u56de\u6d88\u606f\u3002 \u5ba2\u6237\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 public class Client { public static void main ( String [] args ) throws IOException { Socket socket = new Socket ( InetAddress . getLocalHost (), 8888 ); // \u521b\u5efa\u8bfb\u53d6\u6587\u4ef6 String path = \"e:/\u80cc\u666f/5t5.jpg\" ; BufferedInputStream biStream = new BufferedInputStream ( new FileInputStream ( path )); byte [] bytes = StreamUtils . inputStreamToByteArray ( biStream ); // \u83b7\u53d6\u7f51\u7edc\u8f93\u51fa\u6d41 OutputStream oStream = socket . getOutputStream (); oStream . write ( bytes ); oStream . flush (); socket . shutdownOutput (); // \u63a5\u6536\u56de\u590d\u4fe1\u606f InputStream iStream = socket . getInputStream (); String str = StreamUtils . inputStreamToString ( iStream ); System . out . println ( str ); // \u5173\u95ed\u6d41 iStream . close (); biStream . close (); oStream . close (); socket . close (); System . out . println ( \"\u5ba2\u6237\u7aef\u5173\u95ed...\" ); } } \u670d\u52a1\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class Server { public static void main ( String [] args ) throws IOException { ServerSocket serverSocket = new ServerSocket ( 8888 ); Socket socket = serverSocket . accept (); System . out . println ( \"\u670d\u52a1\u7aef\u57288888\u7aef\u53e3\u76d1\u542c...\" ); // \u8bfb\u5165byte[]\u6570\u636e BufferedInputStream biStream = new BufferedInputStream ( socket . getInputStream ()); byte [] bytes = StreamUtils . inputStreamToByteArray ( biStream ); // \u8f93\u51fa\u5230\u6587\u4ef6 String path = Server . class . getResource ( \"/\" ). getPath () + \"5t5.jpg\" ; BufferedOutputStream boStream = new BufferedOutputStream ( new FileOutputStream ( path )); boStream . write ( bytes ); System . out . println ( \"\u670d\u52a1\u7aef\u56fe\u7247\u63a5\u6536\u6210\u529f\uff01\" ); // \u56de\u590d\u4fe1\u606f BufferedWriter writer = new BufferedWriter ( new OutputStreamWriter ( socket . getOutputStream ())); writer . write ( \"\u670d\u52a1\u7aef\uff1a\u6536\u5230!\" ); writer . flush (); socket . shutdownOutput (); // \u5173\u95ed\u6d41 writer . close (); boStream . close (); biStream . close (); socket . close (); serverSocket . close (); System . out . println ( \"\u670d\u52a1\u7aef\u5173\u95ed...\" ); } } \u5de5\u5177\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 public class StreamUtils { /** * \u8f93\u5165\u6d41\u8f6cbyte[] * * @param iStream \u8f93\u5165\u6d41 * @return byte[] * @throws IOException \u8f93\u5165\u8f93\u51fa\u5f02\u5e38 */ public static byte [] inputStreamToByteArray ( InputStream iStream ) throws IOException { ByteArrayOutputStream baoStream = new ByteArrayOutputStream (); byte [] buf = new byte [ 1024 ] ; int len = 0 ; while (( len = iStream . read ( buf )) != - 1 ) { baoStream . write ( buf , 0 , len ); } byte [] array = baoStream . toByteArray (); baoStream . close (); return array ; } /** * InputStream\u8f6cString * * @param iStream \u8f93\u5165\u6d41 * @return \u5b57\u7b26\u4e32 * @throws IOException \u8f93\u5165\u8f93\u51fa\u5f02\u5e38 */ public static String inputStreamToString ( InputStream iStream ) throws IOException { BufferedInputStream biStream = new BufferedInputStream ( iStream ); byte [] buf = new byte [ 1024 ] ; int len = 0 ; StringBuilder str = new StringBuilder (); while (( len = biStream . read ( buf )) != - 1 ) { str . append ( new String ( buf , 0 , len )). append ( \"\\n\" ); } return str . toString (); } } \uff082\uff09\u4f8b\u9898\u4e8c \u00b6 \u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\uff0c\u670d\u52a1\u7aef\u8fd4\u56de\u6587\u4ef6\uff0c\u5ba2\u6237\u7aef\u63a5\u6536\u5e76\u4fdd\u5b58\u3002 \uff08\u5de5\u5177\u7c7b StreamUtils \u540c\u4e0a\u4f8b\uff09 \u5ba2\u6237\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 public class Client { public static void main ( String [] args ) throws IOException { Scanner scanner = new Scanner ( System . in ); System . out . println ( \"\u8bf7\u8f93\u5165\u6587\u4ef6\u540d\uff1a\" ); String fileName = scanner . next (); Socket socket = new Socket ( InetAddress . getLocalHost (), 6666 ); OutputStream os = socket . getOutputStream (); os . write ( fileName . getBytes ()); os . flush (); socket . shutdownOutput (); // \u8bfb\u53d6\u8fd4\u56de\u7684\u6587\u4ef6 InputStream is = socket . getInputStream (); byte [] bytes = StreamUtils . inputStreamToByteArray ( is ); // \u4fdd\u5b58\u6587\u4ef6 BufferedOutputStream bos = new BufferedOutputStream ( new FileOutputStream ( Server . class . getResource ( \"/\" ). getPath () + fileName )); bos . write ( bytes ); // \u5173\u95ed\u6d41 bos . close (); is . close (); os . close (); socket . close (); System . out . println ( \"\u5ba2\u6237\u7aef\u9000\u51fa\" ); } } \u670d\u52a1\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 public class Server { public static void main ( String [] args ) throws IOException { ServerSocket serverSocket = new ServerSocket ( 6666 ); Socket socket = serverSocket . accept (); // \u83b7\u53d6\u5ba2\u6237\u7aef\u9700\u6c42 InputStream is = socket . getInputStream (); byte [] bytes = new byte [ 1024 ] ; int len = 0 ; String downloadFileName = \"\" ; while (( len = is . read ( bytes )) != - 1 ) { downloadFileName += new String ( bytes , 0 , len ); } System . out . println ( \"\u4e0b\u8f7d\u6587\u4ef6\u540d\uff1a\" + downloadFileName ); // \u4ece\u672c\u5730\u83b7\u53d6\u6587\u4ef6 String path = \"e:/\u80cc\u666f/\" ; File file = new File ( path , downloadFileName ); if ( ! file . exists ()) { path += \"5t5.jpg\" ; } else { path += downloadFileName ; } BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( path )); byte [] data = StreamUtils . inputStreamToByteArray ( bis ); // \u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6587\u4ef6 BufferedOutputStream bos = new BufferedOutputStream ( socket . getOutputStream ()); bos . write ( data ); bos . flush (); socket . shutdownOutput (); // \u5173\u95ed\u6d41 bos . close (); bis . close (); socket . close (); serverSocket . close (); System . out . println ( \"\u670d\u52a1\u7aef\u9000\u51fa\" ); } } \u4e8c\u3001\u9879\u76ee \u00b6 Java\u63a7\u5236\u53f0\u5373\u65f6\u901a\u8baf\u7cfb\u7edf \uff08\u6ce8\u610f\uff0c\u4e0d\u540c\u9879\u76ee\u5171\u7528\u7c7b\u8fdb\u884c\u7f51\u7edc\u4f20\u8f93\u65f6\uff0c\u8be5\u7c7b\u6240\u5728\u7684\u5305\u540d\u5fc5\u987b\u5b8c\u5168\u4e00\u81f4\u3002\u56e0\u4e3a\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u4f1a\u52a0\u4e0a\u5305\u540d\u4fe1\u606f\uff0c\u76f4\u63a5\u4f7f\u7528\u4f1a\u8ba4\u4e3a\u4e24\u8005\u662f\u4e0d\u540c\u7684\u7c7b\u3002\uff09 \u4e09\u3001\u53cd\u5c04 \u00b6 \uff08\u4e00\uff09\u7a0b\u5e8f\u7684\u4e09\u4e2a\u9636\u6bb5 \u00b6 1. \u9636\u6bb5\u56fe \u00b6 \u200b Class.forName(\"\u5168\u7c7b\u540d\") \u7c7b\u540d.class \u5bf9\u8c61.getClass() 2. Class\u7c7b \u00b6 Class \u4e5f\u7ee7\u627f\u81ea Object \uff1b Class \u7c7b\u5bf9\u8c61\u662f\u7531\u7cfb\u7edf\u521b\u5efa\u7684\uff0c\u800c\u4e0d\u662f new \u51fa\u6765\u7684\u3002 new \u548c\u53cd\u5c04\u7684\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\uff0c\u5e95\u5c42\u90fd\u4f1a\u8fdb\u884c\u7c7b\u52a0\u8f7d\uff1a \u6bcf\u4e2a\u7c7b\u90fd\u53ea\u4f1a\u52a0\u8f7d\u4e00\u6b21\uff0c\u5728\u9996\u6b21\u521b\u5efa\u5bf9\u8c61\u3001\u8c03\u7528\u7c7b\u7684\u9759\u6001\u65b9\u6cd5/\u5c5e\u6027/\u4ee3\u7801\u5757\u65f6\uff1b \u901a\u8fc7 Class \u5bf9\u8c61\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u4fe1\u606f\uff1b Class \u5bf9\u8c61\u5b58\u653e\u5728\u5806\uff0c\u7c7b\u7684\u5b57\u8282\u7801\u4e8c\u8fdb\u5236\u6570\u636e\u5b58\u653e\u5728\u65b9\u6cd5\u533a\uff0c\u53c8\u79f0\u4e3a\u5143\u6570\u636e\u3002 3. \u83b7\u53d6 Class \u7c7b\u5bf9\u8c61 \u00b6 \uff081\uff09Class.forName(\"\u7c7b\u7684\u5168\u7c7b\u540d\") \u00b6 \u5df2\u77e5\u7c7b\u7684\u5168\u7c7b\u540d\uff0c\u4e14\u8be5\u7c7b\u5728\u7c7b\u8def\u5f84\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 Class.forName() \u3002\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 \u9002\u7528\u4e8e\u573a\u666f\uff1a \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u8bfb\u53d6\u7c7b\u7684\u5168\u8def\u5f84 \uff082\uff09\u7c7b\u540d.class \u00b6 \u5df2\u77e5\u5177\u4f53\u7684\u7c7b\uff0c\u901a\u8fc7\u7c7b\u7684 class \u83b7\u53d6\uff0c\u8be5\u65b9\u5f0f\u8f83\u4e3a\u53ef\u9760\u3002 \u9002\u7528\u573a\u666f\uff1a \u53c2\u6570\u4f20\u9012 \uff083\uff09\u5bf9\u8c61.getClass() \u00b6 \u83b7\u53d6\u5230\u7684\u662f\u7c7b\u7684\u8fd0\u884c\u7c7b\u578b\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u4f1a\u6709\u5f15\u7528\u6307\u5411\u5176 Class \u7c7b\u5bf9\u8c61\uff0c\u800c Class \u7c7b\u5bf9\u8c61\u5728\u5c06\u5b57\u8282\u7801\u52a0\u8f7d\u5230\u5185\u5b58\u65f6\u8bb0\u5f55\u4e86\u5b83\u7684\u771f\u6b63\u7c7b\u578b\u3002 \u9002\u7528\u573a\u666f\uff1a \u6709\u5bf9\u8c61\u5b9e\u4f8b\u7684\u60c5\u51b5\u3002 \uff084\uff09\u7c7b\u52a0\u8f7d\u5668 \u00b6 \u5728\u7c7b\u52a0\u8f7d\u9636\u6bb5\uff0c\u4f1a\u901a\u8fc7\u7c7b\u52a0\u8f7d\u5668\u83b7\u53d6 Class \u5bf9\u8c61 1 2 3 Cat cat = new Cat (); ClassLoader classLoader = cat . getClass (). getClassLoader (); Class <?> cls = classLoader . loadClass ( path ); \uff085\uff09\u57fa\u672c\u6570\u636e\u7c7b\u578b.class \u00b6 \u81ea\u52a8\u88c5\u7bb1\u6210\u4e86\u5176\u5305\u88c5\u7c7b\u3002 \uff086\uff09\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5305\u88c5\u7c7b.TYPE \u00b6 int.class \u548c Integer.TYPE \u5f97\u5230\u7684Class \u5bf9\u8c61\u662f\u540c\u4e00\u4e2a \u9002\u7528\u573a\u666f\uff1a \u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5305\u88c5\u7c7b 4. \u54ea\u4e9b\u7c7b\u578b\u6709Class\u5bf9\u8c61 \u00b6 \u5916\u90e8\u7c7b\u3001\u6210\u5458\u5185\u90e8\u7c7b\u3001\u9759\u6001\u5185\u90e8\u7c7b\u3001\u5c40\u90e8\u5185\u90e8\u7c7b\u3001\u533f\u540d\u5185\u90e8\u7c7b \u63a5\u53e3 \u6570\u7ec4 \u679a\u4e3e \u6ce8\u89e3 \u57fa\u672c\u6570\u636e\u7c7b\u578b void Class \u672c\u8eab 1 2 3 4 5 6 7 8 Class < String > cls1 = String . class ; // \u5916\u90e8\u7c7b Class < Serializable > cls2 = Serializable . class ; // \u63a5\u53e3 Class < Integer [][]> cls3 = Integer [][] . class ; // \u6570\u7ec4 Class < Thread . State > cls4 = Thread . State . class ; // \u679a\u4e3e Class < Test > cls5 = Test . class ; // \u6ce8\u89e3 Class < Integer > cls6 = int . class ; // \u57fa\u672c\u6570\u636e\u7c7b\u578b Class < Void > cls7 = void . class ; // void Class < Class > cls8 = Class . class ; // Class 5. \u7c7b\u52a0\u8f7d\u8fc7\u7a0b \u00b6 \uff081\uff09\u9759\u6001\u52a0\u8f7d\u4e0e\u52a8\u6001\u52a0\u8f7d \u00b6 \u9759\u6001\u52a0\u8f7d\uff1a \u7f16\u8bd1\u65f6\u52a0\u8f7d\uff0c\u5982\u679c\u627e\u4e0d\u5230\u7c7b\u5219\u62a5\u9519\uff08\u5373\u4f7f\u5728\u5206\u652f\u8bed\u53e5\u4e2d\u8fd0\u884c\u4e0d\u5230\uff0c\u4f9d\u65e7\u4f1a\u62a5\u9519\uff09\uff0c\u4f9d\u8d56\u6027\u8f83\u5f3a\u3002 new \u3001\u7236\u7c7b\u968f\u5b50\u7c7b\u52a0\u8f7d\u3001\u8c03\u7528\u9759\u6001\u6210\u5458\u7b49\u662f\u9759\u6001\u52a0\u8f7d\u3002 \u52a8\u6001\u52a0\u8f7d\uff1a \u8fd0\u884c\u65f6\u52a0\u8f7d\uff0c\u5982\u679c\u8fd0\u884c\u4e0d\u5230\uff0c\u5c31\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f9d\u8d56\u6027\u964d\u4f4e\u3002 \u53cd\u5c04\u662f\u52a8\u6001\u52a0\u8f7d\u3002 \uff082\uff09\u7c7b\u52a0\u8f7d\u8fc7\u7a0b\u56fe \u00b6 \u52a0\u8f7d\u548c\u8fde\u63a5\u9636\u6bb5\u662f\u7531 JVM \u5b8c\u6210\u7684\u3002 \u6ce8\u610f\u548c\u5bf9\u8c61\u521b\u5efa\u9636\u6bb5\u533a\u5206\u5f00\uff0c\u7c7b\u52a0\u8f7d\u7684\u521d\u59cb\u5316\u9636\u6bb5\u53ea\u4e0e\u9759\u6001\u6210\u5458\u6709\u5173\u3002 \uff083\uff09\u5404\u9636\u6bb5\u7ec6\u8282\uff1a \u00b6 \u52a0\u8f7d\uff1a \u5c06\u5b57\u8282\u7801\u4ece\u4e0d\u540c\u7684\u6570\u636e\u6e90\uff08 class \u6587\u4ef6\u3001 jar \u5305\u3001\u7f51\u7edc\uff09\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u5b57\u8282\u6d41\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff08\u5373\uff0c\u5c06\u6570\u636e\u52a0\u8f7d\u5230\u65b9\u6cd5\u533a\uff09\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u4ee3\u8868\u8be5\u7c7b\u7684 Class \u5bf9\u8c61\u3002 \u8fde\u63a5\uff1a \u9a8c\u8bc1\uff1a \u786e\u4fdd Class \u6587\u4ef6\u7684\u5b57\u8282\u6d41\u4e2d\u7684\u4fe1\u606f\u7b26\u5408 JVM \u89c4\u8303\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5371\u5bb3\u865a\u62df\u673a\u81ea\u8eab\u5b89\u5168\u3002\u5305\u62ec\u6587\u4ef6\u683c\u5f0f\u9a8c\u8bc1\uff08\u662f\u5426\u4ee5\u9b54\u6570 oxcafebabe \u5f00\u5934\uff08\u5b57\u8282\u7801\u6587\u4ef6\u7684\u5f00\u5934\u662f16\u8fdb\u5236\u7684 cafebabe \u516b\u4e2a\u5b57\u7b26\uff09\uff09\u3001\u5143\u6570\u636e\u9a8c\u8bc1\u3001\u5b57\u8282\u7801\u9a8c\u8bc1\u3001\u7b26\u53f7\u5f15\u7528\u9a8c\u8bc1\u7b49\u3002 \u53ef\u4ee5\u4f7f\u7528 -Xverify:none \u6765\u5173\u95ed\u5927\u90e8\u5206\u9a8c\u8bc1\uff0c\u4ece\u800c\u7f29\u77ed\u865a\u62df\u673a\u7c7b\u52a0\u8f7d\u7684\u65f6\u95f4\u3002 \u51c6\u5907\uff1a \u4e3a\u9759\u6001\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u521d\u59cb\u5316\u503c\u3002\u5176\u4e2d\uff0c static \u7c7b\u578b\u5206\u914d\u9ed8\u8ba4\u503c\uff0c static final \u7c7b\u578b\u76f4\u63a5\u8d4b\u503c\u3002 \u89e3\u6790\uff1a \u865a\u62df\u673a\u5c06\u5e38\u91cf\u6c60\u7684\u7b26\u53f7\u5f15\u7528\u66ff\u6362\u4e3a\u76f4\u63a5\u5f15\u7528\u3002\uff08\u903b\u8f91\u5730\u5740\u8f6c\u4e3a\u7269\u7406\u5730\u5740\uff09 \u521d\u59cb\u5316\uff1a \u6267\u884c ()\u65b9\u6cd5\uff0c\u4f9d\u6b21\u6536\u96c6\u7c7b\u4e2d\u7684\u6240\u6709\u9759\u6001\u53d8\u91cf\u7684\u8d4b\u503c\u64cd\u4f5c\u3001\u548c\u9759\u6001\u4ee3\u7801\u5757\u6c47\u603b\u7684\u8bed\u53e5\uff0c\u8fdb\u884c\u5408\u5e76\uff0c\u7136\u540e\u518d\u521d\u59cb\u5316\u3002\u865a\u62df\u673a\u4f1a\u4fdd\u8bc1\u8be5\u65b9\u6cd5\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u88ab\u6b63\u786e\u5730\u52a0\u9501\u3001\u540c\u6b65\uff08\u5728\u6e90\u7801\u7684 loadClass() \u4e2d\u6709\u00b7 synchronized \u5173\u952e\u5b57\uff09\u3002 \uff08\u4e8c\uff09\u53cd\u5c04\u57fa\u7840\u8bed\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 // \u901a\u8fc7\u5168\u540d\u83b7\u53d6\u7c7b\u5bf9\u8c61 // <?>\u8868\u793a\u4e0d\u786e\u5b9a\u7684Java\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u53bb\u6389 Class <?> cls = Class . forName ( \"com.cuc.rg.reflection.Cat\" ); System . out . println ( cls ); // class com.cuc.rg.reflection.Cat System . out . println ( cls . getClass ()); // class java.lang.Class System . out . println ( cls . getName () \uff09 ; // \u83b7\u53d6\u5168\u7c7b\u540d System . out . println ( cls . getSimpleName () \uff09 ; // \u83b7\u53d6\u7b80\u5355\u7c7b\u540d System . out . println ( cls . getPackage ()); // \u83b7\u53d6\u5305\u4fe1\u606f // \u521b\u5efa\u5bf9\u8c61 Object o = cls . newInstance (); System . out . println ( \"o\u7684\u8fd0\u884c\u7c7b\u578b\" + o . getClass ()); // \u83b7\u53d6\u5171\u6709\u5c5e\u6027 Field age = cls . getField ( \"age\" ); System . out . println ( age . get ( o )); // \u8bbe\u7f6e\u5c5e\u6027 age . set ( cat , 2 ); // \u83b7\u53d6\u6240\u6709\u516c\u6709\u5c5e\u6027(\u5305\u62ec\u7236\u7c7b) Field [] fields = cls . getFields (); for ( Field field : fields ) { System . out . println ( field . getName () + \"\uff0c\" + field . get ( cat )); } // \u83b7\u53d6\u6240\u6709\u5c5e\u6027\uff0c\u5305\u62ec\u79c1\u6709\u7684 Field [] declaredFields = cls . getDeclaredFields (); //\u4ee5int\u5f62\u5f0f\u8fd4\u56de\u4fee\u9970\u7b26 // 0 - \u9ed8\u8ba4\u4fee\u9970\u7b26\uff0c1 - public\uff0c2 - private\uff0c4 - protected\uff0c8 - static\uff0c10 - final // \u7ec4\u5408\u5173\u7cfb\u4f1a\u76f4\u63a5\u76f8\u52a0\uff0c\u5982 public static \u662f 9 int num = field . getModifiers (); // \u5c5e\u6027\u7c7b\u578b int num2 = method . getModifiers (); // \u8fd4\u56de\u503c\u7c7b\u578b System . out . println ( field . getType ()); System . out . println ( method . getReturnType ()); // \u8c03\u7528\u65b9\u6cd5 Method eat = cls . getMethod ( \"play\" , String . class ); method . invoke ( eat , \"\u6bdb\u7ebf\u56e2\" ); // \u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u4e00\u5f8b\u8fd4\u56deObject // \u83b7\u53d6\u6240\u6709\u516c\u6709\u65b9\u6cd5 Method [] methods = cls . getMethods (); // \u83b7\u53d6\u6240\u6709\u65b9\u6cd5\uff0c\u5305\u62ec\u79c1\u6709\u7684 Method [] declaredMethods = cls . getDeclaredMethods (); // \u83b7\u5f97\u5f62\u53c2\u6570\u7ec4\u4fe1\u606f Class <?>[] parameterTypes = declaredMethods . getParameterTypes (); // \u65e0\u53c2\u6784\u9020\u5668 Constructor constructor1 = cls . getConstructor (); System . out . println ( constructor1 ); // \u6709\u53c2\u6784\u9020\u5668 Constructor constructor2 = cls . getConstructor ( String . class ); System . out . println ( constructor2 ); // \u83b7\u53d6\u672c\u7c7b\u6240\u6709\u6784\u9020\u5668\uff0c\u4e0d\u5305\u542b\u7236\u7c7b Constructor <?>[] declaredConstructors = cls . getDeclaredConstructor (); // \u6784\u9020\u5668\u7684\u53c2\u6570\u4fe1\u606f Class <?>[] types = declaredConstructor . getParameterTypes (); // \u83b7\u53d6\u7236\u7c7b\u4fe1\u606f Class <?> superClass = cls . getSuperClass (); // \u83b7\u53d6\u63a5\u53e3\u4fe1\u606f Class <?>[] interfaces = cls . getInterface (); // \u83b7\u53d6\u6ce8\u89e3\u4fe1\u606f Annotation [] annotations = cls . getAnnotations (); 6. \u901a\u8fc7 Class \u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 Class <?> cls = Class . forName ( path ); // 1 \u76f4\u63a5\u521b\u5efa\uff0c\u5728Java9\u4e4b\u540e\u5df2\u7ecf\u88ab\u5f03\u7528 Object cat1 = cls . newInstance (); // 2 \u516c\u6709\u6784\u9020\u5668 Constructor <?> constructor1 = cls . getConstructor ( String . class ); Object cat2 = constructor1 . newInstance ( \"\u732b\u732b\" ); // 3 \u79c1\u6709\u6784\u9020\u5668 Constructor <?> constructor2 = cls . getDeclaredConstructor ( String . class , int . class ); constructor2 . setAccessible ( true ); // \u5141\u8bb8\u66b4\u529b\u8bbf\u95ee\u79c1\u6709\u6784\u9020\u5668\uff0c\u79c1\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u540c\u7406 Object cat3 = constructor2 . newInstance ( \"\u732b\u732b\u732b\" , 3 ); \uff08\u4e09\uff09\u53cd\u5c04\u6027\u80fd \u00b6 1. \u5bf9\u6bd4 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 public class Index { public static void main ( String [] args ) { m1 (); m2 (); } // \u666e\u901a\u8c03\u7528\u65b9\u6cd5 public static void m1 () { Cat cat = new Cat (); long start = System . currentTimeMillis (); for ( int i = 0 ; i < 90000000 ; i ++ ) { cat . eat (); } long end = System . currentTimeMillis (); System . out . println ( \"m1()\u8017\u65f6\uff1a\" + ( end - start ) + \"\u6beb\u79d2\" ); } // \u53cd\u5c04\u8c03\u7528\u65b9\u6cd5 public static void m2 () { try { Class cls = Class . forName ( \"com.cuc.rg.reflection.Cat\" ); Object o = cls . newInstance (); Method eat = cls . getMethod ( \"eat\" ); long start = System . currentTimeMillis (); for ( int i = 0 ; i < 90000000 ; i ++ ) { eat . invoke ( o ); } long end = System . currentTimeMillis (); System . out . println ( \"m2()\u8017\u65f6\uff1a\" + ( end - start ) + \"\u6beb\u79d2\" ); } catch ( Exception e ) { e . printStackTrace (); } } } /* \u8f93\u51fa\uff1a m1()\u8017\u65f6\uff1a8\u6beb\u79d2 m2()\u8017\u65f6\uff1a530\u6beb\u79d2 */ 2. \u4f18\u5316 \u00b6 1 2 3 4 5 6 7 8 // \u5728\u53cd\u5c04\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u53d6\u6d88\u8bbf\u95ee\u68c0\u6d4b // \u80fd\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f18\u5316\u6548\u7387 eat . setAccessible ( true ); /* \u8f93\u51fa\uff1a m1()\u8017\u65f6\uff1a9\u6beb\u79d2 m2()\u8017\u65f6\uff1a232\u6beb\u79d2 */ \uff08\u56db\uff09\u4f8b\u9898 \u00b6 1. \u4f8b\u4e00 \u00b6 \u4f7f\u7528\u53cd\u5c04\u521b\u5efa PrivateTest \u5bf9\u8c61\uff0c\u4fee\u6539\u5176\u79c1\u6709\u5c5e\u6027 name \uff0c\u5e76\u8c03\u7528 getName \u65b9\u6cd5\u8f93\u51fa\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 public class Index { public static void main ( String [] args ) throws Exception { // \u6784\u9020\u5bf9\u8c61 Class < PrivateTest > cls = PrivateTest . class ; Constructor <?> constructor = cls . getConstructor (); PrivateTest test = ( PrivateTest ) constructor . newInstance (); // \u83b7\u5f97\u79c1\u6709\u5c5e\u6027\uff0c\u5e76\u4fee\u6539 Field name = cls . getDeclaredField ( \"name\" ); name . setAccessible ( true ); name . set ( test , \"\u674e\u56db\" ); // \u83b7\u5f97\u65b9\u6cd5\u5e76\u8f93\u51fa Method method = cls . getMethod ( \"getName\" ); System . out . println ( method . invoke ( test )); } } class PrivateTest { public PrivateTest () { } private String name = \"\u5f20\u4e09\" ; public String getName () { return name ; } 2. \u4f8b\u4e8c \u00b6 \u4f7f\u7528\u53cd\u5c04\u6253\u5370 File \u7684\u6240\u6709\u6784\u9020\u5668\uff0c\u4f7f\u7528 newInstance() \u83b7\u53d6 File \u5bf9\u8c61\uff0c\u5e76\u5728 e \u76d8\u521b\u5efa\u6587\u4ef6\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Index { public static void main ( String [] args ) throws Exception { // \u6253\u5370\u6784\u9020\u5668 Class <?> cls = Class . forName ( \"java.io.File\" ); Constructor <?>[] declaredConstructors = cls . getDeclaredConstructors (); for ( Constructor constructor : declaredConstructors ) { System . out . println ( constructor ); } // \u521b\u5efa\u5bf9\u8c61 Constructor <?> constructor = cls . getDeclaredConstructor ( String . class ); Object file = constructor . newInstance ( \"e:/\u80cc\u666f/test.txt\" ); // \u8c03\u7528\u65b9\u6cd5\u521b\u5efa\u6587\u4ef6 Method createNewFile = cls . getDeclaredMethod ( \"createNewFile\" ); createNewFile . invoke ( file ); } }","title":"Java\u9ad8\u7ea7"},{"location":"Java%E9%AB%98%E7%BA%A7/#_1","text":"","title":"\u4e00\u3001\u7f51\u7edc\u7f16\u7a0b"},{"location":"Java%E9%AB%98%E7%BA%A7/#_2","text":"\u7f51\u7edc\uff1a \u4e24\u53f0/\u591a\u53f0\u8bbe\u5907\u901a\u8fc7\u7269\u7406\u8bbe\u5907\u8fde\u63a5\u8d77\u6765\u3002 \u7f51\u7edc\u7f16\u7a0b\uff1a \u6570\u636e\u901a\u8fc7\u7f51\u7edc\u4ece\u4e00\u53f0\u8bbe\u5907\u4f20\u8f93\u5230\u53e6\u4e00\u53f0\u8bbe\u5907\u3002 java.net \u5305\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7c7b\u3001\u63a5\u53e3\uff0c\u7528\u4e8e\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u3002 ip\u5730\u5740\uff1a \u552f\u4e00\u6807\u8bc6\u7f51\u7edc\u4e2d\u7684\u6bcf\u4e00\u53f0\u8ba1\u7b97\u673a\u3002 ipv6 \u7684\u957f\u5ea6\u662f ipv4 \u7684\u56db\u500d\uff0c\u4e3a128\u5b57\u8282\uff0c\u5e76\u752816\u8fdb\u5236\u8868\u793a\u3002 \u57df\u540d\uff1a www.baidu.com \u7aef\u53e3\u53f7\uff1a \u6807\u8bc6\u8ba1\u7b97\u673a\u4e0a\u67d0\u4e2a\u7279\u5b9a\u7684\u7f51\u7edc\u7a0b\u5e8f\u3002\uff08\u7f51\u7edc\u5f00\u53d1\u4e2d\uff0c\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 0-1024 0-1024 \u7684\u7aef\u53e3\uff0c\u56e0\u4e3a\u4ed6\u4eec\u57fa\u672c\u5df2\u7ecf\u88ab\u77e5\u540d\u7684\u670d\u52a1\u5360\u7528\uff09 \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5747\u4f7f\u7528\u7aef\u53e3\u8fdb\u884c\u76d1\u542c\uff0c\u5ba2\u6237\u7aef\u7684\u7aef\u53e3\u662f\u7531 TCP/IP \u6765\u5206\u914d\u7684\u968f\u673a\u7aef\u53e3\uff0c\u800c\u670d\u52a1\u7aef\u7684\u7aef\u53e3\u662f\u53cc\u65b9\u6307\u5b9a\u7684\u3002 \u534f\u8bae\uff1a TCP\uff1a \u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff1b \u5148\u5efa\u7acbTCP\u8fde\u63a5\u624d\u80fd\u4f7f\u7528\uff0c\u4f20\u8f93\u524d\u91c7\u7528\u201c\u4e09\u6b21\u63e1\u624b\u201d\u7684\u65b9\u5f0f\uff0c\u662f\u53ef\u9760\u7684\uff1b TCP\u534f\u8bae\u95f4\u901a\u4fe1\u7684\u4e24\u4e2a\u8fdb\u7a0b\uff1a\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u7aef\uff1b \u5728\u8fde\u63a5\u4e2d\u53ef\u8fdb\u884c\u5927\u6570\u636e\u91cf\u7684\u4f20\u8f93\uff1b \u4f20\u8f93\u5b8c\u6bd5\u540e\u9700\u8981\u91ca\u653e\u8fde\u63a5\uff0c\u6548\u7387\u4f4e\u3002 UDP\uff1a \u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff1b \u6570\u636e\u3001\u6e90\u3001\u76ee\u7684\u4e09\u8005\u5c01\u88c5\u6210\u6570\u636e\u5305\uff0c\u65e0\u9700\u5efa\u7acb\u8fde\u63a5\uff0c\u662f\u4e0d\u53ef\u9760\u7684\uff1b \u6570\u636e\u62a5\u5927\u5c0f\u9650\u5236\u5728 64K 64K \u4ee5\u5185\uff1b \u65e0\u8fde\u63a5\uff0c\u901f\u5ea6\u5feb\u3002 \u63a7\u5236\u53f0\u547d\u4ee4\uff1a ipconfig \uff1a\u67e5\u770b\u4e3b\u673a\u7684 ip \u60c5\u51b5\uff1b netstat -an \uff1a\u67e5\u770b\u4e3b\u673a\u7f51\u7edc\u72b6\u51b5\uff0c\u5305\u62ec\u7aef\u53e3\u76d1\u542c\u60c5\u51b5\u548c\u7f51\u7edc\u8fde\u63a5\u60c5\u51b5\uff1b netstat -anb \uff1a\u67e5\u770b\u4e3b\u673a\u7f51\u7edc\u72b6\u51b5\uff0c\u5305\u62ec\u76d1\u542c\u60c5\u51b5\u3001\u7f51\u7edc\u8fde\u63a5\u60c5\u51b5\u3001\u76d1\u542c\u7a0b\u5e8f\uff1b netstat -anb | more \uff1a\u53ef\u4ee5\u5206\u9875\u663e\u793a\uff1b netstat -anb | find /i \"8888\" \uff1a\u4ece\u7ed3\u679c\u4e2d\u7b5b\u9009\u5305\u542b 8888 \u5173\u952e\u5b57\u7684\u9879\u3002","title":"\uff08\u4e00\uff09\u57fa\u672c\u6982\u5ff5"},{"location":"Java%E9%AB%98%E7%BA%A7/#inetaddress","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 // \u83b7\u53d6\u672c\u673a\u7684InetAddress\u5bf9\u8c61 InetAddress localHost = InetAddress . getLocalHost (); System . out . println ( localHost ); // DESKTOP-U75NRR3/192.168.137.1 // \u6839\u636e\u6307\u5b9a\u4e3b\u673a\u540d\u83b7\u53d6InetAddress\u5bf9\u8c61 InetAddress host = InetAddress . getByName ( \"www.baidu.com\" ); System . out . println ( host ); // www.baidu.com/110.242.68.4 // \u6839\u636eInetAddress\u5bf9\u8c61\u83b7\u53d6\u57df\u540d\u3001ip\u5730\u5740 String name = host . getHostName (); String address = host . getHostAddress (); System . out . println ( name + \"\\n\" + address ); // www.baidu.com // 110.242.68.4","title":"\uff08\u4e8c\uff09InetAddress"},{"location":"Java%E9%AB%98%E7%BA%A7/#socket","text":"Socket \u662f\u4e24\u53f0\u673a\u5668\u95f4\u901a\u4fe1\u7684\u7aef\u70b9\uff0c\u7f51\u7edc\u901a\u4fe1\u5b9e\u9645\u4e0a\u5c31\u662f Socket \u901a\u4fe1\u3002 \u5b83\u5141\u8bb8\u7a0b\u5e8f\u628a\u7f51\u7edc\u5f53\u573a\u4e00\u4e2a\u6d41\uff0c\u6570\u636e\u5728\u4e24\u4e2a Socket \u4e4b\u95f4\u901a\u8fc7 IO \u6d41\u4f20\u8f93\uff08 socket.getInputStream() \u548c socket.getOutputStream() \uff09\u3002","title":"\uff08\u4e09\uff09Socket"},{"location":"Java%E9%AB%98%E7%BA%A7/#1-tcp","text":"","title":"1. TCP\u7f16\u7a0b"},{"location":"Java%E9%AB%98%E7%BA%A7/#1","text":"\u5ba2\u6237\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 public class SocketTCPClient { public static void main ( String [] args ) throws IOException { // \u8fde\u63a5\u672c\u673a\u76849999\u7aef\u53e3 Socket socket = new Socket ( InetAddress . getLocalHost (), 9999 ); System . out . println ( \"Client linking 9999 port....\" ); // \u53d1\u9001\u6d88\u606f OutputStream oStream = socket . getOutputStream (); oStream . write ( \"Hello,server!\" . getBytes ()); socket . shutdownOutput (); // \u4e00\u5b9a\u8981\u52a0\u8fd9\u53e5\uff0c\u8868\u793a\u53d1\u9001\u7ed3\u675f\uff0c\u5426\u5219\u4f1a\u5361\u4f4f // \u63a5\u6536\u6d88\u606f InputStream iStream = socket . getInputStream (); byte [] buf = new byte [ 1024 ] ; int len = 0 ; while (( len = iStream . read ( buf )) != - 1 ) { System . out . println ( new String ( buf , 0 , len )); } // \u5173\u95ed oStream . close (); iStream . close (); socket . close (); System . out . println ( \"\u5ba2\u6237\u7aef\u9000\u51fa\" ); } } \u670d\u52a1\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class SocketTCPServer { public static void main ( String [] args ) throws IOException { // ServerSocket\u53ef\u4ee5\u521b\u5efa\u591a\u4e2asocket\uff0c\u88ab\u591a\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5 // 9999\u7aef\u53e3\u4e0d\u80fd\u88ab\u5360\u7528 ServerSocket serverSocket = new ServerSocket ( 9999 ); // \u6ca1\u6709\u5ba2\u6237\u7aef\u8fde\u63a59999\u7aef\u53e3\u65f6\u4f1a\u963b\u585e\uff0c\u5426\u5219\u4f1a\u8fd4\u56desocket\u5bf9\u8c61 Socket socket = serverSocket . accept (); System . out . println ( \"Server listening 9999 port...\" ); // \u63a5\u6536\u6d88\u606f InputStream iStream = socket . getInputStream (); byte [] buf = new byte [ 1024 ] ; int len = 0 ; while (( len = iStream . read ( buf )) != - 1 ) { System . out . println ( new String ( buf , 0 , len )); } // \u56de\u590d\u6d88\u606f OutputStream oStream = socket . getOutputStream (); oStream . write ( \"Hello,client!\" . getBytes ()); socket . shutdownOutput (); // \u4e00\u5b9a\u8981\u52a0\u8fd9\u53e5\uff0c\u8868\u793a\u53d1\u9001\u7ed3\u675f\uff0c\u5426\u5219\u4f1a\u5361\u4f4f // \u5173\u95ed iStream . close (); oStream . close (); socket . close (); serverSocket . close (); System . out . println ( \"\u670d\u52a1\u7aef\u9000\u51fa\" ); } }","title":"\uff081\uff09\u5b57\u8282\u6d41"},{"location":"Java%E9%AB%98%E7%BA%A7/#2","text":"\u9700\u8981\u4f7f\u7528\u8f6c\u6362\u6d41\uff0c\u5c06\u5b57\u8282\u6d41\u8f6c\u4e3a\u5b57\u7b26\u6d41\u3002 \u5ba2\u6237\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 public class SocketTCPClient { public static void main ( String [] args ) throws IOException { Socket socket = new Socket ( InetAddress . getLocalHost (), 9999 ); // \u8f6c\u6362\u6d41\uff1aOutputStream \u8f6c Writer OutputStream oStream = socket . getOutputStream (); OutputStreamWriter osWriter = new OutputStreamWriter ( oStream ); BufferedWriter writer = new BufferedWriter ( osWriter ); writer . write ( \"Hello, Server!\" ); writer . newLine (); writer . write ( \"\u5624\u5624\u5624...\" ); writer . flush (); socket . shutdownOutput (); // \u4e00\u5b9a\u8981\u52a0\u8fd9\u884c\uff0c\u5426\u5219\u670d\u52a1\u7aef\u4f1a\u4e00\u76f4\u7b49\u5f85\u63a5\u6536\u4fe1\u606f // \u8f6c\u6362\u6d41\uff1aInputStream \u8f6c Reader InputStream iStream = socket . getInputStream (); InputStreamReader isReader = new InputStreamReader ( iStream ); BufferedReader reader = new BufferedReader ( isReader ); String str = reader . readLine (); System . out . println ( str ); reader . close (); writer . close (); socket . close (); System . out . println ( \"\u5ba2\u6237\u7aef\u9000\u51fa\" ); } } \u670d\u52a1\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 public class SocketTCPServer { public static void main ( String [] args ) throws IOException { ServerSocket serverSocket = new ServerSocket ( 9999 ); Socket socket = serverSocket . accept (); // \u8f6c\u6362\u6d41\uff1aInputStream \u8f6c Reader InputStream iStream = socket . getInputStream (); InputStreamReader isReader = new InputStreamReader ( iStream ); BufferedReader reader = new BufferedReader ( isReader ); String str = \"\" ; while (( str = reader . readLine ()) != null ) System . out . println ( str ); // \u8f6c\u6362\u6d41\uff1aOutputStream \u8f6c Writer OutputStream oStream = socket . getOutputStream (); OutputStreamWriter osWriter = new OutputStreamWriter ( oStream ); BufferedWriter writer = new BufferedWriter ( osWriter ); writer . write ( \"Hello,client!\" ); writer . newLine (); writer . flush (); writer . close (); reader . close (); socket . close (); serverSocket . close (); System . out . println ( \"\u670d\u52a1\u7aef\u9000\u51fa\" ); } }","title":"\uff082\uff09\u5b57\u7b26\u6d41"},{"location":"Java%E9%AB%98%E7%BA%A7/#2-udp","text":"\u6570\u636e\u3001 ip \u3001\u5bf9\u8c61\u7b49\u90fd\u88ab\u5c01\u88c5\u5728 DatagramPacket \u5bf9\u8c61\u4e2d\uff0c\u6ca1\u6709\u5ba2\u6237\u7aef\u3001\u670d\u52a1\u7aef\u4e4b\u8bf4\uff0c\u53ea\u6709\u6570\u636e\u7684\u53d1\u9001\u7aef\u548c\u63a5\u6536\u7aef\u3002 \u53d1\u9001\u65b9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class UDPSender { public static void main ( String [] args ) throws IOException { // \u7531\u4e8eUDP\u65e2\u53ef\u4ee5\u53d1\u9001\u6570\u636e\uff0c\u53c8\u53ef\u4ee5\u63a5\u6536\u6570\u636e\uff1b // \u800c\u672c\u7a0b\u5e8f\u7684\u53d1\u9001\u548c\u63a5\u6536\u7aef\u90fd\u5728\u540c\u4e00\u8bbe\u5907\u4e0a\uff1b // \u6240\u4ee5\u4e24\u8fb9\u8bbe\u7f6e\u7684\u7aef\u53e3\u6700\u597d\u4e0d\u4e00\u6837\uff0c\u4fbf\u4e8e\u533a\u5206\u3002 DatagramSocket socket = new DatagramSocket ( 9998 ); System . out . println ( \"\u53d1\u9001\u65b9\u76d1\u542c9998\u7aef\u53e3....\" ); String str = \"bro,\u62c9\u9762\u4ee5go\u8d3c?\" ; // \u7531\u4e8e\u672c\u7a0b\u5e8f\u7684\u53d1\u9001\u548c\u63a5\u6536\u7aef\u90fd\u5728\u540c\u4e00\u8bbe\u5907\u4e0a\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 InetAddress.getLocalHost() // \u4f46\u662f\u5728\u4e00\u822c\u5e94\u7528\u573a\u666f\u4e2d\uff0c\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528 InetAddress.getByName(\"\") DatagramPacket packet = new DatagramPacket ( str . getBytes (), str . getBytes (). length , InetAddress . getByName ( \"192.168.137.1\" ), 9999 ); // \u6ce8\u610f\u53d1\u9001\u4e2d\u6587\u65f6\u7684\u957f\u5ea6\uff0c\u4e00\u5b9a\u662f\u7ecf\u8fc7\u7f16\u7801\u540e\u7684\u957f\u5ea6 socket . send ( packet ); // \u63a5\u6536\u56de\u590d byte [] data = new byte [ 1024 ] ; packet = new DatagramPacket ( data , data . length ); // \u8fd9\u91cc\u4e00\u5b9a\u8981\u91cd\u65b0new\u4e00\u4e2a\uff0c\u5426\u5219\u63a5\u6536\u7684\u6570\u636e\u957f\u5ea6\u4e0d\u4e00\u5b9a\u5bf9 socket . receive ( packet ); int len = packet . getLength (); data = packet . getData (); String msg = new String ( data , 0 , len ); System . out . println ( \"\u63a5\u6536\u6570\u636e\u957f\u5ea6\uff1a\" + len ); System . out . println ( \"\u63a5\u6536\u56de\u590d\uff1a\" + msg ); socket . close (); System . out . println ( \"\u53d1\u9001\u7aef\u9000\u51fa\" ); } } \u63a5\u6536\u65b9\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class UDPReceiver { public static void main ( String [] args ) throws IOException { DatagramSocket socket = new DatagramSocket ( 9999 ); System . out . println ( \"\u63a5\u6536\u65b9\u76d1\u542c9999\u7aef\u53e3....\" ); byte [] bytes = new byte [ 64 * 1024 ] ; // UDP\u5305\u6700\u5927\u4e3a64K DatagramPacket packet = new DatagramPacket ( bytes , bytes . length ); // \u63a5\u6536\u4fe1\u606f\uff0c\u586b\u5145\u5230packet\u4e2d // \u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u5c06\u4f1a\u963b\u585e\uff0c\u4e00\u76f4\u7b49\u5f85\u63a5\u6536\u6570\u636e socket . receive ( packet ); // \u62c6\u5305 int len = packet . getLength (); byte [] data = packet . getData (); String msg = new String ( data , 0 , len ); System . out . println ( \"\u63a5\u6536\u6570\u636e\u957f\u5ea6\uff1a\" + packet . getLength ()); System . out . println ( \"\u63a5\u6536\u6570\u636e\uff1a\" + msg ); // \u56de\u590d\u6d88\u606f String str = \"\u8d70\u8d70\u8d70\uff01\" ; packet = new DatagramPacket ( str . getBytes (), str . getBytes (). length , InetAddress . getByName ( \"192.168.137.1\" ), 9998 ); socket . send ( packet ); socket . close (); System . out . println ( \"\u63a5\u6536\u7aef\u9000\u51fa\" ); } }","title":"2. UDP\u7f16\u7a0b"},{"location":"Java%E9%AB%98%E7%BA%A7/#3","text":"","title":"3. \u4f8b\u9898"},{"location":"Java%E9%AB%98%E7%BA%A7/#1_1","text":"\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u5f20\u56fe\u7247\uff0c\u670d\u52a1\u7aef\u8fd4\u56de\u6d88\u606f\u3002 \u5ba2\u6237\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 public class Client { public static void main ( String [] args ) throws IOException { Socket socket = new Socket ( InetAddress . getLocalHost (), 8888 ); // \u521b\u5efa\u8bfb\u53d6\u6587\u4ef6 String path = \"e:/\u80cc\u666f/5t5.jpg\" ; BufferedInputStream biStream = new BufferedInputStream ( new FileInputStream ( path )); byte [] bytes = StreamUtils . inputStreamToByteArray ( biStream ); // \u83b7\u53d6\u7f51\u7edc\u8f93\u51fa\u6d41 OutputStream oStream = socket . getOutputStream (); oStream . write ( bytes ); oStream . flush (); socket . shutdownOutput (); // \u63a5\u6536\u56de\u590d\u4fe1\u606f InputStream iStream = socket . getInputStream (); String str = StreamUtils . inputStreamToString ( iStream ); System . out . println ( str ); // \u5173\u95ed\u6d41 iStream . close (); biStream . close (); oStream . close (); socket . close (); System . out . println ( \"\u5ba2\u6237\u7aef\u5173\u95ed...\" ); } } \u670d\u52a1\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class Server { public static void main ( String [] args ) throws IOException { ServerSocket serverSocket = new ServerSocket ( 8888 ); Socket socket = serverSocket . accept (); System . out . println ( \"\u670d\u52a1\u7aef\u57288888\u7aef\u53e3\u76d1\u542c...\" ); // \u8bfb\u5165byte[]\u6570\u636e BufferedInputStream biStream = new BufferedInputStream ( socket . getInputStream ()); byte [] bytes = StreamUtils . inputStreamToByteArray ( biStream ); // \u8f93\u51fa\u5230\u6587\u4ef6 String path = Server . class . getResource ( \"/\" ). getPath () + \"5t5.jpg\" ; BufferedOutputStream boStream = new BufferedOutputStream ( new FileOutputStream ( path )); boStream . write ( bytes ); System . out . println ( \"\u670d\u52a1\u7aef\u56fe\u7247\u63a5\u6536\u6210\u529f\uff01\" ); // \u56de\u590d\u4fe1\u606f BufferedWriter writer = new BufferedWriter ( new OutputStreamWriter ( socket . getOutputStream ())); writer . write ( \"\u670d\u52a1\u7aef\uff1a\u6536\u5230!\" ); writer . flush (); socket . shutdownOutput (); // \u5173\u95ed\u6d41 writer . close (); boStream . close (); biStream . close (); socket . close (); serverSocket . close (); System . out . println ( \"\u670d\u52a1\u7aef\u5173\u95ed...\" ); } } \u5de5\u5177\u7c7b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 public class StreamUtils { /** * \u8f93\u5165\u6d41\u8f6cbyte[] * * @param iStream \u8f93\u5165\u6d41 * @return byte[] * @throws IOException \u8f93\u5165\u8f93\u51fa\u5f02\u5e38 */ public static byte [] inputStreamToByteArray ( InputStream iStream ) throws IOException { ByteArrayOutputStream baoStream = new ByteArrayOutputStream (); byte [] buf = new byte [ 1024 ] ; int len = 0 ; while (( len = iStream . read ( buf )) != - 1 ) { baoStream . write ( buf , 0 , len ); } byte [] array = baoStream . toByteArray (); baoStream . close (); return array ; } /** * InputStream\u8f6cString * * @param iStream \u8f93\u5165\u6d41 * @return \u5b57\u7b26\u4e32 * @throws IOException \u8f93\u5165\u8f93\u51fa\u5f02\u5e38 */ public static String inputStreamToString ( InputStream iStream ) throws IOException { BufferedInputStream biStream = new BufferedInputStream ( iStream ); byte [] buf = new byte [ 1024 ] ; int len = 0 ; StringBuilder str = new StringBuilder (); while (( len = biStream . read ( buf )) != - 1 ) { str . append ( new String ( buf , 0 , len )). append ( \"\\n\" ); } return str . toString (); } }","title":"\uff081\uff09\u4f8b\u9898\u4e00"},{"location":"Java%E9%AB%98%E7%BA%A7/#2_1","text":"\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\uff0c\u670d\u52a1\u7aef\u8fd4\u56de\u6587\u4ef6\uff0c\u5ba2\u6237\u7aef\u63a5\u6536\u5e76\u4fdd\u5b58\u3002 \uff08\u5de5\u5177\u7c7b StreamUtils \u540c\u4e0a\u4f8b\uff09 \u5ba2\u6237\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 public class Client { public static void main ( String [] args ) throws IOException { Scanner scanner = new Scanner ( System . in ); System . out . println ( \"\u8bf7\u8f93\u5165\u6587\u4ef6\u540d\uff1a\" ); String fileName = scanner . next (); Socket socket = new Socket ( InetAddress . getLocalHost (), 6666 ); OutputStream os = socket . getOutputStream (); os . write ( fileName . getBytes ()); os . flush (); socket . shutdownOutput (); // \u8bfb\u53d6\u8fd4\u56de\u7684\u6587\u4ef6 InputStream is = socket . getInputStream (); byte [] bytes = StreamUtils . inputStreamToByteArray ( is ); // \u4fdd\u5b58\u6587\u4ef6 BufferedOutputStream bos = new BufferedOutputStream ( new FileOutputStream ( Server . class . getResource ( \"/\" ). getPath () + fileName )); bos . write ( bytes ); // \u5173\u95ed\u6d41 bos . close (); is . close (); os . close (); socket . close (); System . out . println ( \"\u5ba2\u6237\u7aef\u9000\u51fa\" ); } } \u670d\u52a1\u7aef\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 public class Server { public static void main ( String [] args ) throws IOException { ServerSocket serverSocket = new ServerSocket ( 6666 ); Socket socket = serverSocket . accept (); // \u83b7\u53d6\u5ba2\u6237\u7aef\u9700\u6c42 InputStream is = socket . getInputStream (); byte [] bytes = new byte [ 1024 ] ; int len = 0 ; String downloadFileName = \"\" ; while (( len = is . read ( bytes )) != - 1 ) { downloadFileName += new String ( bytes , 0 , len ); } System . out . println ( \"\u4e0b\u8f7d\u6587\u4ef6\u540d\uff1a\" + downloadFileName ); // \u4ece\u672c\u5730\u83b7\u53d6\u6587\u4ef6 String path = \"e:/\u80cc\u666f/\" ; File file = new File ( path , downloadFileName ); if ( ! file . exists ()) { path += \"5t5.jpg\" ; } else { path += downloadFileName ; } BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( path )); byte [] data = StreamUtils . inputStreamToByteArray ( bis ); // \u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6587\u4ef6 BufferedOutputStream bos = new BufferedOutputStream ( socket . getOutputStream ()); bos . write ( data ); bos . flush (); socket . shutdownOutput (); // \u5173\u95ed\u6d41 bos . close (); bis . close (); socket . close (); serverSocket . close (); System . out . println ( \"\u670d\u52a1\u7aef\u9000\u51fa\" ); } }","title":"\uff082\uff09\u4f8b\u9898\u4e8c"},{"location":"Java%E9%AB%98%E7%BA%A7/#_3","text":"Java\u63a7\u5236\u53f0\u5373\u65f6\u901a\u8baf\u7cfb\u7edf \uff08\u6ce8\u610f\uff0c\u4e0d\u540c\u9879\u76ee\u5171\u7528\u7c7b\u8fdb\u884c\u7f51\u7edc\u4f20\u8f93\u65f6\uff0c\u8be5\u7c7b\u6240\u5728\u7684\u5305\u540d\u5fc5\u987b\u5b8c\u5168\u4e00\u81f4\u3002\u56e0\u4e3a\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u4f1a\u52a0\u4e0a\u5305\u540d\u4fe1\u606f\uff0c\u76f4\u63a5\u4f7f\u7528\u4f1a\u8ba4\u4e3a\u4e24\u8005\u662f\u4e0d\u540c\u7684\u7c7b\u3002\uff09","title":"\u4e8c\u3001\u9879\u76ee"},{"location":"Java%E9%AB%98%E7%BA%A7/#_4","text":"","title":"\u4e09\u3001\u53cd\u5c04"},{"location":"Java%E9%AB%98%E7%BA%A7/#_5","text":"","title":"\uff08\u4e00\uff09\u7a0b\u5e8f\u7684\u4e09\u4e2a\u9636\u6bb5"},{"location":"Java%E9%AB%98%E7%BA%A7/#1_2","text":"\u200b Class.forName(\"\u5168\u7c7b\u540d\") \u7c7b\u540d.class \u5bf9\u8c61.getClass()","title":"1. \u9636\u6bb5\u56fe"},{"location":"Java%E9%AB%98%E7%BA%A7/#2-class","text":"Class \u4e5f\u7ee7\u627f\u81ea Object \uff1b Class \u7c7b\u5bf9\u8c61\u662f\u7531\u7cfb\u7edf\u521b\u5efa\u7684\uff0c\u800c\u4e0d\u662f new \u51fa\u6765\u7684\u3002 new \u548c\u53cd\u5c04\u7684\u65b9\u6cd5\u521b\u5efa\u5bf9\u8c61\uff0c\u5e95\u5c42\u90fd\u4f1a\u8fdb\u884c\u7c7b\u52a0\u8f7d\uff1a \u6bcf\u4e2a\u7c7b\u90fd\u53ea\u4f1a\u52a0\u8f7d\u4e00\u6b21\uff0c\u5728\u9996\u6b21\u521b\u5efa\u5bf9\u8c61\u3001\u8c03\u7528\u7c7b\u7684\u9759\u6001\u65b9\u6cd5/\u5c5e\u6027/\u4ee3\u7801\u5757\u65f6\uff1b \u901a\u8fc7 Class \u5bf9\u8c61\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u4fe1\u606f\uff1b Class \u5bf9\u8c61\u5b58\u653e\u5728\u5806\uff0c\u7c7b\u7684\u5b57\u8282\u7801\u4e8c\u8fdb\u5236\u6570\u636e\u5b58\u653e\u5728\u65b9\u6cd5\u533a\uff0c\u53c8\u79f0\u4e3a\u5143\u6570\u636e\u3002","title":"2. Class\u7c7b"},{"location":"Java%E9%AB%98%E7%BA%A7/#3-class","text":"","title":"3. \u83b7\u53d6Class\u7c7b\u5bf9\u8c61"},{"location":"Java%E9%AB%98%E7%BA%A7/#1classforname","text":"\u5df2\u77e5\u7c7b\u7684\u5168\u7c7b\u540d\uff0c\u4e14\u8be5\u7c7b\u5728\u7c7b\u8def\u5f84\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 Class.forName() \u3002\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 \u9002\u7528\u4e8e\u573a\u666f\uff1a \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u8bfb\u53d6\u7c7b\u7684\u5168\u8def\u5f84","title":"\uff081\uff09Class.forName(\"\u7c7b\u7684\u5168\u7c7b\u540d\")"},{"location":"Java%E9%AB%98%E7%BA%A7/#2class","text":"\u5df2\u77e5\u5177\u4f53\u7684\u7c7b\uff0c\u901a\u8fc7\u7c7b\u7684 class \u83b7\u53d6\uff0c\u8be5\u65b9\u5f0f\u8f83\u4e3a\u53ef\u9760\u3002 \u9002\u7528\u573a\u666f\uff1a \u53c2\u6570\u4f20\u9012","title":"\uff082\uff09\u7c7b\u540d.class"},{"location":"Java%E9%AB%98%E7%BA%A7/#3getclass","text":"\u83b7\u53d6\u5230\u7684\u662f\u7c7b\u7684\u8fd0\u884c\u7c7b\u578b\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u4f1a\u6709\u5f15\u7528\u6307\u5411\u5176 Class \u7c7b\u5bf9\u8c61\uff0c\u800c Class \u7c7b\u5bf9\u8c61\u5728\u5c06\u5b57\u8282\u7801\u52a0\u8f7d\u5230\u5185\u5b58\u65f6\u8bb0\u5f55\u4e86\u5b83\u7684\u771f\u6b63\u7c7b\u578b\u3002 \u9002\u7528\u573a\u666f\uff1a \u6709\u5bf9\u8c61\u5b9e\u4f8b\u7684\u60c5\u51b5\u3002","title":"\uff083\uff09\u5bf9\u8c61.getClass()"},{"location":"Java%E9%AB%98%E7%BA%A7/#4","text":"\u5728\u7c7b\u52a0\u8f7d\u9636\u6bb5\uff0c\u4f1a\u901a\u8fc7\u7c7b\u52a0\u8f7d\u5668\u83b7\u53d6 Class \u5bf9\u8c61 1 2 3 Cat cat = new Cat (); ClassLoader classLoader = cat . getClass (). getClassLoader (); Class <?> cls = classLoader . loadClass ( path );","title":"\uff084\uff09\u7c7b\u52a0\u8f7d\u5668"},{"location":"Java%E9%AB%98%E7%BA%A7/#5class","text":"\u81ea\u52a8\u88c5\u7bb1\u6210\u4e86\u5176\u5305\u88c5\u7c7b\u3002","title":"\uff085\uff09\u57fa\u672c\u6570\u636e\u7c7b\u578b.class"},{"location":"Java%E9%AB%98%E7%BA%A7/#6type","text":"int.class \u548c Integer.TYPE \u5f97\u5230\u7684Class \u5bf9\u8c61\u662f\u540c\u4e00\u4e2a \u9002\u7528\u573a\u666f\uff1a \u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5305\u88c5\u7c7b","title":"\uff086\uff09\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5305\u88c5\u7c7b.TYPE"},{"location":"Java%E9%AB%98%E7%BA%A7/#4-class","text":"\u5916\u90e8\u7c7b\u3001\u6210\u5458\u5185\u90e8\u7c7b\u3001\u9759\u6001\u5185\u90e8\u7c7b\u3001\u5c40\u90e8\u5185\u90e8\u7c7b\u3001\u533f\u540d\u5185\u90e8\u7c7b \u63a5\u53e3 \u6570\u7ec4 \u679a\u4e3e \u6ce8\u89e3 \u57fa\u672c\u6570\u636e\u7c7b\u578b void Class \u672c\u8eab 1 2 3 4 5 6 7 8 Class < String > cls1 = String . class ; // \u5916\u90e8\u7c7b Class < Serializable > cls2 = Serializable . class ; // \u63a5\u53e3 Class < Integer [][]> cls3 = Integer [][] . class ; // \u6570\u7ec4 Class < Thread . State > cls4 = Thread . State . class ; // \u679a\u4e3e Class < Test > cls5 = Test . class ; // \u6ce8\u89e3 Class < Integer > cls6 = int . class ; // \u57fa\u672c\u6570\u636e\u7c7b\u578b Class < Void > cls7 = void . class ; // void Class < Class > cls8 = Class . class ; // Class","title":"4. \u54ea\u4e9b\u7c7b\u578b\u6709Class\u5bf9\u8c61"},{"location":"Java%E9%AB%98%E7%BA%A7/#5","text":"","title":"5. \u7c7b\u52a0\u8f7d\u8fc7\u7a0b"},{"location":"Java%E9%AB%98%E7%BA%A7/#1_3","text":"\u9759\u6001\u52a0\u8f7d\uff1a \u7f16\u8bd1\u65f6\u52a0\u8f7d\uff0c\u5982\u679c\u627e\u4e0d\u5230\u7c7b\u5219\u62a5\u9519\uff08\u5373\u4f7f\u5728\u5206\u652f\u8bed\u53e5\u4e2d\u8fd0\u884c\u4e0d\u5230\uff0c\u4f9d\u65e7\u4f1a\u62a5\u9519\uff09\uff0c\u4f9d\u8d56\u6027\u8f83\u5f3a\u3002 new \u3001\u7236\u7c7b\u968f\u5b50\u7c7b\u52a0\u8f7d\u3001\u8c03\u7528\u9759\u6001\u6210\u5458\u7b49\u662f\u9759\u6001\u52a0\u8f7d\u3002 \u52a8\u6001\u52a0\u8f7d\uff1a \u8fd0\u884c\u65f6\u52a0\u8f7d\uff0c\u5982\u679c\u8fd0\u884c\u4e0d\u5230\uff0c\u5c31\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f9d\u8d56\u6027\u964d\u4f4e\u3002 \u53cd\u5c04\u662f\u52a8\u6001\u52a0\u8f7d\u3002","title":"\uff081\uff09\u9759\u6001\u52a0\u8f7d\u4e0e\u52a8\u6001\u52a0\u8f7d"},{"location":"Java%E9%AB%98%E7%BA%A7/#2_2","text":"\u52a0\u8f7d\u548c\u8fde\u63a5\u9636\u6bb5\u662f\u7531 JVM \u5b8c\u6210\u7684\u3002 \u6ce8\u610f\u548c\u5bf9\u8c61\u521b\u5efa\u9636\u6bb5\u533a\u5206\u5f00\uff0c\u7c7b\u52a0\u8f7d\u7684\u521d\u59cb\u5316\u9636\u6bb5\u53ea\u4e0e\u9759\u6001\u6210\u5458\u6709\u5173\u3002","title":"\uff082\uff09\u7c7b\u52a0\u8f7d\u8fc7\u7a0b\u56fe"},{"location":"Java%E9%AB%98%E7%BA%A7/#3_1","text":"\u52a0\u8f7d\uff1a \u5c06\u5b57\u8282\u7801\u4ece\u4e0d\u540c\u7684\u6570\u636e\u6e90\uff08 class \u6587\u4ef6\u3001 jar \u5305\u3001\u7f51\u7edc\uff09\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u5b57\u8282\u6d41\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff08\u5373\uff0c\u5c06\u6570\u636e\u52a0\u8f7d\u5230\u65b9\u6cd5\u533a\uff09\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u4ee3\u8868\u8be5\u7c7b\u7684 Class \u5bf9\u8c61\u3002 \u8fde\u63a5\uff1a \u9a8c\u8bc1\uff1a \u786e\u4fdd Class \u6587\u4ef6\u7684\u5b57\u8282\u6d41\u4e2d\u7684\u4fe1\u606f\u7b26\u5408 JVM \u89c4\u8303\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5371\u5bb3\u865a\u62df\u673a\u81ea\u8eab\u5b89\u5168\u3002\u5305\u62ec\u6587\u4ef6\u683c\u5f0f\u9a8c\u8bc1\uff08\u662f\u5426\u4ee5\u9b54\u6570 oxcafebabe \u5f00\u5934\uff08\u5b57\u8282\u7801\u6587\u4ef6\u7684\u5f00\u5934\u662f16\u8fdb\u5236\u7684 cafebabe \u516b\u4e2a\u5b57\u7b26\uff09\uff09\u3001\u5143\u6570\u636e\u9a8c\u8bc1\u3001\u5b57\u8282\u7801\u9a8c\u8bc1\u3001\u7b26\u53f7\u5f15\u7528\u9a8c\u8bc1\u7b49\u3002 \u53ef\u4ee5\u4f7f\u7528 -Xverify:none \u6765\u5173\u95ed\u5927\u90e8\u5206\u9a8c\u8bc1\uff0c\u4ece\u800c\u7f29\u77ed\u865a\u62df\u673a\u7c7b\u52a0\u8f7d\u7684\u65f6\u95f4\u3002 \u51c6\u5907\uff1a \u4e3a\u9759\u6001\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u521d\u59cb\u5316\u503c\u3002\u5176\u4e2d\uff0c static \u7c7b\u578b\u5206\u914d\u9ed8\u8ba4\u503c\uff0c static final \u7c7b\u578b\u76f4\u63a5\u8d4b\u503c\u3002 \u89e3\u6790\uff1a \u865a\u62df\u673a\u5c06\u5e38\u91cf\u6c60\u7684\u7b26\u53f7\u5f15\u7528\u66ff\u6362\u4e3a\u76f4\u63a5\u5f15\u7528\u3002\uff08\u903b\u8f91\u5730\u5740\u8f6c\u4e3a\u7269\u7406\u5730\u5740\uff09 \u521d\u59cb\u5316\uff1a \u6267\u884c ()\u65b9\u6cd5\uff0c\u4f9d\u6b21\u6536\u96c6\u7c7b\u4e2d\u7684\u6240\u6709\u9759\u6001\u53d8\u91cf\u7684\u8d4b\u503c\u64cd\u4f5c\u3001\u548c\u9759\u6001\u4ee3\u7801\u5757\u6c47\u603b\u7684\u8bed\u53e5\uff0c\u8fdb\u884c\u5408\u5e76\uff0c\u7136\u540e\u518d\u521d\u59cb\u5316\u3002\u865a\u62df\u673a\u4f1a\u4fdd\u8bc1\u8be5\u65b9\u6cd5\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u88ab\u6b63\u786e\u5730\u52a0\u9501\u3001\u540c\u6b65\uff08\u5728\u6e90\u7801\u7684 loadClass() \u4e2d\u6709\u00b7 synchronized \u5173\u952e\u5b57\uff09\u3002","title":"\uff083\uff09\u5404\u9636\u6bb5\u7ec6\u8282\uff1a"},{"location":"Java%E9%AB%98%E7%BA%A7/#_6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 // \u901a\u8fc7\u5168\u540d\u83b7\u53d6\u7c7b\u5bf9\u8c61 // <?>\u8868\u793a\u4e0d\u786e\u5b9a\u7684Java\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u53bb\u6389 Class <?> cls = Class . forName ( \"com.cuc.rg.reflection.Cat\" ); System . out . println ( cls ); // class com.cuc.rg.reflection.Cat System . out . println ( cls . getClass ()); // class java.lang.Class System . out . println ( cls . getName () \uff09 ; // \u83b7\u53d6\u5168\u7c7b\u540d System . out . println ( cls . getSimpleName () \uff09 ; // \u83b7\u53d6\u7b80\u5355\u7c7b\u540d System . out . println ( cls . getPackage ()); // \u83b7\u53d6\u5305\u4fe1\u606f // \u521b\u5efa\u5bf9\u8c61 Object o = cls . newInstance (); System . out . println ( \"o\u7684\u8fd0\u884c\u7c7b\u578b\" + o . getClass ()); // \u83b7\u53d6\u5171\u6709\u5c5e\u6027 Field age = cls . getField ( \"age\" ); System . out . println ( age . get ( o )); // \u8bbe\u7f6e\u5c5e\u6027 age . set ( cat , 2 ); // \u83b7\u53d6\u6240\u6709\u516c\u6709\u5c5e\u6027(\u5305\u62ec\u7236\u7c7b) Field [] fields = cls . getFields (); for ( Field field : fields ) { System . out . println ( field . getName () + \"\uff0c\" + field . get ( cat )); } // \u83b7\u53d6\u6240\u6709\u5c5e\u6027\uff0c\u5305\u62ec\u79c1\u6709\u7684 Field [] declaredFields = cls . getDeclaredFields (); //\u4ee5int\u5f62\u5f0f\u8fd4\u56de\u4fee\u9970\u7b26 // 0 - \u9ed8\u8ba4\u4fee\u9970\u7b26\uff0c1 - public\uff0c2 - private\uff0c4 - protected\uff0c8 - static\uff0c10 - final // \u7ec4\u5408\u5173\u7cfb\u4f1a\u76f4\u63a5\u76f8\u52a0\uff0c\u5982 public static \u662f 9 int num = field . getModifiers (); // \u5c5e\u6027\u7c7b\u578b int num2 = method . getModifiers (); // \u8fd4\u56de\u503c\u7c7b\u578b System . out . println ( field . getType ()); System . out . println ( method . getReturnType ()); // \u8c03\u7528\u65b9\u6cd5 Method eat = cls . getMethod ( \"play\" , String . class ); method . invoke ( eat , \"\u6bdb\u7ebf\u56e2\" ); // \u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u4e00\u5f8b\u8fd4\u56deObject // \u83b7\u53d6\u6240\u6709\u516c\u6709\u65b9\u6cd5 Method [] methods = cls . getMethods (); // \u83b7\u53d6\u6240\u6709\u65b9\u6cd5\uff0c\u5305\u62ec\u79c1\u6709\u7684 Method [] declaredMethods = cls . getDeclaredMethods (); // \u83b7\u5f97\u5f62\u53c2\u6570\u7ec4\u4fe1\u606f Class <?>[] parameterTypes = declaredMethods . getParameterTypes (); // \u65e0\u53c2\u6784\u9020\u5668 Constructor constructor1 = cls . getConstructor (); System . out . println ( constructor1 ); // \u6709\u53c2\u6784\u9020\u5668 Constructor constructor2 = cls . getConstructor ( String . class ); System . out . println ( constructor2 ); // \u83b7\u53d6\u672c\u7c7b\u6240\u6709\u6784\u9020\u5668\uff0c\u4e0d\u5305\u542b\u7236\u7c7b Constructor <?>[] declaredConstructors = cls . getDeclaredConstructor (); // \u6784\u9020\u5668\u7684\u53c2\u6570\u4fe1\u606f Class <?>[] types = declaredConstructor . getParameterTypes (); // \u83b7\u53d6\u7236\u7c7b\u4fe1\u606f Class <?> superClass = cls . getSuperClass (); // \u83b7\u53d6\u63a5\u53e3\u4fe1\u606f Class <?>[] interfaces = cls . getInterface (); // \u83b7\u53d6\u6ce8\u89e3\u4fe1\u606f Annotation [] annotations = cls . getAnnotations ();","title":"\uff08\u4e8c\uff09\u53cd\u5c04\u57fa\u7840\u8bed\u6cd5"},{"location":"Java%E9%AB%98%E7%BA%A7/#6-class","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 Class <?> cls = Class . forName ( path ); // 1 \u76f4\u63a5\u521b\u5efa\uff0c\u5728Java9\u4e4b\u540e\u5df2\u7ecf\u88ab\u5f03\u7528 Object cat1 = cls . newInstance (); // 2 \u516c\u6709\u6784\u9020\u5668 Constructor <?> constructor1 = cls . getConstructor ( String . class ); Object cat2 = constructor1 . newInstance ( \"\u732b\u732b\" ); // 3 \u79c1\u6709\u6784\u9020\u5668 Constructor <?> constructor2 = cls . getDeclaredConstructor ( String . class , int . class ); constructor2 . setAccessible ( true ); // \u5141\u8bb8\u66b4\u529b\u8bbf\u95ee\u79c1\u6709\u6784\u9020\u5668\uff0c\u79c1\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u540c\u7406 Object cat3 = constructor2 . newInstance ( \"\u732b\u732b\u732b\" , 3 );","title":"6. \u901a\u8fc7Class\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u6cd5"},{"location":"Java%E9%AB%98%E7%BA%A7/#_7","text":"","title":"\uff08\u4e09\uff09\u53cd\u5c04\u6027\u80fd"},{"location":"Java%E9%AB%98%E7%BA%A7/#1_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 public class Index { public static void main ( String [] args ) { m1 (); m2 (); } // \u666e\u901a\u8c03\u7528\u65b9\u6cd5 public static void m1 () { Cat cat = new Cat (); long start = System . currentTimeMillis (); for ( int i = 0 ; i < 90000000 ; i ++ ) { cat . eat (); } long end = System . currentTimeMillis (); System . out . println ( \"m1()\u8017\u65f6\uff1a\" + ( end - start ) + \"\u6beb\u79d2\" ); } // \u53cd\u5c04\u8c03\u7528\u65b9\u6cd5 public static void m2 () { try { Class cls = Class . forName ( \"com.cuc.rg.reflection.Cat\" ); Object o = cls . newInstance (); Method eat = cls . getMethod ( \"eat\" ); long start = System . currentTimeMillis (); for ( int i = 0 ; i < 90000000 ; i ++ ) { eat . invoke ( o ); } long end = System . currentTimeMillis (); System . out . println ( \"m2()\u8017\u65f6\uff1a\" + ( end - start ) + \"\u6beb\u79d2\" ); } catch ( Exception e ) { e . printStackTrace (); } } } /* \u8f93\u51fa\uff1a m1()\u8017\u65f6\uff1a8\u6beb\u79d2 m2()\u8017\u65f6\uff1a530\u6beb\u79d2 */","title":"1. \u5bf9\u6bd4"},{"location":"Java%E9%AB%98%E7%BA%A7/#2_3","text":"1 2 3 4 5 6 7 8 // \u5728\u53cd\u5c04\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u53d6\u6d88\u8bbf\u95ee\u68c0\u6d4b // \u80fd\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f18\u5316\u6548\u7387 eat . setAccessible ( true ); /* \u8f93\u51fa\uff1a m1()\u8017\u65f6\uff1a9\u6beb\u79d2 m2()\u8017\u65f6\uff1a232\u6beb\u79d2 */","title":"2. \u4f18\u5316"},{"location":"Java%E9%AB%98%E7%BA%A7/#_8","text":"","title":"\uff08\u56db\uff09\u4f8b\u9898"},{"location":"Java%E9%AB%98%E7%BA%A7/#1_5","text":"\u4f7f\u7528\u53cd\u5c04\u521b\u5efa PrivateTest \u5bf9\u8c61\uff0c\u4fee\u6539\u5176\u79c1\u6709\u5c5e\u6027 name \uff0c\u5e76\u8c03\u7528 getName \u65b9\u6cd5\u8f93\u51fa\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 public class Index { public static void main ( String [] args ) throws Exception { // \u6784\u9020\u5bf9\u8c61 Class < PrivateTest > cls = PrivateTest . class ; Constructor <?> constructor = cls . getConstructor (); PrivateTest test = ( PrivateTest ) constructor . newInstance (); // \u83b7\u5f97\u79c1\u6709\u5c5e\u6027\uff0c\u5e76\u4fee\u6539 Field name = cls . getDeclaredField ( \"name\" ); name . setAccessible ( true ); name . set ( test , \"\u674e\u56db\" ); // \u83b7\u5f97\u65b9\u6cd5\u5e76\u8f93\u51fa Method method = cls . getMethod ( \"getName\" ); System . out . println ( method . invoke ( test )); } } class PrivateTest { public PrivateTest () { } private String name = \"\u5f20\u4e09\" ; public String getName () { return name ; }","title":"1. \u4f8b\u4e00"},{"location":"Java%E9%AB%98%E7%BA%A7/#2_4","text":"\u4f7f\u7528\u53cd\u5c04\u6253\u5370 File \u7684\u6240\u6709\u6784\u9020\u5668\uff0c\u4f7f\u7528 newInstance() \u83b7\u53d6 File \u5bf9\u8c61\uff0c\u5e76\u5728 e \u76d8\u521b\u5efa\u6587\u4ef6\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Index { public static void main ( String [] args ) throws Exception { // \u6253\u5370\u6784\u9020\u5668 Class <?> cls = Class . forName ( \"java.io.File\" ); Constructor <?>[] declaredConstructors = cls . getDeclaredConstructors (); for ( Constructor constructor : declaredConstructors ) { System . out . println ( constructor ); } // \u521b\u5efa\u5bf9\u8c61 Constructor <?> constructor = cls . getDeclaredConstructor ( String . class ); Object file = constructor . newInstance ( \"e:/\u80cc\u666f/test.txt\" ); // \u8c03\u7528\u65b9\u6cd5\u521b\u5efa\u6587\u4ef6 Method createNewFile = cls . getDeclaredMethod ( \"createNewFile\" ); createNewFile . invoke ( file ); } }","title":"2. \u4f8b\u4e8c"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"Kotlin \u57fa\u7840 \u00b6 1. \u6761\u4ef6\u8868\u8fbe\u5f0f \u00b6 1 2 3 4 5 6 7 val answerString = when { count == 42 -> \"I have the answer.\" count > 35 -> \"The answer is close.\" else -> \"The answer eludes me.\" } println ( answerString ) 2. lambda\u8868\u8fbe\u5f0f\u8bed\u6cd5 \u00b6 <\u53d8\u91cf> = { <\u4f20\u5165\u53c2\u6570> -> <\u8fd4\u56de\u503c> } 1 2 3 val sum : ( Int , Int ) -> Int = { x : Int , y : Int -> x + y } // \u7b80\u5316\u540e\u5982\u4e0b val sum = { x : Int , y : Int -> x + y } 3.\u533f\u540d\u51fd\u6570 \u00b6 1 2 3 4 5 6 7 // \u58f0\u660e val Func : ( String ) -> Int = { input -> input . length } // \u8c03\u7528 val len : Int = Func ( \"Android\" ) 4. \u9ad8\u9636\u51fd\u6570 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 // \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 val Func1 ( str : String , Func2 :( String ) -> Int ): Int { return Func2 ( str ) } // \u8c03\u7528 Func1 ( \"kotlin\" , { input -> input . length }) // \u82e5\u533f\u540d\u51fd\u6570\u662f\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a Func1 ( \"kotlin\" ){ input -> input . length } 5. \u4f34\u751f\u5bf9\u8c61 \u00b6 \u76f8\u5f53\u4e8e static \u5173\u952e\u5b57 1 2 3 4 5 6 7 class LoginFragment : Fragment (){ // ... companion object { private val num : Int = 10 private const val TAG = \"LoginFragment\" } } 6. \u5c5e\u6027\u59d4\u6258 \u00b6 1 2 // viewModels \u53ef\u68c0\u7d22\u5f53\u524d Fragment \u7684 ViewModel private val viewModel : LoginViewModel by viewModels () 7. ! \u3001 !! \u548c ? \u00b6 String! \u53ef\u4ee5\u8868\u793a String \u6216 String? !! \u8868\u793a\u5de6\u4fa7\u7684\u53d8\u91cf\u4e3a\u975e\u7a7a\uff0c\u5982\uff1a 1 2 val account = Account ( \"name\" , \"type\" ) val accountName = account . name !! . trim () 8. lateinit \u00b6 \u901a\u8fc7 lateinit \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u907f\u514d\u5728\u6784\u5efa\u5bf9\u8c61\u65f6\u521d\u59cb\u5316\u5c5e\u6027 \u5982\u5c06\u4e0b\u9762\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 class LoginFragment : Fragment () { private var statusTextView : TextView? = null // \u6700\u597d\u4f7f\u7528lateinit override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) statusTextView = view . findViewById ( R . id . status_text_view ) statusTextView ?. setText ( R . string . auth_failed ) } } \u6539\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 class LoginFragment : Fragment () { private lateinit var statusTextView : TextView override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) statusTextView = view . findViewById ( R . id . status_text_view ) statusTextView . setText ( R . string . auth_failed ) } } 9. \u6570\u636e\u53cc\u5411\u7ed1\u5b9a\u2014\u2014DataBinding\u548cViewBinding \u00b6 ViewBinding \u6bd4 DataBinding \u6027\u80fd\u8981\u66f4\u597d\uff0c\u8fd9\u91cc\u4ecb\u7ecd ViewBinding \u7684\u7528\u6cd5\uff1a 1. build.gradle\u4e2d\u6dfb\u52a0\u652f\u6301 \u00b6 1 2 3 4 5 android { buildFeatures { viewBinding true } } 2. Activity\u4e2d\u4f7f\u7528 \u00b6 \u4f7f\u7528\u524d\uff1a 1 2 3 4 5 6 class MainActivity : AppCompatActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContentView ( R . layout . activity_main ) } } \u4f7f\u7528\u540e\uff1a 1 2 3 4 5 6 7 8 9 class MainActivity : AppCompatActivity () { private lateinit var binding : ActivityMainBinding // \u58f0\u660e\u79c1\u6709\u53d8\u91cf override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityMainBinding . inflate ( layoutInflater ) // \u4f7f\u7528inflate()\u83b7\u53d6\u5b9e\u4f8b setContentView ( binding . root ) // \u8bbe\u7f6e\u89c6\u56fe } } 3. Fragment\u4e2d\u4f7f\u7528 \u00b6 \u4f7f\u7528\u524d\uff1a 1 2 3 4 5 6 7 8 9 10 11 class FirstFragment : Fragment () { override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? { // Inflate the layout for this fragment return inflater . inflate ( R . layout . fragment_first , container , false ) } } \u4f7f\u7528\u540e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class FirstFragment : Fragment () { private var _binding : FragmentFirstBinding? = null private val binding get () = _binding !! // \u83b7\u53d6_binging\u7684\u975e null \u5b9e\u4f8b override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? { _binding = FragmentFirstBinding . inflate ( inflater , container , false ) return binding . root // \u8fd4\u56de\u89c6\u56fe } override fun onDestroyView () { super . onDestroyView () _binding = null } } \u53c2\u8003\u535a\u5ba2: \u5728 Android \u4e2d\u4f7f\u7528 ViewBinding DataBinding\u548cViewBinding 10. Obsever \u00b6 \u4e00\u4e2a\u88ab\u89c2\u5bdf\u8005 (\u591c) \u548c\u591a\u4e2a\u89c2\u5bdf\u8005 (\u5341\u5927\u5bb6\u65cf\u3001\u5e15\u683c\u3001\u5409\u9ed1\u5fb7\u3001\u6606\u7b49) \u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u88ab\u89c2\u5bdf\u8005\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u901a\u77e5\u6240\u6709\u89c2\u5bdf\u8005\u53d1\u751f\u6539\u53d8 11. Fragment\u7684\u751f\u547d\u5468\u671f \u00b6","title":"kotlin\u5b66\u4e60\u7b14\u8bb0"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#kotlin","text":"","title":"Kotlin \u57fa\u7840"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#1","text":"1 2 3 4 5 6 7 val answerString = when { count == 42 -> \"I have the answer.\" count > 35 -> \"The answer is close.\" else -> \"The answer eludes me.\" } println ( answerString )","title":"1. \u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#2-lambda","text":"<\u53d8\u91cf> = { <\u4f20\u5165\u53c2\u6570> -> <\u8fd4\u56de\u503c> } 1 2 3 val sum : ( Int , Int ) -> Int = { x : Int , y : Int -> x + y } // \u7b80\u5316\u540e\u5982\u4e0b val sum = { x : Int , y : Int -> x + y }","title":"2. lambda\u8868\u8fbe\u5f0f\u8bed\u6cd5"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#3","text":"1 2 3 4 5 6 7 // \u58f0\u660e val Func : ( String ) -> Int = { input -> input . length } // \u8c03\u7528 val len : Int = Func ( \"Android\" )","title":"3.\u533f\u540d\u51fd\u6570"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#4","text":"1 2 3 4 5 6 7 8 9 10 11 12 // \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 val Func1 ( str : String , Func2 :( String ) -> Int ): Int { return Func2 ( str ) } // \u8c03\u7528 Func1 ( \"kotlin\" , { input -> input . length }) // \u82e5\u533f\u540d\u51fd\u6570\u662f\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a Func1 ( \"kotlin\" ){ input -> input . length }","title":"4. \u9ad8\u9636\u51fd\u6570"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#5","text":"\u76f8\u5f53\u4e8e static \u5173\u952e\u5b57 1 2 3 4 5 6 7 class LoginFragment : Fragment (){ // ... companion object { private val num : Int = 10 private const val TAG = \"LoginFragment\" } }","title":"5. \u4f34\u751f\u5bf9\u8c61"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#6","text":"1 2 // viewModels \u53ef\u68c0\u7d22\u5f53\u524d Fragment \u7684 ViewModel private val viewModel : LoginViewModel by viewModels ()","title":"6. \u5c5e\u6027\u59d4\u6258"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#7","text":"String! \u53ef\u4ee5\u8868\u793a String \u6216 String? !! \u8868\u793a\u5de6\u4fa7\u7684\u53d8\u91cf\u4e3a\u975e\u7a7a\uff0c\u5982\uff1a 1 2 val account = Account ( \"name\" , \"type\" ) val accountName = account . name !! . trim ()","title":"7. !\u3001!!\u548c?"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#8-lateinit","text":"\u901a\u8fc7 lateinit \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u907f\u514d\u5728\u6784\u5efa\u5bf9\u8c61\u65f6\u521d\u59cb\u5316\u5c5e\u6027 \u5982\u5c06\u4e0b\u9762\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 class LoginFragment : Fragment () { private var statusTextView : TextView? = null // \u6700\u597d\u4f7f\u7528lateinit override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) statusTextView = view . findViewById ( R . id . status_text_view ) statusTextView ?. setText ( R . string . auth_failed ) } } \u6539\u4e3a\uff1a 1 2 3 4 5 6 7 8 9 10 class LoginFragment : Fragment () { private lateinit var statusTextView : TextView override fun onViewCreated ( view : View , savedInstanceState : Bundle?) { super . onViewCreated ( view , savedInstanceState ) statusTextView = view . findViewById ( R . id . status_text_view ) statusTextView . setText ( R . string . auth_failed ) } }","title":"8. lateinit"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#9-databindingviewbinding","text":"ViewBinding \u6bd4 DataBinding \u6027\u80fd\u8981\u66f4\u597d\uff0c\u8fd9\u91cc\u4ecb\u7ecd ViewBinding \u7684\u7528\u6cd5\uff1a","title":"9. \u6570\u636e\u53cc\u5411\u7ed1\u5b9a\u2014\u2014DataBinding\u548cViewBinding"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#1-buildgradle","text":"1 2 3 4 5 android { buildFeatures { viewBinding true } }","title":"1. build.gradle\u4e2d\u6dfb\u52a0\u652f\u6301"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#2-activity","text":"\u4f7f\u7528\u524d\uff1a 1 2 3 4 5 6 class MainActivity : AppCompatActivity () { override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) setContentView ( R . layout . activity_main ) } } \u4f7f\u7528\u540e\uff1a 1 2 3 4 5 6 7 8 9 class MainActivity : AppCompatActivity () { private lateinit var binding : ActivityMainBinding // \u58f0\u660e\u79c1\u6709\u53d8\u91cf override fun onCreate ( savedInstanceState : Bundle?) { super . onCreate ( savedInstanceState ) binding = ActivityMainBinding . inflate ( layoutInflater ) // \u4f7f\u7528inflate()\u83b7\u53d6\u5b9e\u4f8b setContentView ( binding . root ) // \u8bbe\u7f6e\u89c6\u56fe } }","title":"2. Activity\u4e2d\u4f7f\u7528"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#3-fragment","text":"\u4f7f\u7528\u524d\uff1a 1 2 3 4 5 6 7 8 9 10 11 class FirstFragment : Fragment () { override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? { // Inflate the layout for this fragment return inflater . inflate ( R . layout . fragment_first , container , false ) } } \u4f7f\u7528\u540e\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class FirstFragment : Fragment () { private var _binding : FragmentFirstBinding? = null private val binding get () = _binding !! // \u83b7\u53d6_binging\u7684\u975e null \u5b9e\u4f8b override fun onCreateView ( inflater : LayoutInflater , container : ViewGroup?, savedInstanceState : Bundle? ): View? { _binding = FragmentFirstBinding . inflate ( inflater , container , false ) return binding . root // \u8fd4\u56de\u89c6\u56fe } override fun onDestroyView () { super . onDestroyView () _binding = null } } \u53c2\u8003\u535a\u5ba2: \u5728 Android \u4e2d\u4f7f\u7528 ViewBinding DataBinding\u548cViewBinding","title":"3. Fragment\u4e2d\u4f7f\u7528"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#10-obsever","text":"\u4e00\u4e2a\u88ab\u89c2\u5bdf\u8005 (\u591c) \u548c\u591a\u4e2a\u89c2\u5bdf\u8005 (\u5341\u5927\u5bb6\u65cf\u3001\u5e15\u683c\u3001\u5409\u9ed1\u5fb7\u3001\u6606\u7b49) \u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u88ab\u89c2\u5bdf\u8005\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u901a\u77e5\u6240\u6709\u89c2\u5bdf\u8005\u53d1\u751f\u6539\u53d8","title":"10. Obsever"},{"location":"kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#11-fragment","text":"","title":"11. Fragment\u7684\u751f\u547d\u5468\u671f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","text":"\u8bbe\u8ba1\u6a21\u5f0f \u00b6 \u7c7b\u56fe \u00b6 \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u516d\u5927\u539f\u5219 \u00b6 \u5355\u4e00\u804c\u8d23\u539f\u5219 \u00b6 \u5f00\u653e\u5c01\u95ed\u539f\u5219 \u00b6 \u4f9d\u8d56\u5012\u7f6e\u539f\u5219 \u00b6 \u8fea\u7c73\u7279\u6cd5\u5219 \u00b6 \u5355\u4f8b\u6a21\u5f0f \u00b6 \u997f\u6c49\u6a21\u5f0f \u00b6 \u6784\u9020\u5668\u79c1\u6709\u5316 \u5728\u7c7b\u5185\u90e8\u76f4\u63a5\u521b\u5efa static \u5bf9\u8c61 \u63d0\u4f9b\u8fd4\u56de\u5b9e\u4f8b\u7684 static \u65b9\u6cd5\uff0c\u4e0d\u521b\u5efa\u5bf9\u8c61\u4e5f\u4f1a\u6709\u8be5\u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 public class Singleton { private String name ; private static Singleton instance = new Singleton ( \"\u5f20\u4e09\" ); private Singleton ( String name ){ this . name = name ; } public static Singleton getInstance (){ return instance ; } } \u61d2\u6c49\u6a21\u5f0f \u00b6 \u6784\u9020\u5668\u79c1\u6709\u5316 \u5b9a\u4e49 static \u5b9e\u4f8b \u63d0\u4f9b\u8fd4\u56de\u8be5\u5b9e\u4f8b\u7684 static \u65b9\u6cd5\uff0c\u5f53\u7528\u6237\u8c03\u7528\u65f6\u624d\u521b\u5efa\u5bf9\u8c61\u5e76\u8fd4\u56de 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Singleton { private String name ; private static Singleton instance ; private Singleton ( String name ){ this . name = name ; } public static Singleton getInstance (){ if ( instance == null ){ synchronized ( this ){ if ( instance == null ){ instance = new Singleton ( \"\u5f20\u4e09\" ); } } } return instance ; } } \u7b80\u5355\u5de5\u5382\u6a21\u5f0f \u00b6 \u8be5\u6a21\u5f0f\u4e3b\u8981\u8d1f\u8d23\u89e3\u51b3\u5bf9\u8c61\u7684\u521b\u5efa\u95ee\u9898\uff0c\u5de5\u5382\u7c7b\u8d1f\u8d23\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u751f\u4ea7\u5bf9\u8c61\u3002 \u4f18\u70b9\uff1a \u5ba2\u6237\u7aef\u514d\u4e8e\u8d1f\u8d23\u521b\u5efa\u4ea7\u54c1\u7684\u8d23\u4efb\u3002 \u53ef\u4ee5\u4e0d\u4fee\u6539\u5ba2\u6237\u7aef\u4ee3\u7801\u589e\u52a0\u4ea7\u54c1\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7075\u6d3b\u6027\u3002 \u7f3a\u70b9\uff1a \u5de5\u5382\u7c7b\u96c6\u4e2d\u4e86\u6240\u6709\u521b\u5efa\u5bf9\u8c61\u7684\u903b\u8f91\uff0c\u5bb9\u6613\u5bf9\u7cfb\u7edf\u9020\u6210\u5f71\u54cd\u3002 \u4e00\u65e6\u5546\u54c1\u53d1\u751f\u589e\u51cf\uff0c\u5c31\u8981\u4fee\u6539\u5de5\u5382\u7c7b\u7834\u574f\u5c01\u88c5\u6027\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u6240\u9700\u521b\u5efa\u5bf9\u8c61\u6570\u91cf\u8f83\u5c11\uff0c\u6539\u52a8\u5c11 \u5ba2\u6237\u7aef\u65e0\u9700\u5173\u5fc3\u5bf9\u8c61\u7684\u521b\u5efa \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f \u00b6 \u4f18\u70b9\uff1a \u5411\u5ba2\u6237\u9690\u85cf\u4e86\u54ea\u79cd\u5177\u4f53\u4ea7\u54c1\u7c7b\u88ab\u5b9e\u4f8b\u5316\u8fd9\u4e00\u7ec6\u8282\u3002 \u52a0\u5165\u65b0\u4ea7\u54c1\u65f6\uff0c\u65e0\u9700\u4fee\u6539\u62bd\u8c61\u5de5\u5382\u548c\u62bd\u8c61\u4ea7\u54c1\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u6709\u975e\u5e38\u826f\u597d\u7684\u6269\u5c55\u6027\u3002 \u7f3a\u70b9\uff1a \u5728\u6dfb\u52a0\u65b0\u4ea7\u54c1\u65f6\uff0c\u8fd8\u8981\u63d0\u4f9b\u5bf9\u5e94\u7684\u5177\u4f53\u5de5\u5382\u7c7b\uff0c\u7cfb\u7edf\u4e2d\u7c7b\u7684\u4e2a\u6570\u5c06\u6210\u5bf9\u589e\u52a0\uff0c\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002 \u5c06\u903b\u8f91\u5224\u65ad\u79fb\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\uff0c\u589e\u52a0\u5ba2\u6237\u7aef\u8d1f\u62c5\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528\u53cd\u5c04\u89e3\u51b3\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u540c\u5de5\u5382\u6a21\u5f0f\u3002 \u7b56\u7565\u6a21\u5f0f \u00b6 \u5728\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u521b\u5efa\u4ea7\u54c1\u7684\u8d23\u4efb\u53c8\u653e\u56de\u5ba2\u6237\u7aef\uff0c\u91c7\u7528\u591a\u6001\uff0c Context \u4e2d\u4f7f\u7528\u7236\u7c7b\u53c2\u6570\uff0c\u4f20\u5165\u5b50\u7c7b\u5bf9\u8c61\u505a\u51fa\u81ea\u5df1\u7684\u884c\u4e3a\u3002 \u4f18\u70b9\uff1a \u7b97\u6cd5\u53ef\u4ee5\u81ea\u7531\u5207\u6362\uff0c\u6269\u5c55\u6027\u597d \u91c7\u7528\u591a\u6001\uff0c\u907f\u514d\u4f7f\u7528\u591a\u91cd\u6761\u4ef6\u5224\u65ad \u7f3a\u70b9\uff1a \u5ba2\u6237\u7aef\u8981\u8d1f\u8d23\u521b\u5efa\u4ea7\u54c1\uff0c\u529f\u80fd\u91cd \u6240\u6709\u7b56\u7565\u7c7b\u90fd\u9700\u8981\u5bf9\u5916\u66b4\u9732 \u4f7f\u7528\u573a\u666f\uff1a \u82e5\u4e00\u4e2a\u7cfb\u7edf\u91cc\u9762\u6709\u8bb8\u591a\u7c7b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u4ec5\u5728\u4e8e\u5b83\u4eec\u7684\u884c\u4e3a\uff0c\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u53ef\u4ee5\u52a8\u6001\u5730\u8ba9\u4e00\u4e2a\u5bf9\u8c61\u5728\u8bb8\u591a\u884c\u4e3a\u4e2d\u9009\u62e9\u4e00\u79cd\u884c\u4e3a\u3002 \u4e00\u4e2a\u7cfb\u7edf\u9700\u8981\u52a8\u6001\u5730\u5728\u51e0\u79cd\u7b97\u6cd5\u4e2d\u9009\u62e9\u4e00\u79cd\u3002 \u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u6709\u5f88\u591a\u7684\u884c\u4e3a\uff0c\u5982\u679c\u4e0d\u7528\u6070\u5f53\u7684\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u884c\u4e3a\u5c31\u53ea\u597d\u4f7f\u7528\u591a\u91cd\u7684\u6761\u4ef6\u9009\u62e9\u8bed\u53e5\u6765\u5b9e\u73b0\u3002 \u6539\u8fdb\uff1a\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u548c\u7b56\u7565\u6a21\u5f0f\u7ed3\u5408 \u5c06\u5bf9\u8c61\u7684\u521b\u5efa\u653e\u5728 Context \u7c7b\u4e2d\uff0c\u518d\u4f7f\u7528\u591a\u6001\u505a\u51fa\u5bf9\u8c61\u5404\u81ea\u7684\u884c\u4e3a\u3002 \u88c5\u9970\u6a21\u5f0f \u00b6 \u82e5\u6ca1\u6709 Component \uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba9 Decorator \u7ee7\u627f ConcreteComponent \u3002\u82e5\u53ea\u6709\u4e00\u4e2a ConcreteDecorator \uff0c\u90a3\u5c31\u6ca1\u5fc5\u8981\u52a0 Decorator \u7c7b\u3002 \u5c31\u662f\u5bf9\u4e8e \u4eba-\u8863\u670d-\u88e4\u5b50-\u978b\u5b50 \u7684\u7ec4\u5408\uff0c\u5148\u521b\u5efa\u4eba\u5bf9\u8c61\uff0c\u8ba9\u8863\u670d\u5305\u88f9\u4eba\uff0c\u7136\u540e\u8ba9\u88e4\u5b50\u5305\u88f9\u8863\u670d\uff0c\u978b\u5b50\u5305\u88f9\u88e4\u5b50\uff1a \u4f18\u70b9\uff1a \u6709\u6548\u5730\u628a\u7c7b\u7684\u6838\u5fc3\u804c\u8d23\u548c\u88c5\u9970\u529f\u80fd\u533a\u5206\u5f00\uff0c\u4e14\u53bb\u9664\u4e86\u91cd\u590d\u903b\u8f91 \u4e3a\u5df2\u6709\u7684\u529f\u80fd\u52a8\u6001\u5730\u6dfb\u52a0\u66f4\u591a\u7684\u529f\u80fd \u7f3a\u70b9\uff1a \u88c5\u9970\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u591a\u5c42\u88c5\u9970\u590d\u6742\u5bb9\u6613\u51fa\u9519 \u4f7f\u7528\u573a\u666f\uff1a \u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5c31\u50cf\u642d\u914d\u8863\u670d\u4e00\u6837\u53ef\u4ee5\u6709\u597d\u51e0\u79cd\u7ec4\u5408\u65b9\u5f0f \u6269\u5c55\u4e00\u4e2a\u7c7b\u7684\u529f\u80fd \u52a8\u6001\u589e\u52a0\u529f\u80fd\uff0c\u52a8\u6001\u64a4\u9500 \u4ee3\u7406\u6a21\u5f0f \u00b6 \u4f18\u70b9\uff1a \u4ee3\u7406\u6a21\u5f0f\u80fd\u5c06\u4ee3\u7406\u5bf9\u8c61\u4e0e\u771f\u5b9e\u88ab\u8c03\u7528\u7684\u76ee\u6807\u5bf9\u8c61\u5206\u79bb\u3002 \u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u7cfb\u7edf\u7684\u8026\u5408\u5ea6\uff0c\u6269\u5c55\u6027\u597d\u3002 \u53ef\u4ee5\u8d77\u5230\u4fdd\u62a4\u76ee\u6807\u5bf9\u8c61\u7684\u4f5c\u7528\u3002 \u53ef\u4ee5\u5bf9\u76ee\u6807\u5bf9\u8c61\u7684\u529f\u80fd\u589e\u5f3a\u3002 \u7f3a\u70b9\uff1a \u4ee3\u7406\u6a21\u5f0f\u4f1a\u9020\u6210\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\u7c7b\u7684\u6570\u91cf\u589e\u52a0\u3002 \u5728\u5ba2\u6237\u7aef\u548c\u76ee\u6807\u5bf9\u8c61\u589e\u52a0\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u4f1a\u9020\u6210\u8bf7\u6c42\u5904\u7406\u901f\u5ea6\u53d8\u6162\u3002 \u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u8fdc\u7a0b\u4ee3\u7406\uff1a \u865a\u62df\u4ee3\u7406\uff1a\u63a8\u8fdf\u771f\u6b63\u6240\u9700\u5bf9\u8c61\u5b9e\u4f8b\u5316\u65f6\u95f4. \u5728\u9700\u8981\u771f\u6b63\u7684\u5bf9\u8c61\u5de5\u4f5c\u4e4b\u524d, \u5982\u679c\u4ee3\u7406\u5bf9\u8c61\u80fd\u591f\u5904\u7406, \u90a3\u4e48\u6682\u65f6\u4e0d\u9700\u8981\u771f\u6b63\u5bf9\u8c61\u6765\u51fa\u624b \u5b89\u5168\u4ee3\u7406\uff1a\u5373\u4e0a\u56fe\u4e2d\u63d0\u5230\u7684\u60c5\u51b5\uff0c\u7528\u4e8e\u63a7\u5236\u771f\u5b9e\u5bf9\u8c61\u7684\u8bbf\u95ee\u6743\u9650 \u667a\u80fd\u6307\u9488 \u539f\u578b\u6a21\u5f0f \u00b6 (\u6ce8\u610f\uff0cJava\u4e2d\u5df2\u6709\u5b9e\u73b0\u597d\u7684 Prototype \u63a5\u53e3\uff0c\u53eb Cloneable \uff0c\u4f46\u7531\u4e8e\u5b83\u662f\u6d45\u62f7\u8d1d\uff0c\u6240\u4ee5\u7c7b\u4e2d\u5b58\u5728\u5176\u4ed6\u5bf9\u8c61\u65f6\uff0c\u8981\u5728\u6700\u5185\u5c42\u5bf9\u8c61\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5176\u4ed6\u90e8\u5206\u9010\u53d8\u91cf\u62f7\u8d1d) \u4f18\u70b9\uff1a \u4f7f\u7528\u539f\u578b\u6a21\u5f0f\u521b\u5efa\u5bf9\u8c61\u6bd4\u76f4\u63a5new\u4e00\u4e2a\u5bf9\u8c61\u5728\u6027\u80fd\u4e0a\u8981\u597d\u7684\u591a\uff0c\u56e0\u4e3aObject\u7c7b\u7684clone\u65b9\u6cd5\u662f\u4e00\u4e2a\u672c\u5730\u65b9\u6cd5\uff0c\u5b83\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u4e2d\u7684\u4e8c\u8fdb\u5236\u6d41\uff0c\u7279\u522b\u662f\u590d\u5236\u5927\u5bf9\u8c61\u65f6\uff0c\u6027\u80fd\u7684\u5dee\u522b\u975e\u5e38\u660e\u663e\u3002 \u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u3002 \u7f3a\u70b9\uff1a \u4f7f\u7528\u539f\u578b\u6a21\u5f0f\u65f6\u4e0d\u80fd\u591f\u6709 final \u5bf9\u8c61\uff0c\u56e0\u4e3a\u5e26\u6709 final \u7c7b\u578b\u7684\u5bf9\u8c61\u65e0\u6cd5\u8fdb\u884c\u62f7\u8d1d\u3002 Object \u7c7b\u7684 clone \u65b9\u6cd5\u662f\u6d45\u62f7\u8d1d\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u53ea\u80fd\u591f\u53e6\u884c\u62f7\u8d1d\u3002 \u4f7f\u7528\u539f\u578b\u6a21\u5f0f\u590d\u5236\u5bf9\u8c61\u4e0d\u4f1a\u8c03\u7528\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u800c\u662f\u901a\u8fc7\u8c03\u7528 Object \u7c7b\u7684 clone \u65b9\u6cd5\u6765\u5b8c\u6210\u7684\uff0c\u5b83\u76f4\u63a5\u5728\u5185\u5b58\u4e2d\u590d\u5236\u6570\u636e\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8c03\u7528\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u3002\u5355\u4f8b\u6a21\u5f0f\u4e2d\uff0c\u53ea\u8981\u5c06\u6784\u9020\u65b9\u6cd5\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5355\u4f8b\u3002\u4f46\u662f clone \u65b9\u6cd5\u76f4\u63a5\u65e0\u89c6\u79c1\u6709\u8bbf\u95ee\u6743\u9650 \uff0c\u5355\u4f8b\u6a21\u5f0f\u548c\u539f\u578b\u6a21\u5f0f\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u662f\u51b2\u7a81\u7684\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u6027\u80fd\u548c\u5b89\u5168\u8981\u6c42\u7684\u573a\u666f\u3002 \u901a\u8fc7 new \u4ea7\u751f\u4e00\u4e2a\u5bf9\u8c61\u975e\u5e38\u7e41\u7410\u3002 \u4e00\u4e2a\u5bf9\u8c61\u591a\u4e2a\u4fee\u6539\u8005\u7684\u573a\u666f\u3002 \u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u539f\u578b\u6a21\u5f0f\u5f88\u5c11\u5355\u72ec\u51fa\u73b0\uff0c\u4e00\u822c\u662f\u548c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u4e00\u8d77\u51fa\u73b0\uff0c\u901a\u8fc7 clone \u7684\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u7531\u5de5\u5382\u65b9\u6cd5\u63d0\u4f9b\u7ed9\u8c03\u7528\u8005\u3002 \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f \u00b6 \u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 public abstract class Template { public abstract void job (); // \u8ba1\u7b97job\u8fd0\u884c\u7684\u65f6\u95f4 public void calculateTime () { long startTime = System . currentTimeMillis (); job (); long endTime = System . currentTimeMillis (); System . out . println ( \"\u8017\u65f6\uff1a\" + ( endTime - startTime )); } } public class A extends Template { @Override public void job () { int ans = 0 ; for ( int i = 1 ; i < 100000 ; i ++ ) { ans += i ; } } } public class B extends Template { @Override public void job () { int ans = 1 ; for ( int i = 1 ; i < 100000 ; i ++ ) { ans *= i ; } } } public class Main { public static void main ( String [] args ){ new AA (). calculateTime (); new BB (). calculateTime (); } } \u4f18\u70b9\uff1a \u628a\u4e0d\u4fbf\u7684\u884c\u4e3a\u642c\u5230\u8d85\u7c7b\uff0c\u53bb\u9664\u5b50\u7c7b\u7684\u91cd\u590d\u4ee3\u7801\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u7b26\u5408\u5f00\u95ed\u539f\u5219\u3002 \u5c06\u4e0d\u540c\u7684\u4ee3\u7801\u4e0d\u540c\u7684\u5b50\u7c7b\u4e2d\uff0c\u901a\u8fc7\u5bf9\u5b50\u7c7b\u7684\u6269\u5c55\u589e\u52a0\u65b0\u7684\u884c\u4e3a\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u6269\u5c55\u6027\u3002 \u7f3a\u70b9\uff1a \u6bcf\u4e00\u4e2a\u62bd\u8c61\u7c7b\u90fd\u9700\u8981\u4e00\u4e2a\u5b50\u7c7b\u6765\u5b9e\u73b0\uff0c\u8fd9\u6837\u5bfc\u81f4\u7c7b\u7684\u4e2a\u6570\u589e\u52a0\uff0c\u95f4\u63a5\u5730\u589e\u52a0\u4e86\u7cfb\u7edf\u5b9e\u73b0\u7684\u590d\u6742\u5ea6\u3002 \u7ee7\u627f\u5173\u7cfb\u81ea\u8eab\u7f3a\u70b9\uff0c\u5982\u679c\u7236\u7c7b\u6dfb\u52a0\u65b0\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u6240\u6709\u5b50\u7c7b\u90fd\u8981\u6539\u4e00\u904d\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u4e00\u7cfb\u5217\u6b65\u9aa4\u6784\u6210\u7684\u8fc7\u7a0b\uff0c\u4ece\u9ad8\u5c42\u6b21\u770b\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u7ec6\u8282\u7684\u5b9e\u73b0\u4e0a\u4e0d\u540c\u3002","title":"\u5927\u8bdd\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_1","text":"","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_2","text":"","title":"\u7c7b\u56fe"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_3","text":"","title":"\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u516d\u5927\u539f\u5219"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_4","text":"","title":"\u5355\u4e00\u804c\u8d23\u539f\u5219"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_5","text":"","title":"\u5f00\u653e\u5c01\u95ed\u539f\u5219"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_6","text":"","title":"\u4f9d\u8d56\u5012\u7f6e\u539f\u5219"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_7","text":"","title":"\u8fea\u7c73\u7279\u6cd5\u5219"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_8","text":"","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_9","text":"\u6784\u9020\u5668\u79c1\u6709\u5316 \u5728\u7c7b\u5185\u90e8\u76f4\u63a5\u521b\u5efa static \u5bf9\u8c61 \u63d0\u4f9b\u8fd4\u56de\u5b9e\u4f8b\u7684 static \u65b9\u6cd5\uff0c\u4e0d\u521b\u5efa\u5bf9\u8c61\u4e5f\u4f1a\u6709\u8be5\u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 public class Singleton { private String name ; private static Singleton instance = new Singleton ( \"\u5f20\u4e09\" ); private Singleton ( String name ){ this . name = name ; } public static Singleton getInstance (){ return instance ; } }","title":"\u997f\u6c49\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_10","text":"\u6784\u9020\u5668\u79c1\u6709\u5316 \u5b9a\u4e49 static \u5b9e\u4f8b \u63d0\u4f9b\u8fd4\u56de\u8be5\u5b9e\u4f8b\u7684 static \u65b9\u6cd5\uff0c\u5f53\u7528\u6237\u8c03\u7528\u65f6\u624d\u521b\u5efa\u5bf9\u8c61\u5e76\u8fd4\u56de 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public class Singleton { private String name ; private static Singleton instance ; private Singleton ( String name ){ this . name = name ; } public static Singleton getInstance (){ if ( instance == null ){ synchronized ( this ){ if ( instance == null ){ instance = new Singleton ( \"\u5f20\u4e09\" ); } } } return instance ; } }","title":"\u61d2\u6c49\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_11","text":"\u8be5\u6a21\u5f0f\u4e3b\u8981\u8d1f\u8d23\u89e3\u51b3\u5bf9\u8c61\u7684\u521b\u5efa\u95ee\u9898\uff0c\u5de5\u5382\u7c7b\u8d1f\u8d23\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u751f\u4ea7\u5bf9\u8c61\u3002 \u4f18\u70b9\uff1a \u5ba2\u6237\u7aef\u514d\u4e8e\u8d1f\u8d23\u521b\u5efa\u4ea7\u54c1\u7684\u8d23\u4efb\u3002 \u53ef\u4ee5\u4e0d\u4fee\u6539\u5ba2\u6237\u7aef\u4ee3\u7801\u589e\u52a0\u4ea7\u54c1\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7075\u6d3b\u6027\u3002 \u7f3a\u70b9\uff1a \u5de5\u5382\u7c7b\u96c6\u4e2d\u4e86\u6240\u6709\u521b\u5efa\u5bf9\u8c61\u7684\u903b\u8f91\uff0c\u5bb9\u6613\u5bf9\u7cfb\u7edf\u9020\u6210\u5f71\u54cd\u3002 \u4e00\u65e6\u5546\u54c1\u53d1\u751f\u589e\u51cf\uff0c\u5c31\u8981\u4fee\u6539\u5de5\u5382\u7c7b\u7834\u574f\u5c01\u88c5\u6027\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u6240\u9700\u521b\u5efa\u5bf9\u8c61\u6570\u91cf\u8f83\u5c11\uff0c\u6539\u52a8\u5c11 \u5ba2\u6237\u7aef\u65e0\u9700\u5173\u5fc3\u5bf9\u8c61\u7684\u521b\u5efa","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_12","text":"\u4f18\u70b9\uff1a \u5411\u5ba2\u6237\u9690\u85cf\u4e86\u54ea\u79cd\u5177\u4f53\u4ea7\u54c1\u7c7b\u88ab\u5b9e\u4f8b\u5316\u8fd9\u4e00\u7ec6\u8282\u3002 \u52a0\u5165\u65b0\u4ea7\u54c1\u65f6\uff0c\u65e0\u9700\u4fee\u6539\u62bd\u8c61\u5de5\u5382\u548c\u62bd\u8c61\u4ea7\u54c1\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u6709\u975e\u5e38\u826f\u597d\u7684\u6269\u5c55\u6027\u3002 \u7f3a\u70b9\uff1a \u5728\u6dfb\u52a0\u65b0\u4ea7\u54c1\u65f6\uff0c\u8fd8\u8981\u63d0\u4f9b\u5bf9\u5e94\u7684\u5177\u4f53\u5de5\u5382\u7c7b\uff0c\u7cfb\u7edf\u4e2d\u7c7b\u7684\u4e2a\u6570\u5c06\u6210\u5bf9\u589e\u52a0\uff0c\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002 \u5c06\u903b\u8f91\u5224\u65ad\u79fb\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\uff0c\u589e\u52a0\u5ba2\u6237\u7aef\u8d1f\u62c5\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528\u53cd\u5c04\u89e3\u51b3\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u540c\u5de5\u5382\u6a21\u5f0f\u3002","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_13","text":"\u5728\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u521b\u5efa\u4ea7\u54c1\u7684\u8d23\u4efb\u53c8\u653e\u56de\u5ba2\u6237\u7aef\uff0c\u91c7\u7528\u591a\u6001\uff0c Context \u4e2d\u4f7f\u7528\u7236\u7c7b\u53c2\u6570\uff0c\u4f20\u5165\u5b50\u7c7b\u5bf9\u8c61\u505a\u51fa\u81ea\u5df1\u7684\u884c\u4e3a\u3002 \u4f18\u70b9\uff1a \u7b97\u6cd5\u53ef\u4ee5\u81ea\u7531\u5207\u6362\uff0c\u6269\u5c55\u6027\u597d \u91c7\u7528\u591a\u6001\uff0c\u907f\u514d\u4f7f\u7528\u591a\u91cd\u6761\u4ef6\u5224\u65ad \u7f3a\u70b9\uff1a \u5ba2\u6237\u7aef\u8981\u8d1f\u8d23\u521b\u5efa\u4ea7\u54c1\uff0c\u529f\u80fd\u91cd \u6240\u6709\u7b56\u7565\u7c7b\u90fd\u9700\u8981\u5bf9\u5916\u66b4\u9732 \u4f7f\u7528\u573a\u666f\uff1a \u82e5\u4e00\u4e2a\u7cfb\u7edf\u91cc\u9762\u6709\u8bb8\u591a\u7c7b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u4ec5\u5728\u4e8e\u5b83\u4eec\u7684\u884c\u4e3a\uff0c\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u53ef\u4ee5\u52a8\u6001\u5730\u8ba9\u4e00\u4e2a\u5bf9\u8c61\u5728\u8bb8\u591a\u884c\u4e3a\u4e2d\u9009\u62e9\u4e00\u79cd\u884c\u4e3a\u3002 \u4e00\u4e2a\u7cfb\u7edf\u9700\u8981\u52a8\u6001\u5730\u5728\u51e0\u79cd\u7b97\u6cd5\u4e2d\u9009\u62e9\u4e00\u79cd\u3002 \u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u6709\u5f88\u591a\u7684\u884c\u4e3a\uff0c\u5982\u679c\u4e0d\u7528\u6070\u5f53\u7684\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u884c\u4e3a\u5c31\u53ea\u597d\u4f7f\u7528\u591a\u91cd\u7684\u6761\u4ef6\u9009\u62e9\u8bed\u53e5\u6765\u5b9e\u73b0\u3002 \u6539\u8fdb\uff1a\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u548c\u7b56\u7565\u6a21\u5f0f\u7ed3\u5408 \u5c06\u5bf9\u8c61\u7684\u521b\u5efa\u653e\u5728 Context \u7c7b\u4e2d\uff0c\u518d\u4f7f\u7528\u591a\u6001\u505a\u51fa\u5bf9\u8c61\u5404\u81ea\u7684\u884c\u4e3a\u3002","title":"\u7b56\u7565\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_14","text":"\u82e5\u6ca1\u6709 Component \uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba9 Decorator \u7ee7\u627f ConcreteComponent \u3002\u82e5\u53ea\u6709\u4e00\u4e2a ConcreteDecorator \uff0c\u90a3\u5c31\u6ca1\u5fc5\u8981\u52a0 Decorator \u7c7b\u3002 \u5c31\u662f\u5bf9\u4e8e \u4eba-\u8863\u670d-\u88e4\u5b50-\u978b\u5b50 \u7684\u7ec4\u5408\uff0c\u5148\u521b\u5efa\u4eba\u5bf9\u8c61\uff0c\u8ba9\u8863\u670d\u5305\u88f9\u4eba\uff0c\u7136\u540e\u8ba9\u88e4\u5b50\u5305\u88f9\u8863\u670d\uff0c\u978b\u5b50\u5305\u88f9\u88e4\u5b50\uff1a \u4f18\u70b9\uff1a \u6709\u6548\u5730\u628a\u7c7b\u7684\u6838\u5fc3\u804c\u8d23\u548c\u88c5\u9970\u529f\u80fd\u533a\u5206\u5f00\uff0c\u4e14\u53bb\u9664\u4e86\u91cd\u590d\u903b\u8f91 \u4e3a\u5df2\u6709\u7684\u529f\u80fd\u52a8\u6001\u5730\u6dfb\u52a0\u66f4\u591a\u7684\u529f\u80fd \u7f3a\u70b9\uff1a \u88c5\u9970\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u591a\u5c42\u88c5\u9970\u590d\u6742\u5bb9\u6613\u51fa\u9519 \u4f7f\u7528\u573a\u666f\uff1a \u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5c31\u50cf\u642d\u914d\u8863\u670d\u4e00\u6837\u53ef\u4ee5\u6709\u597d\u51e0\u79cd\u7ec4\u5408\u65b9\u5f0f \u6269\u5c55\u4e00\u4e2a\u7c7b\u7684\u529f\u80fd \u52a8\u6001\u589e\u52a0\u529f\u80fd\uff0c\u52a8\u6001\u64a4\u9500","title":"\u88c5\u9970\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_15","text":"\u4f18\u70b9\uff1a \u4ee3\u7406\u6a21\u5f0f\u80fd\u5c06\u4ee3\u7406\u5bf9\u8c61\u4e0e\u771f\u5b9e\u88ab\u8c03\u7528\u7684\u76ee\u6807\u5bf9\u8c61\u5206\u79bb\u3002 \u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u4e86\u7cfb\u7edf\u7684\u8026\u5408\u5ea6\uff0c\u6269\u5c55\u6027\u597d\u3002 \u53ef\u4ee5\u8d77\u5230\u4fdd\u62a4\u76ee\u6807\u5bf9\u8c61\u7684\u4f5c\u7528\u3002 \u53ef\u4ee5\u5bf9\u76ee\u6807\u5bf9\u8c61\u7684\u529f\u80fd\u589e\u5f3a\u3002 \u7f3a\u70b9\uff1a \u4ee3\u7406\u6a21\u5f0f\u4f1a\u9020\u6210\u7cfb\u7edf\u8bbe\u8ba1\u4e2d\u7c7b\u7684\u6570\u91cf\u589e\u52a0\u3002 \u5728\u5ba2\u6237\u7aef\u548c\u76ee\u6807\u5bf9\u8c61\u589e\u52a0\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u4f1a\u9020\u6210\u8bf7\u6c42\u5904\u7406\u901f\u5ea6\u53d8\u6162\u3002 \u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u8fdc\u7a0b\u4ee3\u7406\uff1a \u865a\u62df\u4ee3\u7406\uff1a\u63a8\u8fdf\u771f\u6b63\u6240\u9700\u5bf9\u8c61\u5b9e\u4f8b\u5316\u65f6\u95f4. \u5728\u9700\u8981\u771f\u6b63\u7684\u5bf9\u8c61\u5de5\u4f5c\u4e4b\u524d, \u5982\u679c\u4ee3\u7406\u5bf9\u8c61\u80fd\u591f\u5904\u7406, \u90a3\u4e48\u6682\u65f6\u4e0d\u9700\u8981\u771f\u6b63\u5bf9\u8c61\u6765\u51fa\u624b \u5b89\u5168\u4ee3\u7406\uff1a\u5373\u4e0a\u56fe\u4e2d\u63d0\u5230\u7684\u60c5\u51b5\uff0c\u7528\u4e8e\u63a7\u5236\u771f\u5b9e\u5bf9\u8c61\u7684\u8bbf\u95ee\u6743\u9650 \u667a\u80fd\u6307\u9488","title":"\u4ee3\u7406\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_16","text":"(\u6ce8\u610f\uff0cJava\u4e2d\u5df2\u6709\u5b9e\u73b0\u597d\u7684 Prototype \u63a5\u53e3\uff0c\u53eb Cloneable \uff0c\u4f46\u7531\u4e8e\u5b83\u662f\u6d45\u62f7\u8d1d\uff0c\u6240\u4ee5\u7c7b\u4e2d\u5b58\u5728\u5176\u4ed6\u5bf9\u8c61\u65f6\uff0c\u8981\u5728\u6700\u5185\u5c42\u5bf9\u8c61\u5b9e\u73b0\u8be5\u63a5\u53e3\uff0c\u5176\u4ed6\u90e8\u5206\u9010\u53d8\u91cf\u62f7\u8d1d) \u4f18\u70b9\uff1a \u4f7f\u7528\u539f\u578b\u6a21\u5f0f\u521b\u5efa\u5bf9\u8c61\u6bd4\u76f4\u63a5new\u4e00\u4e2a\u5bf9\u8c61\u5728\u6027\u80fd\u4e0a\u8981\u597d\u7684\u591a\uff0c\u56e0\u4e3aObject\u7c7b\u7684clone\u65b9\u6cd5\u662f\u4e00\u4e2a\u672c\u5730\u65b9\u6cd5\uff0c\u5b83\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u4e2d\u7684\u4e8c\u8fdb\u5236\u6d41\uff0c\u7279\u522b\u662f\u590d\u5236\u5927\u5bf9\u8c61\u65f6\uff0c\u6027\u80fd\u7684\u5dee\u522b\u975e\u5e38\u660e\u663e\u3002 \u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u3002 \u7f3a\u70b9\uff1a \u4f7f\u7528\u539f\u578b\u6a21\u5f0f\u65f6\u4e0d\u80fd\u591f\u6709 final \u5bf9\u8c61\uff0c\u56e0\u4e3a\u5e26\u6709 final \u7c7b\u578b\u7684\u5bf9\u8c61\u65e0\u6cd5\u8fdb\u884c\u62f7\u8d1d\u3002 Object \u7c7b\u7684 clone \u65b9\u6cd5\u662f\u6d45\u62f7\u8d1d\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u53ea\u80fd\u591f\u53e6\u884c\u62f7\u8d1d\u3002 \u4f7f\u7528\u539f\u578b\u6a21\u5f0f\u590d\u5236\u5bf9\u8c61\u4e0d\u4f1a\u8c03\u7528\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u800c\u662f\u901a\u8fc7\u8c03\u7528 Object \u7c7b\u7684 clone \u65b9\u6cd5\u6765\u5b8c\u6210\u7684\uff0c\u5b83\u76f4\u63a5\u5728\u5185\u5b58\u4e2d\u590d\u5236\u6570\u636e\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8c03\u7528\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u3002\u5355\u4f8b\u6a21\u5f0f\u4e2d\uff0c\u53ea\u8981\u5c06\u6784\u9020\u65b9\u6cd5\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5355\u4f8b\u3002\u4f46\u662f clone \u65b9\u6cd5\u76f4\u63a5\u65e0\u89c6\u79c1\u6709\u8bbf\u95ee\u6743\u9650 \uff0c\u5355\u4f8b\u6a21\u5f0f\u548c\u539f\u578b\u6a21\u5f0f\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u662f\u51b2\u7a81\u7684\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u6027\u80fd\u548c\u5b89\u5168\u8981\u6c42\u7684\u573a\u666f\u3002 \u901a\u8fc7 new \u4ea7\u751f\u4e00\u4e2a\u5bf9\u8c61\u975e\u5e38\u7e41\u7410\u3002 \u4e00\u4e2a\u5bf9\u8c61\u591a\u4e2a\u4fee\u6539\u8005\u7684\u573a\u666f\u3002 \u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u539f\u578b\u6a21\u5f0f\u5f88\u5c11\u5355\u72ec\u51fa\u73b0\uff0c\u4e00\u822c\u662f\u548c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u4e00\u8d77\u51fa\u73b0\uff0c\u901a\u8fc7 clone \u7684\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u7531\u5de5\u5382\u65b9\u6cd5\u63d0\u4f9b\u7ed9\u8c03\u7528\u8005\u3002","title":"\u539f\u578b\u6a21\u5f0f"},{"location":"%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_17","text":"\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 public abstract class Template { public abstract void job (); // \u8ba1\u7b97job\u8fd0\u884c\u7684\u65f6\u95f4 public void calculateTime () { long startTime = System . currentTimeMillis (); job (); long endTime = System . currentTimeMillis (); System . out . println ( \"\u8017\u65f6\uff1a\" + ( endTime - startTime )); } } public class A extends Template { @Override public void job () { int ans = 0 ; for ( int i = 1 ; i < 100000 ; i ++ ) { ans += i ; } } } public class B extends Template { @Override public void job () { int ans = 1 ; for ( int i = 1 ; i < 100000 ; i ++ ) { ans *= i ; } } } public class Main { public static void main ( String [] args ){ new AA (). calculateTime (); new BB (). calculateTime (); } } \u4f18\u70b9\uff1a \u628a\u4e0d\u4fbf\u7684\u884c\u4e3a\u642c\u5230\u8d85\u7c7b\uff0c\u53bb\u9664\u5b50\u7c7b\u7684\u91cd\u590d\u4ee3\u7801\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u7b26\u5408\u5f00\u95ed\u539f\u5219\u3002 \u5c06\u4e0d\u540c\u7684\u4ee3\u7801\u4e0d\u540c\u7684\u5b50\u7c7b\u4e2d\uff0c\u901a\u8fc7\u5bf9\u5b50\u7c7b\u7684\u6269\u5c55\u589e\u52a0\u65b0\u7684\u884c\u4e3a\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u6269\u5c55\u6027\u3002 \u7f3a\u70b9\uff1a \u6bcf\u4e00\u4e2a\u62bd\u8c61\u7c7b\u90fd\u9700\u8981\u4e00\u4e2a\u5b50\u7c7b\u6765\u5b9e\u73b0\uff0c\u8fd9\u6837\u5bfc\u81f4\u7c7b\u7684\u4e2a\u6570\u589e\u52a0\uff0c\u95f4\u63a5\u5730\u589e\u52a0\u4e86\u7cfb\u7edf\u5b9e\u73b0\u7684\u590d\u6742\u5ea6\u3002 \u7ee7\u627f\u5173\u7cfb\u81ea\u8eab\u7f3a\u70b9\uff0c\u5982\u679c\u7236\u7c7b\u6dfb\u52a0\u65b0\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u6240\u6709\u5b50\u7c7b\u90fd\u8981\u6539\u4e00\u904d\u3002 \u4f7f\u7528\u573a\u666f\uff1a \u4e00\u7cfb\u5217\u6b65\u9aa4\u6784\u6210\u7684\u8fc7\u7a0b\uff0c\u4ece\u9ad8\u5c42\u6b21\u770b\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u7ec6\u8282\u7684\u5b9e\u73b0\u4e0a\u4e0d\u540c\u3002","title":"\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/","text":"\u5de5\u4f5c\u7b14\u8bb0 \u00b6 1. \u84dd\u7259\u7684\u542f\u52a8\u4e0e\u5173\u95ed \u00b6 1. \u4f7f\u7528 Service \u00b6 \u5728 MainActivity \u542f\u52a8\u65f6\uff0c\u68c0\u67e5\u6570\u636e\u5e93\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u767b\u5f55\u540e\u7684\u8d26\u6237\u6570\u636e\u3002\u5982\u679c\u6709\uff0c\u5c31\u83b7\u53d6\u8fd9\u4e9b\u8d26\u6237\u7684 uuid \uff0c\u5f00\u542f service \u3002 1 2 3 if ( SERVICE_UUIDs . size != 0 ){ openService () // \u5f00\u542f\u670d\u52a1 } 2. \u5f00\u542f\u84dd\u7259 \u00b6 \u670d\u52a1\u7528\u4e8e\u5b9e\u73b0\u4f4e\u529f\u8017\u84dd\u7259\u5355\u72ec\u7684\u63a7\u5236\uff0c\u5728\u670d\u52a1\u7684 onCreate \u4e2d\u5f00\u542f\u84dd\u7259 1 2 3 4 5 // \u5f00\u542f\u84dd\u7259 override fun onCreate () { super . onCreate () ChatServer . startServer ( application ) } 3. \u5728 BluetoothService \u7684 onDestory \u4e2d\u5173\u95ed\u84dd\u7259\u3002 \u00b6 1 2 3 4 5 6 // \u5173\u95ed\u84dd\u7259 override fun onDestroy () { super . onDestroy () Log . d ( \"BluetoothService\" , \"stop service and bluetooth\" ) ChatServer . stopServer () } 2. \u767b\u5f55\u6a21\u5757 \u00b6 1. \u5f00\u542f\u84dd\u7259 \u00b6 \u5728\u542f\u52a8 MainActivity \u65f6\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u8d26\u6237\u4fe1\u606f\uff0c\u82e5\u5b58\u5728\uff0c\u76f4\u63a5\u5f00\u542f\u84dd\u7259\u3002 1 2 3 4 5 6 7 8 9 10 private fun openService () { val activityManager = getSystemService ( ACTIVITY_SERVICE ) as ActivityManager // \u82e5\u5f53\u524d\u6ca1\u6709\u8fd0\u884c\u7684\u670d\u52a1\uff0c\u5c31\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 if ( activityManager . getRunningServices ( 30 ). size == 0 ) { Log . d ( tag , \"==================== open Service!\" ) messageIntent = Intent ( this , BluetoothService :: class . java ) startService ( messageIntent ) } } 2. \u8fde\u63a5\u72b6\u6001\u6539\u53d8 \u00b6 \u5f53\u8bbe\u5907\u88ab\u8fde\u63a5\u540e\u4f1a\u89e6\u53d1\u56de\u8c03\u4e2d\u7684 onConnectionStateChange \u65b9\u6cd5\u3002 3. \u63a5\u6536\u6d88\u606f \u00b6 \u5f53\u8bbe\u5907\u88ab\u6210\u529f\u8fde\u63a5\u540e\uff0c\u4f1a\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u7528\u6237\u540d\u3002\u5728 onCharacteristicWriteRequest \u4e2d\u63a5\u6536\u8be5\u7528\u6237\u540d\uff0c\u5982\u679c\u8be5\u7528\u6237\u540d\u5339\u914d\u6210\u529f\uff0c\u5c31\u6253\u5f00 DialogActivity \u8ba9\u7528\u6237\u786e\u8ba4\u662f\u5426\u767b\u5f55\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // ChatServer.kt\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u88ab\u89c2\u5bdf\u7684\u6570\u636e val login = MutableLiveData < Boolean > () // \u5728onCharacteristicWriteRequest\u4e2d\u4fee\u6539\u8be5\u53c2\u6570\u7684\u72b6\u6001 login = true ; // MainActivity.kt\u4e2d\u89c2\u5bdf\u767b\u5f55\u60c5\u51b5 val loginObserver = Observer < Boolean > { if ( it == true ){ val loginIntent = Intent ( this , DialogActivity :: class . java ) startActivity ( loginIntent ) overridePendingTransition ( R . anim . bottom_in , R . anim . bottom_silent ) ChatServer . login . value = false } } ChatServer . login . observe ( this , loginObserver ) \u7528\u6237\u70b9\u51fb\u786e\u8ba4\u767b\u5f55\u540e\uff0c\u8c03\u7528 onResponseToClient() \u65b9\u6cd5\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u5bc6\u7801\u3002 1 2 3 4 5 6 7 8 9 // \u5c06\u5bc6\u7801\u4fdd\u5b58\u5230characteristic\u4e2d messageCharacteristic ?. setValue ( key . toByteArray ( Charsets . UTF_8 )) // \u53d1\u9001\u4fe1\u606f gattServer !! . notifyCharacteristicChanged ( currentDevice , messageCharacteristic , false ) // \u5173\u95edDialog if ( activity ?. localClassName == \"DialogActivity\" ) activity . finish () 4. \u8bb0\u5f55\u767b\u5f55\u4fe1\u606f \u00b6 1 AppDatabase . getInstance ( mApp ?. applicationContext !! ). authLogDao (). addAuthLog ( authLog ) 3. \u6ce8\u518c\u6a21\u5757 \u00b6 \u901a\u8fc7\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0b\u89d2\u7684\u6309\u94ae\uff0c\u7533\u8bf7\u6444\u50cf\u5934\u6743\u9650\uff0c\u6253\u5f00\u626b\u7801\u9875\u9762\u3002\u901a\u8fc7\u626b\u63cf\u5ba2\u6237\u7aef\u751f\u6210\u7684\u4e8c\u7ef4\u7801\uff0c\u83b7\u53d6\u8d26\u6237\u4fe1\u606f\u3002\u4fdd\u5b58\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6570\u636e\u5e93\u63d2\u5165\u6210\u529f\u540e\u5f00\u542f\u84dd\u7259\u8fdb\u884c\u5e7f\u64ad\u3002 1. \u4fdd\u5b58\u626b\u7801\u4fe1\u606f \u00b6 1 2 3 4 5 6 7 8 9 10 val id = AppDatabase . getInstance ( this . applicationContext !! ) . accountDao () . addAccount ( accountData ) if ( ! id . equals ( 0 )) // \u6570\u636e\u63d2\u5165\u6210\u529f { val str : String = accountData . serviceUUID . substring ( 1 , 37 ) // \u53d1\u8fc7\u6765\u7684uuid\u4e32\u5916\u6709\u62ec\u53f7 SERVICE_UUIDs . add ( UUID . fromString ( str )) } 2. \u5f00\u542f\u84dd\u7259 \u00b6 \u540c\u767b\u5f55\u6a21\u5757\u7684 openService() \u65b9\u6cd5\u3002\u7531\u4e8e\u626b\u7801\u7ed3\u675f\u540e\u4f1a\u91cd\u65b0\u542f\u52a8 MainActivity \uff0c\u56e0\u6b64\u548c\u767b\u5f55\u6a21\u5757\u4e00\u8d77\u5728 Activity \u542f\u52a8\u65f6\u5f00\u542f\u670d\u52a1\u5373\u53ef\u3002 3. \u63a5\u6536\u6d88\u606f \u00b6 \u540c\u767b\u5f55\u6a21\u5757\u7684 onCharacteristicWriteRequest() \uff0c\u63a5\u6536\u5230\u6d88\u606f\uff1a listening 4. \u53d1\u9001\u6d88\u606f \u00b6 \u5728 onCharacteristicWriteRequest() \u4e2d\uff0c\u8fd4\u56de\u6d88\u606f\uff1a done! 1 2 3 val response = \"done!\" characteristic . setValue ( response . toByteArray ( Charsets . UTF_8 )) gattServer ?. notifyCharacteristicChanged ( device , characteristic , false ); 4. \u95ee\u9898\u4e0e\u89e3\u51b3 \u00b6 1. \u626b\u7801\u540e\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6570\u636e \u00b6 \u6d41\u7a0b \u626b\u7801\u6ce8\u518c\u540e\u4f1a\u83b7\u53d6\u5230\u7528\u6237\u7684\u6ce8\u518c\u4fe1\u606f\uff0c\u5c06\u8be5\u4fe1\u606f\u901a\u8fc7\u5b50\u7ebf\u7a0b\u63d2\u5165\u5230 room \u6570\u636e\u5e93\u4e2d \u5982\u679c\u63d2\u5165\u6210\u529f\uff0c\u5c31\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6d88\u606f\uff1a done! \u95ee\u9898 \u901a\u8fc7 writeCharacteristic \u53d1\u9001\u6570\u636e\u4e0d\u6210\u529f\uff0c\u83b7\u53d6\u5230\u7684\u6570\u636e\u90fd\u662f\u7a7a\u7684\uff0c\u731c\u6d4b\u53ef\u80fd\u7684\u95ee\u9898\u662f\u5728\u5b50\u7ebf\u7a0b\u91cc\u53d1\u9001\u84dd\u7259\u6d88\u606f\u4e0d\u6b63\u786e \u540e\u6539\u5230\u4e3b\u7ebf\u7a0b\uff0c\u5ba2\u6237\u7aef\u4f9d\u65e7\u95ea\u9000\u3002\u4e8e\u662f\u68c0\u67e5\u84dd\u7259\u7c7b\u7684\u5355\u4f8b\u662f\u5426\u51fa\u4e86\u95ee\u9898\uff0c\u4f46\u662f\u5355\u4f8b\u6ca1\u5199\u9519\u3002 \u53c8\u60f3\u6216\u8005\u662f\u901a\u8fc7 writeCharacteristic \u53d1\u9001\u6570\u636e\u7684\u65b9\u5f0f\u4e0d\u5bf9\uff0c\u53e6\u4e00\u79cd\u770b\u5230\u7684\u53d1\u9001\u65b9\u6cd5\u4e3a notifyCharacteristicChanged \u3002 \u5c1d\u8bd5\u901a\u8fc7\u70b9\u51fb\u6309\u94ae\u53d1\u9001\u6570\u636e\uff0c\u8fd9\u6837\u662f\u6210\u529f\u7684\uff0c\u8fd9\u53ef\u4ee5\u786e\u5b9a\u4e0d\u662f\u53c2\u6570\u3001\u56de\u8c03\u4e2d\u53d1\u9001\u6570\u636e\u5bfc\u81f4\u7684\u95ee\u9898\u3002 \u8c03\u8bd5\u540e\u53d1\u73b0\u539f\u9879\u76ee\u5c06\u84dd\u7259\u7684\u542f\u52a8\u548c\u5173\u95ed\u7ed1\u5b9a\u5728\u4e86 MainActivity \u7684\u542f\u52a8\u548c\u9500\u6bc1\u4e2d\uff0c\u5728 MainActivity \u751f\u547d\u5468\u671f\u7ed3\u675f\u540e\u4f1a\u5bfc\u81f4\u84dd\u7259\u65ad\u5f00\uff0c\u4ece\u800c\u5bfc\u81f4\u53d1\u9001\u6d88\u606f\u95ea\u9000\u3002 \u89e3\u51b3\u65b9\u6cd5 \u5c06\u6570\u636e\u5e93\u63d2\u5165\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a LiveData \u76d1\u63a7\uff0c\u5f53\u5b83\u53d8\u5316\u4e14\u4e0d\u4e3a 0 \u65f6\uff0c\u8fdb\u884c\u6570\u636e\u7684\u53d1\u9001 \u521b\u5efa\u4e00\u4e2a Service \u7c7b\uff0c\u5c06\u84dd\u7259\u7684\u5f00\u542f\u4e0e\u5173\u95ed\u548c\u5b83\u7ed1\u5b9a\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u8fd9\u6837 Activity \u4e0d\u7ba1\u600e\u4e48\u5207\u6362\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u84dd\u7259\u7684\u5f00\u5173\u4e86\u3002 Service \u7684\u542f\u52a8\u653e\u5728 Activity \u542f\u52a8\u548c\u5f00\u542f\u76f8\u673a\u7684\u65f6\u5019\uff0c\u5728\u6210\u529f\u53d1\u9001\u5b8c\u6570\u636e\u540e\u5173\u95ed Service \uff0c\u4ece\u800c\u907f\u514d\u4e00\u76f4\u5f00\u542f\u84dd\u7259\u800c\u5360\u7528\u624b\u673a\u8d44\u6e90\u3001\u6d88\u8017\u6027\u80fd\u3002 2. \u591a\u8bbe\u5907\u84dd\u7259\u914d\u5bf9\u95ee\u98981 \u00b6 \u95ee\u9898 \u6709\u597d\u51e0\u4e2a\u624b\u673a\u3001\u7535\u8111\u540c\u4e8b\u626b\u7801\u6ce8\u518c/\u767b\u5f55\u65f6\uff0c\u5982\u4f55\u4fdd\u8bc1\u51c6\u786e\u8fde\u63a5\u4e0a\u81ea\u5df1\u7684\u8bbe\u5907\uff1f \u89e3\u51b3\u65b9\u6cd5 \u7531\u7535\u8111\u7aef\u5728\u751f\u6210\u7684\u4e8c\u7ef4\u7801\u4e2d\u653e\u5165\u4e00\u4e2a\u968f\u673a uuid \uff0c\u5728\u624b\u673a\u7aef\u626b\u7801\u540e\u4fdd\u5b58\u597d\u8fd9\u4e2a uuid \u3002 \u624b\u673a\u7aef\u4f7f\u7528\u8be5 uuid \u5f00\u542f\u84dd\u7259\u670d\u52a1\uff0c\u518d\u7531\u7535\u8111\u7aef\u53bb\u8fde\u63a5\u3002 \u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u7535\u8111\u548c\u624b\u673a\u84dd\u7259\u8fde\u63a5\u7684\u65f6\u5019\uff0c uuid \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u4e86\u3002 3. \u591a\u8bbe\u5907\u84dd\u7259\u914d\u5bf9\u95ee\u98982 \u00b6 \u95ee\u9898 \u7531\u95ee\u98981\u53c8\u4ea7\u751f\u4e86\u65b0\u7684\u95ee\u9898\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u540c\u65f6\u6709\u597d\u51e0\u4e2a\u8bbe\u5907\uff0c\u6bcf\u4e2a\u8bbe\u5907\u5728\u6ce8\u518c\u524d\u90fd\u968f\u673a\u751f\u6210\u4e86\u4e00\u4e2a uuid \u3002\u90a3\u4e48\u5728\u767b\u5f55\u65f6\uff0c\u624b\u673a\u7aef\u5e94\u5f53\u4f7f\u7528\u54ea\u4e2a uuid \u8fdb\u884c\u84dd\u7259\u5e7f\u64ad\uff1f \u89e3\u51b3\u601d\u8def \u53ef\u4ee5\u5168\u90e8\u8fdb\u884c\u5e7f\u64ad\uff0c\u7136\u540e\u8ba9\u5ba2\u6237\u7aef\u67e5\u8be2\u5b83\u9700\u8981\u7684 uuid \u4e3b\u52a8\u8fde\u63a5\u3002 \u8ba9\u7528\u6237\u70b9\u51fb\u8d26\u53f7\uff0c\u901a\u8fc7\u8be5\u8d26\u53f7\u7684\u70b9\u51fb\u6765\u53d1\u5e03\u5bf9\u5e94\u7684 uuid \u670d\u52a1\u3002\u4f46\u662f\u7528\u6237\u5f97\u77e5\u9053\u767b\u5f55\u524d\u8981\u70b9\u51fb\u767b\u5f55\u7684\u8bbe\u5907\u3002 \u4e24\u5c42\u5d4c\u5957\u7684\u65b9\u5f0f\uff0c\u5ba2\u6237\u7aef\u5148\u7528\u9ed8\u8ba4\u7684 uuid \u53d1\u9001\u4e00\u4e2a\u767b\u5f55\u8bf7\u6c42\uff0c\u8fd9\u4e2a\u8bf7\u6c42\u4e2d\u5305\u542b\u5b83\u81ea\u5df1\u7684 uuid \uff0c\u670d\u52a1\u7aef\u67e5\u8be2\u8868\u9879\u4e2d\u6709\u6ca1\u6709\u8fd9\u4e2a uuid \uff0c\u6709\u7684\u8bdd\u5c31\u76f4\u63a5\u8fde\u63a5\uff0c\u6ca1\u6709\u5c31\u4e22\u5f03\u3002 \u8fd9\u4e2a\u60f3\u6cd5\u4e0d\u884c\uff0c\u5ba2\u6237\u7aef\u53ea\u6709\u5efa\u7acb\u4e86\u8fde\u63a5\u624d\u80fd\u53d1\u9001 uuid \uff0c\u4f7f\u7528\u9ed8\u8ba4 uuid \u5efa\u7acb\u8fde\u63a5\u7684\u8bdd\u53c8\u4f1a\u4ea7\u751f\u591a\u8bbe\u5907\u914d\u5bf9\u95ee\u9898\u3002 4. \u84dd\u7259\u4e3b\u8bbe\u5907\u65e0\u6cd5\u88ab\u626b\u63cf\u5230 \u00b6 \u95ee\u9898 \u5728\u67d0\u4e00\u6b21\u4ee3\u7801\u66f4\u65b0\u540e\uff0c\u7528\u540c\u4e8b\u7684\u624b\u673a\u5e7f\u64ad\u84dd\u7259\uff0c\u5176\u4ed6\u8bbe\u5907\u641c\u7d22\u4e0d\u5230\u5b83\u3002\u4f46\u662f\u6211\u7684\u624b\u673a\u53ef\u4ee5\u6b63\u5e38\u5e7f\u64ad\u5e76\u8fde\u63a5\uff0c\u8fd9\u5bfc\u81f4\u4e86\u6211\u4eec\u731c\u6d4b\u662f\u624b\u673a\u7cfb\u7edf\u95ee\u9898\uff0c\u800c\u6ca1\u6709\u7b2c\u4e00\u65f6\u95f4\u67e5\u770b\u65e5\u5fd7\u6709\u6ca1\u6709\u8f93\u51fa\u62a5\u9519\u3002 \u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f uuid \u751f\u6210\u4e0d\u6b63\u786e\u7684\u95ee\u9898\uff0c\u4f46\u662f\u7f51\u4e0a\u90fd\u662f\u968f\u673a\u751f\u6210\u7684 uuid \u3002 \u968f\u540e\u53d1\u73b0\u6211\u7684\u624b\u673a\u662f\u9e3f\u8499\u7cfb\u7edf\uff0c\u540c\u4e8b\u7684\u662f Android \u7cfb\u7edf\uff0c\u6240\u4ee5\u731c\u6d4b\u662f\u4e0d\u662f\u7cfb\u7edf\u7684\u95ee\u9898\uff0c\u4f46\u4f9d\u65e7\u4e0d\u662f\u8fd9\u4e2a\u95ee\u9898\u3002 \u7ecf\u8fc7\u6392\u67e5\uff0c\u53d1\u73b0\u662f\u670d\u52a1\u7aef\u5e7f\u64ad\u5931\u8d25\u4e86\uff0c\u62a5\u9519 ADVERTISE_FAILED_DATA_TOO_LARGE \u3002 \u89e3\u51b3\u95ee\u9898 \u6700\u540e\u53d1\u73b0\u662f\u56e0\u4e3a\u5e7f\u64ad\u6570\u636e\u5305\u62ec uuid + device name \uff0c\u5b57\u6bb5\u592a\u957f\u5bfc\u81f4\u5e7f\u64ad\u5931\u8d25\u3002\u5e94\u5f53\u53d6\u6d88\u53d1\u9001\u8bbe\u5907\u540d\u79f0\u3002","title":"\u5de5\u4f5c\u95ee\u9898\u8bb0\u5f55"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#_1","text":"","title":"\u5de5\u4f5c\u7b14\u8bb0"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#1","text":"","title":"1.  \u84dd\u7259\u7684\u542f\u52a8\u4e0e\u5173\u95ed"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#1-service","text":"\u5728 MainActivity \u542f\u52a8\u65f6\uff0c\u68c0\u67e5\u6570\u636e\u5e93\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u767b\u5f55\u540e\u7684\u8d26\u6237\u6570\u636e\u3002\u5982\u679c\u6709\uff0c\u5c31\u83b7\u53d6\u8fd9\u4e9b\u8d26\u6237\u7684 uuid \uff0c\u5f00\u542f service \u3002 1 2 3 if ( SERVICE_UUIDs . size != 0 ){ openService () // \u5f00\u542f\u670d\u52a1 }","title":"1. \u4f7f\u7528Service"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#2","text":"\u670d\u52a1\u7528\u4e8e\u5b9e\u73b0\u4f4e\u529f\u8017\u84dd\u7259\u5355\u72ec\u7684\u63a7\u5236\uff0c\u5728\u670d\u52a1\u7684 onCreate \u4e2d\u5f00\u542f\u84dd\u7259 1 2 3 4 5 // \u5f00\u542f\u84dd\u7259 override fun onCreate () { super . onCreate () ChatServer . startServer ( application ) }","title":"2. \u5f00\u542f\u84dd\u7259"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#3-bluetoothserviceondestory","text":"1 2 3 4 5 6 // \u5173\u95ed\u84dd\u7259 override fun onDestroy () { super . onDestroy () Log . d ( \"BluetoothService\" , \"stop service and bluetooth\" ) ChatServer . stopServer () }","title":"3. \u5728BluetoothService\u7684onDestory\u4e2d\u5173\u95ed\u84dd\u7259\u3002"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#2_1","text":"","title":"2. \u767b\u5f55\u6a21\u5757"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#1_1","text":"\u5728\u542f\u52a8 MainActivity \u65f6\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u8d26\u6237\u4fe1\u606f\uff0c\u82e5\u5b58\u5728\uff0c\u76f4\u63a5\u5f00\u542f\u84dd\u7259\u3002 1 2 3 4 5 6 7 8 9 10 private fun openService () { val activityManager = getSystemService ( ACTIVITY_SERVICE ) as ActivityManager // \u82e5\u5f53\u524d\u6ca1\u6709\u8fd0\u884c\u7684\u670d\u52a1\uff0c\u5c31\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 if ( activityManager . getRunningServices ( 30 ). size == 0 ) { Log . d ( tag , \"==================== open Service!\" ) messageIntent = Intent ( this , BluetoothService :: class . java ) startService ( messageIntent ) } }","title":"1. \u5f00\u542f\u84dd\u7259"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#2_2","text":"\u5f53\u8bbe\u5907\u88ab\u8fde\u63a5\u540e\u4f1a\u89e6\u53d1\u56de\u8c03\u4e2d\u7684 onConnectionStateChange \u65b9\u6cd5\u3002","title":"2. \u8fde\u63a5\u72b6\u6001\u6539\u53d8"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#3","text":"\u5f53\u8bbe\u5907\u88ab\u6210\u529f\u8fde\u63a5\u540e\uff0c\u4f1a\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u7528\u6237\u540d\u3002\u5728 onCharacteristicWriteRequest \u4e2d\u63a5\u6536\u8be5\u7528\u6237\u540d\uff0c\u5982\u679c\u8be5\u7528\u6237\u540d\u5339\u914d\u6210\u529f\uff0c\u5c31\u6253\u5f00 DialogActivity \u8ba9\u7528\u6237\u786e\u8ba4\u662f\u5426\u767b\u5f55\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // ChatServer.kt\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u88ab\u89c2\u5bdf\u7684\u6570\u636e val login = MutableLiveData < Boolean > () // \u5728onCharacteristicWriteRequest\u4e2d\u4fee\u6539\u8be5\u53c2\u6570\u7684\u72b6\u6001 login = true ; // MainActivity.kt\u4e2d\u89c2\u5bdf\u767b\u5f55\u60c5\u51b5 val loginObserver = Observer < Boolean > { if ( it == true ){ val loginIntent = Intent ( this , DialogActivity :: class . java ) startActivity ( loginIntent ) overridePendingTransition ( R . anim . bottom_in , R . anim . bottom_silent ) ChatServer . login . value = false } } ChatServer . login . observe ( this , loginObserver ) \u7528\u6237\u70b9\u51fb\u786e\u8ba4\u767b\u5f55\u540e\uff0c\u8c03\u7528 onResponseToClient() \u65b9\u6cd5\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u5bc6\u7801\u3002 1 2 3 4 5 6 7 8 9 // \u5c06\u5bc6\u7801\u4fdd\u5b58\u5230characteristic\u4e2d messageCharacteristic ?. setValue ( key . toByteArray ( Charsets . UTF_8 )) // \u53d1\u9001\u4fe1\u606f gattServer !! . notifyCharacteristicChanged ( currentDevice , messageCharacteristic , false ) // \u5173\u95edDialog if ( activity ?. localClassName == \"DialogActivity\" ) activity . finish ()","title":"3. \u63a5\u6536\u6d88\u606f"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#4","text":"1 AppDatabase . getInstance ( mApp ?. applicationContext !! ). authLogDao (). addAuthLog ( authLog )","title":"4. \u8bb0\u5f55\u767b\u5f55\u4fe1\u606f"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#3_1","text":"\u901a\u8fc7\u70b9\u51fb\u5c4f\u5e55\u53f3\u4e0b\u89d2\u7684\u6309\u94ae\uff0c\u7533\u8bf7\u6444\u50cf\u5934\u6743\u9650\uff0c\u6253\u5f00\u626b\u7801\u9875\u9762\u3002\u901a\u8fc7\u626b\u63cf\u5ba2\u6237\u7aef\u751f\u6210\u7684\u4e8c\u7ef4\u7801\uff0c\u83b7\u53d6\u8d26\u6237\u4fe1\u606f\u3002\u4fdd\u5b58\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6570\u636e\u5e93\u63d2\u5165\u6210\u529f\u540e\u5f00\u542f\u84dd\u7259\u8fdb\u884c\u5e7f\u64ad\u3002","title":"3. \u6ce8\u518c\u6a21\u5757"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#1_2","text":"1 2 3 4 5 6 7 8 9 10 val id = AppDatabase . getInstance ( this . applicationContext !! ) . accountDao () . addAccount ( accountData ) if ( ! id . equals ( 0 )) // \u6570\u636e\u63d2\u5165\u6210\u529f { val str : String = accountData . serviceUUID . substring ( 1 , 37 ) // \u53d1\u8fc7\u6765\u7684uuid\u4e32\u5916\u6709\u62ec\u53f7 SERVICE_UUIDs . add ( UUID . fromString ( str )) }","title":"1. \u4fdd\u5b58\u626b\u7801\u4fe1\u606f"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#2_3","text":"\u540c\u767b\u5f55\u6a21\u5757\u7684 openService() \u65b9\u6cd5\u3002\u7531\u4e8e\u626b\u7801\u7ed3\u675f\u540e\u4f1a\u91cd\u65b0\u542f\u52a8 MainActivity \uff0c\u56e0\u6b64\u548c\u767b\u5f55\u6a21\u5757\u4e00\u8d77\u5728 Activity \u542f\u52a8\u65f6\u5f00\u542f\u670d\u52a1\u5373\u53ef\u3002","title":"2. \u5f00\u542f\u84dd\u7259"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#3_2","text":"\u540c\u767b\u5f55\u6a21\u5757\u7684 onCharacteristicWriteRequest() \uff0c\u63a5\u6536\u5230\u6d88\u606f\uff1a listening","title":"3. \u63a5\u6536\u6d88\u606f"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#4_1","text":"\u5728 onCharacteristicWriteRequest() \u4e2d\uff0c\u8fd4\u56de\u6d88\u606f\uff1a done! 1 2 3 val response = \"done!\" characteristic . setValue ( response . toByteArray ( Charsets . UTF_8 )) gattServer ?. notifyCharacteristicChanged ( device , characteristic , false );","title":"4. \u53d1\u9001\u6d88\u606f"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#4_2","text":"","title":"4. \u95ee\u9898\u4e0e\u89e3\u51b3"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#1_3","text":"\u6d41\u7a0b \u626b\u7801\u6ce8\u518c\u540e\u4f1a\u83b7\u53d6\u5230\u7528\u6237\u7684\u6ce8\u518c\u4fe1\u606f\uff0c\u5c06\u8be5\u4fe1\u606f\u901a\u8fc7\u5b50\u7ebf\u7a0b\u63d2\u5165\u5230 room \u6570\u636e\u5e93\u4e2d \u5982\u679c\u63d2\u5165\u6210\u529f\uff0c\u5c31\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6d88\u606f\uff1a done! \u95ee\u9898 \u901a\u8fc7 writeCharacteristic \u53d1\u9001\u6570\u636e\u4e0d\u6210\u529f\uff0c\u83b7\u53d6\u5230\u7684\u6570\u636e\u90fd\u662f\u7a7a\u7684\uff0c\u731c\u6d4b\u53ef\u80fd\u7684\u95ee\u9898\u662f\u5728\u5b50\u7ebf\u7a0b\u91cc\u53d1\u9001\u84dd\u7259\u6d88\u606f\u4e0d\u6b63\u786e \u540e\u6539\u5230\u4e3b\u7ebf\u7a0b\uff0c\u5ba2\u6237\u7aef\u4f9d\u65e7\u95ea\u9000\u3002\u4e8e\u662f\u68c0\u67e5\u84dd\u7259\u7c7b\u7684\u5355\u4f8b\u662f\u5426\u51fa\u4e86\u95ee\u9898\uff0c\u4f46\u662f\u5355\u4f8b\u6ca1\u5199\u9519\u3002 \u53c8\u60f3\u6216\u8005\u662f\u901a\u8fc7 writeCharacteristic \u53d1\u9001\u6570\u636e\u7684\u65b9\u5f0f\u4e0d\u5bf9\uff0c\u53e6\u4e00\u79cd\u770b\u5230\u7684\u53d1\u9001\u65b9\u6cd5\u4e3a notifyCharacteristicChanged \u3002 \u5c1d\u8bd5\u901a\u8fc7\u70b9\u51fb\u6309\u94ae\u53d1\u9001\u6570\u636e\uff0c\u8fd9\u6837\u662f\u6210\u529f\u7684\uff0c\u8fd9\u53ef\u4ee5\u786e\u5b9a\u4e0d\u662f\u53c2\u6570\u3001\u56de\u8c03\u4e2d\u53d1\u9001\u6570\u636e\u5bfc\u81f4\u7684\u95ee\u9898\u3002 \u8c03\u8bd5\u540e\u53d1\u73b0\u539f\u9879\u76ee\u5c06\u84dd\u7259\u7684\u542f\u52a8\u548c\u5173\u95ed\u7ed1\u5b9a\u5728\u4e86 MainActivity \u7684\u542f\u52a8\u548c\u9500\u6bc1\u4e2d\uff0c\u5728 MainActivity \u751f\u547d\u5468\u671f\u7ed3\u675f\u540e\u4f1a\u5bfc\u81f4\u84dd\u7259\u65ad\u5f00\uff0c\u4ece\u800c\u5bfc\u81f4\u53d1\u9001\u6d88\u606f\u95ea\u9000\u3002 \u89e3\u51b3\u65b9\u6cd5 \u5c06\u6570\u636e\u5e93\u63d2\u5165\u7684\u8fd4\u56de\u503c\u4f5c\u4e3a LiveData \u76d1\u63a7\uff0c\u5f53\u5b83\u53d8\u5316\u4e14\u4e0d\u4e3a 0 \u65f6\uff0c\u8fdb\u884c\u6570\u636e\u7684\u53d1\u9001 \u521b\u5efa\u4e00\u4e2a Service \u7c7b\uff0c\u5c06\u84dd\u7259\u7684\u5f00\u542f\u4e0e\u5173\u95ed\u548c\u5b83\u7ed1\u5b9a\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u8fd9\u6837 Activity \u4e0d\u7ba1\u600e\u4e48\u5207\u6362\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u84dd\u7259\u7684\u5f00\u5173\u4e86\u3002 Service \u7684\u542f\u52a8\u653e\u5728 Activity \u542f\u52a8\u548c\u5f00\u542f\u76f8\u673a\u7684\u65f6\u5019\uff0c\u5728\u6210\u529f\u53d1\u9001\u5b8c\u6570\u636e\u540e\u5173\u95ed Service \uff0c\u4ece\u800c\u907f\u514d\u4e00\u76f4\u5f00\u542f\u84dd\u7259\u800c\u5360\u7528\u624b\u673a\u8d44\u6e90\u3001\u6d88\u8017\u6027\u80fd\u3002","title":"1. \u626b\u7801\u540e\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6570\u636e"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#2-1","text":"\u95ee\u9898 \u6709\u597d\u51e0\u4e2a\u624b\u673a\u3001\u7535\u8111\u540c\u4e8b\u626b\u7801\u6ce8\u518c/\u767b\u5f55\u65f6\uff0c\u5982\u4f55\u4fdd\u8bc1\u51c6\u786e\u8fde\u63a5\u4e0a\u81ea\u5df1\u7684\u8bbe\u5907\uff1f \u89e3\u51b3\u65b9\u6cd5 \u7531\u7535\u8111\u7aef\u5728\u751f\u6210\u7684\u4e8c\u7ef4\u7801\u4e2d\u653e\u5165\u4e00\u4e2a\u968f\u673a uuid \uff0c\u5728\u624b\u673a\u7aef\u626b\u7801\u540e\u4fdd\u5b58\u597d\u8fd9\u4e2a uuid \u3002 \u624b\u673a\u7aef\u4f7f\u7528\u8be5 uuid \u5f00\u542f\u84dd\u7259\u670d\u52a1\uff0c\u518d\u7531\u7535\u8111\u7aef\u53bb\u8fde\u63a5\u3002 \u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u7535\u8111\u548c\u624b\u673a\u84dd\u7259\u8fde\u63a5\u7684\u65f6\u5019\uff0c uuid \u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u4e86\u3002","title":"2. \u591a\u8bbe\u5907\u84dd\u7259\u914d\u5bf9\u95ee\u98981"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#3-2","text":"\u95ee\u9898 \u7531\u95ee\u98981\u53c8\u4ea7\u751f\u4e86\u65b0\u7684\u95ee\u9898\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u540c\u65f6\u6709\u597d\u51e0\u4e2a\u8bbe\u5907\uff0c\u6bcf\u4e2a\u8bbe\u5907\u5728\u6ce8\u518c\u524d\u90fd\u968f\u673a\u751f\u6210\u4e86\u4e00\u4e2a uuid \u3002\u90a3\u4e48\u5728\u767b\u5f55\u65f6\uff0c\u624b\u673a\u7aef\u5e94\u5f53\u4f7f\u7528\u54ea\u4e2a uuid \u8fdb\u884c\u84dd\u7259\u5e7f\u64ad\uff1f \u89e3\u51b3\u601d\u8def \u53ef\u4ee5\u5168\u90e8\u8fdb\u884c\u5e7f\u64ad\uff0c\u7136\u540e\u8ba9\u5ba2\u6237\u7aef\u67e5\u8be2\u5b83\u9700\u8981\u7684 uuid \u4e3b\u52a8\u8fde\u63a5\u3002 \u8ba9\u7528\u6237\u70b9\u51fb\u8d26\u53f7\uff0c\u901a\u8fc7\u8be5\u8d26\u53f7\u7684\u70b9\u51fb\u6765\u53d1\u5e03\u5bf9\u5e94\u7684 uuid \u670d\u52a1\u3002\u4f46\u662f\u7528\u6237\u5f97\u77e5\u9053\u767b\u5f55\u524d\u8981\u70b9\u51fb\u767b\u5f55\u7684\u8bbe\u5907\u3002 \u4e24\u5c42\u5d4c\u5957\u7684\u65b9\u5f0f\uff0c\u5ba2\u6237\u7aef\u5148\u7528\u9ed8\u8ba4\u7684 uuid \u53d1\u9001\u4e00\u4e2a\u767b\u5f55\u8bf7\u6c42\uff0c\u8fd9\u4e2a\u8bf7\u6c42\u4e2d\u5305\u542b\u5b83\u81ea\u5df1\u7684 uuid \uff0c\u670d\u52a1\u7aef\u67e5\u8be2\u8868\u9879\u4e2d\u6709\u6ca1\u6709\u8fd9\u4e2a uuid \uff0c\u6709\u7684\u8bdd\u5c31\u76f4\u63a5\u8fde\u63a5\uff0c\u6ca1\u6709\u5c31\u4e22\u5f03\u3002 \u8fd9\u4e2a\u60f3\u6cd5\u4e0d\u884c\uff0c\u5ba2\u6237\u7aef\u53ea\u6709\u5efa\u7acb\u4e86\u8fde\u63a5\u624d\u80fd\u53d1\u9001 uuid \uff0c\u4f7f\u7528\u9ed8\u8ba4 uuid \u5efa\u7acb\u8fde\u63a5\u7684\u8bdd\u53c8\u4f1a\u4ea7\u751f\u591a\u8bbe\u5907\u914d\u5bf9\u95ee\u9898\u3002","title":"3. \u591a\u8bbe\u5907\u84dd\u7259\u914d\u5bf9\u95ee\u98982"},{"location":"%E5%B7%A5%E4%BD%9C%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/#4_3","text":"\u95ee\u9898 \u5728\u67d0\u4e00\u6b21\u4ee3\u7801\u66f4\u65b0\u540e\uff0c\u7528\u540c\u4e8b\u7684\u624b\u673a\u5e7f\u64ad\u84dd\u7259\uff0c\u5176\u4ed6\u8bbe\u5907\u641c\u7d22\u4e0d\u5230\u5b83\u3002\u4f46\u662f\u6211\u7684\u624b\u673a\u53ef\u4ee5\u6b63\u5e38\u5e7f\u64ad\u5e76\u8fde\u63a5\uff0c\u8fd9\u5bfc\u81f4\u4e86\u6211\u4eec\u731c\u6d4b\u662f\u624b\u673a\u7cfb\u7edf\u95ee\u9898\uff0c\u800c\u6ca1\u6709\u7b2c\u4e00\u65f6\u95f4\u67e5\u770b\u65e5\u5fd7\u6709\u6ca1\u6709\u8f93\u51fa\u62a5\u9519\u3002 \u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f uuid \u751f\u6210\u4e0d\u6b63\u786e\u7684\u95ee\u9898\uff0c\u4f46\u662f\u7f51\u4e0a\u90fd\u662f\u968f\u673a\u751f\u6210\u7684 uuid \u3002 \u968f\u540e\u53d1\u73b0\u6211\u7684\u624b\u673a\u662f\u9e3f\u8499\u7cfb\u7edf\uff0c\u540c\u4e8b\u7684\u662f Android \u7cfb\u7edf\uff0c\u6240\u4ee5\u731c\u6d4b\u662f\u4e0d\u662f\u7cfb\u7edf\u7684\u95ee\u9898\uff0c\u4f46\u4f9d\u65e7\u4e0d\u662f\u8fd9\u4e2a\u95ee\u9898\u3002 \u7ecf\u8fc7\u6392\u67e5\uff0c\u53d1\u73b0\u662f\u670d\u52a1\u7aef\u5e7f\u64ad\u5931\u8d25\u4e86\uff0c\u62a5\u9519 ADVERTISE_FAILED_DATA_TOO_LARGE \u3002 \u89e3\u51b3\u95ee\u9898 \u6700\u540e\u53d1\u73b0\u662f\u56e0\u4e3a\u5e7f\u64ad\u6570\u636e\u5305\u62ec uuid + device name \uff0c\u5b57\u6bb5\u592a\u957f\u5bfc\u81f4\u5e7f\u64ad\u5931\u8d25\u3002\u5e94\u5f53\u53d6\u6d88\u53d1\u9001\u8bbe\u5907\u540d\u79f0\u3002","title":"4. \u84dd\u7259\u4e3b\u8bbe\u5907\u65e0\u6cd5\u88ab\u626b\u63cf\u5230"}]}